// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package org.controlsfx.validation;

/**
 * {@link ValidationSupport}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version controlsfx-8.20.7.jar
 * @param <Z> 要建構的物件型態(需繼承{@link ValidationSupport})
 * @param <B> 建構器本身的型態(需繼承{@link ValidationSupportBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class ValidationSupportBuilder<Z extends ValidationSupport, B extends ValidationSupportBuilder<Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
        implements ValidationSupportBuilderExt<Z, B>
{

    private boolean hasErrorDecorationEnabled;
    private boolean valErrorDecorationEnabled;

    private boolean hasValidationDecorator;
    private org.controlsfx.validation.decoration.ValidationDecoration valValidationDecorator;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasErrorDecorationEnabled)
            instance.setErrorDecorationEnabled(this.valErrorDecorationEnabled);
        if (this.hasValidationDecorator)
            instance.setValidationDecorator(this.valValidationDecorator);
    }

    /**
     * 設定屬性{@link ValidationSupport#setErrorDecorationEnabled(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B errorDecorationEnabled(boolean value)
    {
        this.hasErrorDecorationEnabled = true;
        this.valErrorDecorationEnabled = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link ValidationSupport#setValidationDecorator(org.controlsfx.validation.decoration.ValidationDecoration)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B validationDecorator(org.controlsfx.validation.decoration.ValidationDecoration value)
    {
        this.hasValidationDecorator = true;
        this.valValidationDecorator = value;
        return (B) this;
    }

    /**
     * 建構{@link ValidationSupport}物件
     *
     * @return 新的{@link ValidationSupport}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public ValidationSupport build()
    {
        ValidationSupport instance = new ValidationSupport();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
