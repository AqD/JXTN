// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package org.controlsfx.property;

/**
 * {@link BeanProperty}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version controlsfx-8.0.6_20.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class BeanPropertyBuilder<Z extends BeanProperty, B extends BeanPropertyBuilder<Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
{

    protected boolean hasEditable;
    protected boolean valEditable;

    protected boolean hasValue;
    protected java.lang.Object valValue;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasEditable)
            instance.setEditable(this.valEditable);
        if (this.hasValue)
            instance.setValue(this.valValue);
    }

    /**
     * 設定屬性{@link BeanProperty#setEditable}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B editable(boolean value)
    {
        this.hasEditable = true;
        this.valEditable = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link BeanProperty#setValue}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B value(java.lang.Object value)
    {
        this.hasValue = true;
        this.valValue = value;
        return (B) this;
    }

    /**
     * 建構{@link BeanProperty}物件
     *
     * @return 新的{@link BeanProperty}物件實體
     */
    @SuppressWarnings("unchecked")
    public BeanProperty build(java.lang.Object arg0, java.beans.PropertyDescriptor arg1)
    {
        BeanProperty instance = new BeanProperty(arg0, arg1);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
