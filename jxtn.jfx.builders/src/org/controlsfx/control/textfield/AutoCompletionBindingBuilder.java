// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package org.controlsfx.control.textfield;

/**
 * {@link AutoCompletionBinding}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version controlsfx-8.0.6.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class AutoCompletionBindingBuilder<T extends java.lang.Object, Z extends AutoCompletionBinding<T>, B extends AutoCompletionBindingBuilder<T, Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
{
    private boolean applied;

    protected boolean hasOnAutoCompleted;
    protected javafx.event.EventHandler<org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent<T>> valOnAutoCompleted;

    protected boolean hasUserInput;
    protected java.lang.String valUserInput;

    protected boolean boundOnAutoCompleted;
    protected javafx.beans.value.ObservableValue<? extends javafx.event.EventHandler<org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent<T>>> obsrvOnAutoCompleted;
    public void applyTo(AutoCompletionBinding<T> instance)
    {
        super.applyTo(instance);
        if (this.applied)
            throw new IllegalStateException();
        if (this.hasOnAutoCompleted)
            instance.setOnAutoCompleted(this.valOnAutoCompleted);
        if (this.hasUserInput)
            instance.setUserInput(this.valUserInput);
        if (this.boundOnAutoCompleted)
            instance.onAutoCompletedProperty().bind(this.obsrvOnAutoCompleted);
        //
        this.applied = true;
    }

    @SuppressWarnings("unchecked")
    public B onAutoCompleted(javafx.event.EventHandler<org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent<T>> value)
    {
        this.hasOnAutoCompleted = true;
        this.valOnAutoCompleted = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B userInput(java.lang.String value)
    {
        this.hasUserInput = true;
        this.valUserInput = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B bindOnAutoCompleted(javafx.beans.value.ObservableValue<? extends javafx.event.EventHandler<org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent<T>>> source)
    {
        assert (source != null);
        this.boundOnAutoCompleted = true;
        this.obsrvOnAutoCompleted = source;
        return (B) this;
    }
}
