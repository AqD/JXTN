// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package jxtn.jfx.builders;

/**
 * 建構器彙總。
 *
 * @author JarReflectionDataLoader-1.0.0
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public final class JFX
{
    private JFX() {}

    /**
     * 建立新的{@link javafx.scene.AmbientLight}建構器。
     *
     * @return 新的{@link javafx.scene.AmbientLightBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.AmbientLightBuilder<javafx.scene.AmbientLight, ?> ambientLight()
    {
        return new javafx.scene.AmbientLightBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.Group}建構器。
     *
     * @return 新的{@link javafx.scene.GroupBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.GroupBuilder<javafx.scene.Group, ?> group()
    {
        return new javafx.scene.GroupBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.ImageCursor}建構器。
     *
     * @return 新的{@link javafx.scene.ImageCursorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.ImageCursorBuilder<javafx.scene.ImageCursor, ?> imageCursor()
    {
        return new javafx.scene.ImageCursorBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.ParallelCamera}建構器。
     *
     * @return 新的{@link javafx.scene.ParallelCameraBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.ParallelCameraBuilder<javafx.scene.ParallelCamera, ?> parallelCamera()
    {
        return new javafx.scene.ParallelCameraBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.PerspectiveCamera}建構器。
     *
     * @return 新的{@link javafx.scene.PerspectiveCameraBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.PerspectiveCameraBuilder<javafx.scene.PerspectiveCamera, ?> perspectiveCamera()
    {
        return new javafx.scene.PerspectiveCameraBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.PointLight}建構器。
     *
     * @return 新的{@link javafx.scene.PointLightBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.PointLightBuilder<javafx.scene.PointLight, ?> pointLight()
    {
        return new javafx.scene.PointLightBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.Scene}建構器。
     *
     * @return 新的{@link javafx.scene.SceneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.SceneBuilder<javafx.scene.Scene, ?> scene()
    {
        return new javafx.scene.SceneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.SnapshotParameters}建構器。
     *
     * @return 新的{@link javafx.scene.SnapshotParametersBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.SnapshotParametersBuilder<javafx.scene.SnapshotParameters, ?> snapshotParameters()
    {
        return new javafx.scene.SnapshotParametersBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.SubScene}建構器。
     *
     * @return 新的{@link javafx.scene.SubSceneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.SubSceneBuilder<javafx.scene.SubScene, ?> subScene()
    {
        return new javafx.scene.SubSceneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.canvas.Canvas}建構器。
     *
     * @return 新的{@link javafx.scene.canvas.CanvasBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.canvas.CanvasBuilder<javafx.scene.canvas.Canvas, ?> canvas()
    {
        return new javafx.scene.canvas.CanvasBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.AreaChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.AreaChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.AreaChartBuilder<X, Y, javafx.scene.chart.AreaChart<X, Y>, ?> areaChart()
    {
        return new javafx.scene.chart.AreaChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.Axis}建構器。
     *
     * @return 新的{@link javafx.scene.chart.AxisBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.chart.AxisBuilder<T, javafx.scene.chart.Axis<T>, ?> axis()
    {
        return new javafx.scene.chart.AxisBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.BarChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.BarChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.BarChartBuilder<X, Y, javafx.scene.chart.BarChart<X, Y>, ?> barChart()
    {
        return new javafx.scene.chart.BarChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.BubbleChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.BubbleChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.BubbleChartBuilder<X, Y, javafx.scene.chart.BubbleChart<X, Y>, ?> bubbleChart()
    {
        return new javafx.scene.chart.BubbleChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.CategoryAxis}建構器。
     *
     * @return 新的{@link javafx.scene.chart.CategoryAxisBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.chart.CategoryAxisBuilder<javafx.scene.chart.CategoryAxis, ?> categoryAxis()
    {
        return new javafx.scene.chart.CategoryAxisBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.Chart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.ChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.chart.ChartBuilder<javafx.scene.chart.Chart, ?> chart()
    {
        return new javafx.scene.chart.ChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.LineChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.LineChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.LineChartBuilder<X, Y, javafx.scene.chart.LineChart<X, Y>, ?> lineChart()
    {
        return new javafx.scene.chart.LineChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.NumberAxis}建構器。
     *
     * @return 新的{@link javafx.scene.chart.NumberAxisBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.chart.NumberAxisBuilder<javafx.scene.chart.NumberAxis, ?> numberAxis()
    {
        return new javafx.scene.chart.NumberAxisBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.PieChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.PieChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.chart.PieChartBuilder<javafx.scene.chart.PieChart, ?> pieChart()
    {
        return new javafx.scene.chart.PieChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.ScatterChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.ScatterChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.ScatterChartBuilder<X, Y, javafx.scene.chart.ScatterChart<X, Y>, ?> scatterChart()
    {
        return new javafx.scene.chart.ScatterChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.StackedAreaChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.StackedAreaChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.StackedAreaChartBuilder<X, Y, javafx.scene.chart.StackedAreaChart<X, Y>, ?> stackedAreaChart()
    {
        return new javafx.scene.chart.StackedAreaChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.StackedBarChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.StackedBarChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.StackedBarChartBuilder<X, Y, javafx.scene.chart.StackedBarChart<X, Y>, ?> stackedBarChart()
    {
        return new javafx.scene.chart.StackedBarChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.ValueAxis}建構器。
     *
     * @return 新的{@link javafx.scene.chart.ValueAxisBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Number> javafx.scene.chart.ValueAxisBuilder<T, javafx.scene.chart.ValueAxis<T>, ?> valueAxis()
    {
        return new javafx.scene.chart.ValueAxisBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.chart.XYChart}建構器。
     *
     * @return 新的{@link javafx.scene.chart.XYChartBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <X extends java.lang.Object, Y extends java.lang.Object> javafx.scene.chart.XYChartBuilder<X, Y, javafx.scene.chart.XYChart<X, Y>, ?> xYChart()
    {
        return new javafx.scene.chart.XYChartBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Accordion}建構器。
     *
     * @return 新的{@link javafx.scene.control.AccordionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.AccordionBuilder<javafx.scene.control.Accordion, ?> accordion()
    {
        return new javafx.scene.control.AccordionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Button}建構器。
     *
     * @return 新的{@link javafx.scene.control.ButtonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ButtonBuilder<javafx.scene.control.Button, ?> button()
    {
        return new javafx.scene.control.ButtonBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ButtonBase}建構器。
     *
     * @return 新的{@link javafx.scene.control.ButtonBaseBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ButtonBaseBuilder<javafx.scene.control.ButtonBase, ?> buttonBase()
    {
        return new javafx.scene.control.ButtonBaseBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Cell}建構器。
     *
     * @return 新的{@link javafx.scene.control.CellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.CellBuilder<T, javafx.scene.control.Cell<T>, ?> cell()
    {
        return new javafx.scene.control.CellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.CheckBox}建構器。
     *
     * @return 新的{@link javafx.scene.control.CheckBoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.CheckBoxBuilder<javafx.scene.control.CheckBox, ?> checkBox()
    {
        return new javafx.scene.control.CheckBoxBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.CheckBoxTreeItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.CheckBoxTreeItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.CheckBoxTreeItemBuilder<T, javafx.scene.control.CheckBoxTreeItem<T>, ?> checkBoxTreeItem()
    {
        return new javafx.scene.control.CheckBoxTreeItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.CheckMenuItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.CheckMenuItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.CheckMenuItemBuilder<javafx.scene.control.CheckMenuItem, ?> checkMenuItem()
    {
        return new javafx.scene.control.CheckMenuItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ChoiceBox}建構器。
     *
     * @return 新的{@link javafx.scene.control.ChoiceBoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.ChoiceBoxBuilder<T, javafx.scene.control.ChoiceBox<T>, ?> choiceBox()
    {
        return new javafx.scene.control.ChoiceBoxBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ColorPicker}建構器。
     *
     * @return 新的{@link javafx.scene.control.ColorPickerBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ColorPickerBuilder<javafx.scene.control.ColorPicker, ?> colorPicker()
    {
        return new javafx.scene.control.ColorPickerBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ComboBox}建構器。
     *
     * @return 新的{@link javafx.scene.control.ComboBoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.ComboBoxBuilder<T, javafx.scene.control.ComboBox<T>, ?> comboBox()
    {
        return new javafx.scene.control.ComboBoxBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ComboBoxBase}建構器。
     *
     * @return 新的{@link javafx.scene.control.ComboBoxBaseBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.ComboBoxBaseBuilder<T, javafx.scene.control.ComboBoxBase<T>, ?> comboBoxBase()
    {
        return new javafx.scene.control.ComboBoxBaseBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ContextMenu}建構器。
     *
     * @return 新的{@link javafx.scene.control.ContextMenuBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ContextMenuBuilder<javafx.scene.control.ContextMenu, ?> contextMenu()
    {
        return new javafx.scene.control.ContextMenuBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.CustomMenuItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.CustomMenuItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.CustomMenuItemBuilder<javafx.scene.control.CustomMenuItem, ?> customMenuItem()
    {
        return new javafx.scene.control.CustomMenuItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.DateCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.DateCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.DateCellBuilder<javafx.scene.control.DateCell, ?> dateCell()
    {
        return new javafx.scene.control.DateCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.DatePicker}建構器。
     *
     * @return 新的{@link javafx.scene.control.DatePickerBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.DatePickerBuilder<javafx.scene.control.DatePicker, ?> datePicker()
    {
        return new javafx.scene.control.DatePickerBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Hyperlink}建構器。
     *
     * @return 新的{@link javafx.scene.control.HyperlinkBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.HyperlinkBuilder<javafx.scene.control.Hyperlink, ?> hyperlink()
    {
        return new javafx.scene.control.HyperlinkBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.IndexRange}建構器。
     *
     * @return 新的{@link javafx.scene.control.IndexRangeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.IndexRangeBuilder<javafx.scene.control.IndexRange, ?> indexRange()
    {
        return new javafx.scene.control.IndexRangeBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.IndexedCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.IndexedCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.IndexedCellBuilder<T, javafx.scene.control.IndexedCell<T>, ?> indexedCell()
    {
        return new javafx.scene.control.IndexedCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Label}建構器。
     *
     * @return 新的{@link javafx.scene.control.LabelBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.LabelBuilder<javafx.scene.control.Label, ?> label()
    {
        return new javafx.scene.control.LabelBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Labeled}建構器。
     *
     * @return 新的{@link javafx.scene.control.LabeledBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.LabeledBuilder<javafx.scene.control.Labeled, ?> labeled()
    {
        return new javafx.scene.control.LabeledBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ListCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.ListCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.ListCellBuilder<T, javafx.scene.control.ListCell<T>, ?> listCell()
    {
        return new javafx.scene.control.ListCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ListView}建構器。
     *
     * @return 新的{@link javafx.scene.control.ListViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.ListViewBuilder<T, javafx.scene.control.ListView<T>, ?> listView()
    {
        return new javafx.scene.control.ListViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Menu}建構器。
     *
     * @return 新的{@link javafx.scene.control.MenuBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.MenuBuilder<javafx.scene.control.Menu, ?> menu()
    {
        return new javafx.scene.control.MenuBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.MenuBar}建構器。
     *
     * @return 新的{@link javafx.scene.control.MenuBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.MenuBarBuilder<javafx.scene.control.MenuBar, ?> menuBar()
    {
        return new javafx.scene.control.MenuBarBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.MenuButton}建構器。
     *
     * @return 新的{@link javafx.scene.control.MenuButtonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.MenuButtonBuilder<javafx.scene.control.MenuButton, ?> menuButton()
    {
        return new javafx.scene.control.MenuButtonBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.MenuItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.MenuItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.MenuItemBuilder<javafx.scene.control.MenuItem, ?> menuItem()
    {
        return new javafx.scene.control.MenuItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Pagination}建構器。
     *
     * @return 新的{@link javafx.scene.control.PaginationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.PaginationBuilder<javafx.scene.control.Pagination, ?> pagination()
    {
        return new javafx.scene.control.PaginationBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.PasswordField}建構器。
     *
     * @return 新的{@link javafx.scene.control.PasswordFieldBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.PasswordFieldBuilder<javafx.scene.control.PasswordField, ?> passwordField()
    {
        return new javafx.scene.control.PasswordFieldBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.PopupControl}建構器。
     *
     * @return 新的{@link javafx.scene.control.PopupControlBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.PopupControlBuilder<javafx.scene.control.PopupControl, ?> popupControl()
    {
        return new javafx.scene.control.PopupControlBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ProgressBar}建構器。
     *
     * @return 新的{@link javafx.scene.control.ProgressBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ProgressBarBuilder<javafx.scene.control.ProgressBar, ?> progressBar()
    {
        return new javafx.scene.control.ProgressBarBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ProgressIndicator}建構器。
     *
     * @return 新的{@link javafx.scene.control.ProgressIndicatorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ProgressIndicatorBuilder<javafx.scene.control.ProgressIndicator, ?> progressIndicator()
    {
        return new javafx.scene.control.ProgressIndicatorBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.RadioButton}建構器。
     *
     * @return 新的{@link javafx.scene.control.RadioButtonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.RadioButtonBuilder<javafx.scene.control.RadioButton, ?> radioButton()
    {
        return new javafx.scene.control.RadioButtonBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.RadioMenuItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.RadioMenuItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.RadioMenuItemBuilder<javafx.scene.control.RadioMenuItem, ?> radioMenuItem()
    {
        return new javafx.scene.control.RadioMenuItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ResizeFeaturesBase}建構器。
     *
     * @return 新的{@link javafx.scene.control.ResizeFeaturesBaseBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object> javafx.scene.control.ResizeFeaturesBaseBuilder<S, javafx.scene.control.ResizeFeaturesBase<S>, ?> resizeFeaturesBase()
    {
        return new javafx.scene.control.ResizeFeaturesBaseBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ScrollBar}建構器。
     *
     * @return 新的{@link javafx.scene.control.ScrollBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ScrollBarBuilder<javafx.scene.control.ScrollBar, ?> scrollBar()
    {
        return new javafx.scene.control.ScrollBarBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ScrollPane}建構器。
     *
     * @return 新的{@link javafx.scene.control.ScrollPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ScrollPaneBuilder<javafx.scene.control.ScrollPane, ?> scrollPane()
    {
        return new javafx.scene.control.ScrollPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Separator}建構器。
     *
     * @return 新的{@link javafx.scene.control.SeparatorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.SeparatorBuilder<javafx.scene.control.Separator, ?> separator()
    {
        return new javafx.scene.control.SeparatorBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.SeparatorMenuItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.SeparatorMenuItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.SeparatorMenuItemBuilder<javafx.scene.control.SeparatorMenuItem, ?> separatorMenuItem()
    {
        return new javafx.scene.control.SeparatorMenuItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Slider}建構器。
     *
     * @return 新的{@link javafx.scene.control.SliderBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.SliderBuilder<javafx.scene.control.Slider, ?> slider()
    {
        return new javafx.scene.control.SliderBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.SplitMenuButton}建構器。
     *
     * @return 新的{@link javafx.scene.control.SplitMenuButtonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.SplitMenuButtonBuilder<javafx.scene.control.SplitMenuButton, ?> splitMenuButton()
    {
        return new javafx.scene.control.SplitMenuButtonBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.SplitPane}建構器。
     *
     * @return 新的{@link javafx.scene.control.SplitPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.SplitPaneBuilder<javafx.scene.control.SplitPane, ?> splitPane()
    {
        return new javafx.scene.control.SplitPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Tab}建構器。
     *
     * @return 新的{@link javafx.scene.control.TabBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TabBuilder<javafx.scene.control.Tab, ?> tab()
    {
        return new javafx.scene.control.TabBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TabPane}建構器。
     *
     * @return 新的{@link javafx.scene.control.TabPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TabPaneBuilder<javafx.scene.control.TabPane, ?> tabPane()
    {
        return new javafx.scene.control.TabPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.TableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.TableCellBuilder<S, T, javafx.scene.control.TableCell<S, T>, ?> tableCell()
    {
        return new javafx.scene.control.TableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TableColumn}建構器。
     *
     * @return 新的{@link javafx.scene.control.TableColumnBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.TableColumnBuilder<S, T, javafx.scene.control.TableColumn<S, T>, ?> tableColumn()
    {
        return new javafx.scene.control.TableColumnBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TablePosition}建構器。
     *
     * @return 新的{@link javafx.scene.control.TablePositionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.TablePositionBuilder<S, T, javafx.scene.control.TablePosition<S, T>, ?> tablePosition()
    {
        return new javafx.scene.control.TablePositionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TableRow}建構器。
     *
     * @return 新的{@link javafx.scene.control.TableRowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.TableRowBuilder<T, javafx.scene.control.TableRow<T>, ?> tableRow()
    {
        return new javafx.scene.control.TableRowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TableView}建構器。
     *
     * @return 新的{@link javafx.scene.control.TableViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object> javafx.scene.control.TableViewBuilder<S, javafx.scene.control.TableView<S>, ?> tableView()
    {
        return new javafx.scene.control.TableViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TextArea}建構器。
     *
     * @return 新的{@link javafx.scene.control.TextAreaBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TextAreaBuilder<javafx.scene.control.TextArea, ?> textArea()
    {
        return new javafx.scene.control.TextAreaBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TextField}建構器。
     *
     * @return 新的{@link javafx.scene.control.TextFieldBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TextFieldBuilder<javafx.scene.control.TextField, ?> textField()
    {
        return new javafx.scene.control.TextFieldBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TitledPane}建構器。
     *
     * @return 新的{@link javafx.scene.control.TitledPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TitledPaneBuilder<javafx.scene.control.TitledPane, ?> titledPane()
    {
        return new javafx.scene.control.TitledPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ToggleButton}建構器。
     *
     * @return 新的{@link javafx.scene.control.ToggleButtonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ToggleButtonBuilder<javafx.scene.control.ToggleButton, ?> toggleButton()
    {
        return new javafx.scene.control.ToggleButtonBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ToggleGroup}建構器。
     *
     * @return 新的{@link javafx.scene.control.ToggleGroupBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ToggleGroupBuilder<javafx.scene.control.ToggleGroup, ?> toggleGroup()
    {
        return new javafx.scene.control.ToggleGroupBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ToolBar}建構器。
     *
     * @return 新的{@link javafx.scene.control.ToolBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ToolBarBuilder<javafx.scene.control.ToolBar, ?> toolBar()
    {
        return new javafx.scene.control.ToolBarBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Tooltip}建構器。
     *
     * @return 新的{@link javafx.scene.control.TooltipBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TooltipBuilder<javafx.scene.control.Tooltip, ?> tooltip()
    {
        return new javafx.scene.control.TooltipBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.TreeCellBuilder<T, javafx.scene.control.TreeCell<T>, ?> treeCell()
    {
        return new javafx.scene.control.TreeCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeItem}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeItemBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.TreeItemBuilder<T, javafx.scene.control.TreeItem<T>, ?> treeItem()
    {
        return new javafx.scene.control.TreeItemBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.TreeTableCellBuilder<S, T, javafx.scene.control.TreeTableCell<S, T>, ?> treeTableCell()
    {
        return new javafx.scene.control.TreeTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeTableColumn}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeTableColumnBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.TreeTableColumnBuilder<S, T, javafx.scene.control.TreeTableColumn<S, T>, ?> treeTableColumn()
    {
        return new javafx.scene.control.TreeTableColumnBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeTablePosition}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeTablePositionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.TreeTablePositionBuilder<S, T, javafx.scene.control.TreeTablePosition<S, T>, ?> treeTablePosition()
    {
        return new javafx.scene.control.TreeTablePositionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeTableRow}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeTableRowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.TreeTableRowBuilder<T, javafx.scene.control.TreeTableRow<T>, ?> treeTableRow()
    {
        return new javafx.scene.control.TreeTableRowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeTableView}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeTableViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object> javafx.scene.control.TreeTableViewBuilder<S, javafx.scene.control.TreeTableView<S>, ?> treeTableView()
    {
        return new javafx.scene.control.TreeTableViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TreeView}建構器。
     *
     * @return 新的{@link javafx.scene.control.TreeViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.TreeViewBuilder<T, javafx.scene.control.TreeView<T>, ?> treeView()
    {
        return new javafx.scene.control.TreeViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.CheckBoxListCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.CheckBoxListCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.CheckBoxListCellBuilder<T, javafx.scene.control.cell.CheckBoxListCell<T>, ?> checkBoxListCell()
    {
        return new javafx.scene.control.cell.CheckBoxListCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.CheckBoxTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.CheckBoxTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.CheckBoxTableCellBuilder<S, T, javafx.scene.control.cell.CheckBoxTableCell<S, T>, ?> checkBoxTableCell()
    {
        return new javafx.scene.control.cell.CheckBoxTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.CheckBoxTreeCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.CheckBoxTreeCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.CheckBoxTreeCellBuilder<T, javafx.scene.control.cell.CheckBoxTreeCell<T>, ?> checkBoxTreeCell()
    {
        return new javafx.scene.control.cell.CheckBoxTreeCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.CheckBoxTreeTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.CheckBoxTreeTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.CheckBoxTreeTableCellBuilder<S, T, javafx.scene.control.cell.CheckBoxTreeTableCell<S, T>, ?> checkBoxTreeTableCell()
    {
        return new javafx.scene.control.cell.CheckBoxTreeTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ChoiceBoxListCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ChoiceBoxListCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.ChoiceBoxListCellBuilder<T, javafx.scene.control.cell.ChoiceBoxListCell<T>, ?> choiceBoxListCell()
    {
        return new javafx.scene.control.cell.ChoiceBoxListCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ChoiceBoxTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ChoiceBoxTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.ChoiceBoxTableCellBuilder<S, T, javafx.scene.control.cell.ChoiceBoxTableCell<S, T>, ?> choiceBoxTableCell()
    {
        return new javafx.scene.control.cell.ChoiceBoxTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ChoiceBoxTreeCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ChoiceBoxTreeCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.ChoiceBoxTreeCellBuilder<T, javafx.scene.control.cell.ChoiceBoxTreeCell<T>, ?> choiceBoxTreeCell()
    {
        return new javafx.scene.control.cell.ChoiceBoxTreeCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ChoiceBoxTreeTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ChoiceBoxTreeTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.ChoiceBoxTreeTableCellBuilder<S, T, javafx.scene.control.cell.ChoiceBoxTreeTableCell<S, T>, ?> choiceBoxTreeTableCell()
    {
        return new javafx.scene.control.cell.ChoiceBoxTreeTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ComboBoxListCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ComboBoxListCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.ComboBoxListCellBuilder<T, javafx.scene.control.cell.ComboBoxListCell<T>, ?> comboBoxListCell()
    {
        return new javafx.scene.control.cell.ComboBoxListCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ComboBoxTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ComboBoxTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.ComboBoxTableCellBuilder<S, T, javafx.scene.control.cell.ComboBoxTableCell<S, T>, ?> comboBoxTableCell()
    {
        return new javafx.scene.control.cell.ComboBoxTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ComboBoxTreeCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ComboBoxTreeCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.ComboBoxTreeCellBuilder<T, javafx.scene.control.cell.ComboBoxTreeCell<T>, ?> comboBoxTreeCell()
    {
        return new javafx.scene.control.cell.ComboBoxTreeCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ComboBoxTreeTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ComboBoxTreeTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.ComboBoxTreeTableCellBuilder<S, T, javafx.scene.control.cell.ComboBoxTreeTableCell<S, T>, ?> comboBoxTreeTableCell()
    {
        return new javafx.scene.control.cell.ComboBoxTreeTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.MapValueFactory}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.MapValueFactoryBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.MapValueFactoryBuilder<T, javafx.scene.control.cell.MapValueFactory<T>, ?> mapValueFactory()
    {
        return new javafx.scene.control.cell.MapValueFactoryBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ProgressBarTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ProgressBarTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object> javafx.scene.control.cell.ProgressBarTableCellBuilder<S, javafx.scene.control.cell.ProgressBarTableCell<S>, ?> progressBarTableCell()
    {
        return new javafx.scene.control.cell.ProgressBarTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.ProgressBarTreeTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.ProgressBarTreeTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object> javafx.scene.control.cell.ProgressBarTreeTableCellBuilder<S, javafx.scene.control.cell.ProgressBarTreeTableCell<S>, ?> progressBarTreeTableCell()
    {
        return new javafx.scene.control.cell.ProgressBarTreeTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.PropertyValueFactory}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.PropertyValueFactoryBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.PropertyValueFactoryBuilder<S, T, javafx.scene.control.cell.PropertyValueFactory<S, T>, ?> propertyValueFactory()
    {
        return new javafx.scene.control.cell.PropertyValueFactoryBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.TextFieldListCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.TextFieldListCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.TextFieldListCellBuilder<T, javafx.scene.control.cell.TextFieldListCell<T>, ?> textFieldListCell()
    {
        return new javafx.scene.control.cell.TextFieldListCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.TextFieldTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.TextFieldTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.TextFieldTableCellBuilder<S, T, javafx.scene.control.cell.TextFieldTableCell<S, T>, ?> textFieldTableCell()
    {
        return new javafx.scene.control.cell.TextFieldTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.TextFieldTreeCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.TextFieldTreeCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.cell.TextFieldTreeCellBuilder<T, javafx.scene.control.cell.TextFieldTreeCell<T>, ?> textFieldTreeCell()
    {
        return new javafx.scene.control.cell.TextFieldTreeCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.TextFieldTreeTableCell}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.TextFieldTreeTableCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.TextFieldTreeTableCellBuilder<S, T, javafx.scene.control.cell.TextFieldTreeTableCell<S, T>, ?> textFieldTreeTableCell()
    {
        return new javafx.scene.control.cell.TextFieldTreeTableCellBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.cell.TreeItemPropertyValueFactory}建構器。
     *
     * @return 新的{@link javafx.scene.control.cell.TreeItemPropertyValueFactoryBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <S extends java.lang.Object, T extends java.lang.Object> javafx.scene.control.cell.TreeItemPropertyValueFactoryBuilder<S, T, javafx.scene.control.cell.TreeItemPropertyValueFactory<S, T>, ?> treeItemPropertyValueFactory()
    {
        return new javafx.scene.control.cell.TreeItemPropertyValueFactoryBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.Blend}建構器。
     *
     * @return 新的{@link javafx.scene.effect.BlendBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.BlendBuilder<javafx.scene.effect.Blend, ?> blend()
    {
        return new javafx.scene.effect.BlendBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.Bloom}建構器。
     *
     * @return 新的{@link javafx.scene.effect.BloomBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.BloomBuilder<javafx.scene.effect.Bloom, ?> bloom()
    {
        return new javafx.scene.effect.BloomBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.BoxBlur}建構器。
     *
     * @return 新的{@link javafx.scene.effect.BoxBlurBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.BoxBlurBuilder<javafx.scene.effect.BoxBlur, ?> boxBlur()
    {
        return new javafx.scene.effect.BoxBlurBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.ColorAdjust}建構器。
     *
     * @return 新的{@link javafx.scene.effect.ColorAdjustBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.ColorAdjustBuilder<javafx.scene.effect.ColorAdjust, ?> colorAdjust()
    {
        return new javafx.scene.effect.ColorAdjustBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.ColorInput}建構器。
     *
     * @return 新的{@link javafx.scene.effect.ColorInputBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.ColorInputBuilder<javafx.scene.effect.ColorInput, ?> colorInput()
    {
        return new javafx.scene.effect.ColorInputBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.DisplacementMap}建構器。
     *
     * @return 新的{@link javafx.scene.effect.DisplacementMapBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.DisplacementMapBuilder<javafx.scene.effect.DisplacementMap, ?> displacementMap()
    {
        return new javafx.scene.effect.DisplacementMapBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.DropShadow}建構器。
     *
     * @return 新的{@link javafx.scene.effect.DropShadowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.DropShadowBuilder<javafx.scene.effect.DropShadow, ?> dropShadow()
    {
        return new javafx.scene.effect.DropShadowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.FloatMap}建構器。
     *
     * @return 新的{@link javafx.scene.effect.FloatMapBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.FloatMapBuilder<javafx.scene.effect.FloatMap, ?> floatMap()
    {
        return new javafx.scene.effect.FloatMapBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.GaussianBlur}建構器。
     *
     * @return 新的{@link javafx.scene.effect.GaussianBlurBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.GaussianBlurBuilder<javafx.scene.effect.GaussianBlur, ?> gaussianBlur()
    {
        return new javafx.scene.effect.GaussianBlurBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.Glow}建構器。
     *
     * @return 新的{@link javafx.scene.effect.GlowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.GlowBuilder<javafx.scene.effect.Glow, ?> glow()
    {
        return new javafx.scene.effect.GlowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.ImageInput}建構器。
     *
     * @return 新的{@link javafx.scene.effect.ImageInputBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.ImageInputBuilder<javafx.scene.effect.ImageInput, ?> imageInput()
    {
        return new javafx.scene.effect.ImageInputBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.InnerShadow}建構器。
     *
     * @return 新的{@link javafx.scene.effect.InnerShadowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.InnerShadowBuilder<javafx.scene.effect.InnerShadow, ?> innerShadow()
    {
        return new javafx.scene.effect.InnerShadowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.Lighting}建構器。
     *
     * @return 新的{@link javafx.scene.effect.LightingBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.LightingBuilder<javafx.scene.effect.Lighting, ?> lighting()
    {
        return new javafx.scene.effect.LightingBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.MotionBlur}建構器。
     *
     * @return 新的{@link javafx.scene.effect.MotionBlurBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.MotionBlurBuilder<javafx.scene.effect.MotionBlur, ?> motionBlur()
    {
        return new javafx.scene.effect.MotionBlurBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.PerspectiveTransform}建構器。
     *
     * @return 新的{@link javafx.scene.effect.PerspectiveTransformBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.PerspectiveTransformBuilder<javafx.scene.effect.PerspectiveTransform, ?> perspectiveTransform()
    {
        return new javafx.scene.effect.PerspectiveTransformBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.Reflection}建構器。
     *
     * @return 新的{@link javafx.scene.effect.ReflectionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.ReflectionBuilder<javafx.scene.effect.Reflection, ?> reflection()
    {
        return new javafx.scene.effect.ReflectionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.SepiaTone}建構器。
     *
     * @return 新的{@link javafx.scene.effect.SepiaToneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.SepiaToneBuilder<javafx.scene.effect.SepiaTone, ?> sepiaTone()
    {
        return new javafx.scene.effect.SepiaToneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.effect.Shadow}建構器。
     *
     * @return 新的{@link javafx.scene.effect.ShadowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.effect.ShadowBuilder<javafx.scene.effect.Shadow, ?> shadow()
    {
        return new javafx.scene.effect.ShadowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.image.Image}建構器。
     *
     * @return 新的{@link javafx.scene.image.ImageBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.image.ImageBuilder<javafx.scene.image.Image, ?> image()
    {
        return new javafx.scene.image.ImageBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.image.ImageView}建構器。
     *
     * @return 新的{@link javafx.scene.image.ImageViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.image.ImageViewBuilder<javafx.scene.image.ImageView, ?> imageView()
    {
        return new javafx.scene.image.ImageViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.image.WritableImage}建構器。
     *
     * @return 新的{@link javafx.scene.image.WritableImageBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.image.WritableImageBuilder<javafx.scene.image.WritableImage, ?> writableImage()
    {
        return new javafx.scene.image.WritableImageBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.ClipboardContent}建構器。
     *
     * @return 新的{@link javafx.scene.input.ClipboardContentBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.ClipboardContentBuilder<javafx.scene.input.ClipboardContent, ?> clipboardContent()
    {
        return new javafx.scene.input.ClipboardContentBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.DataFormat}建構器。
     *
     * @return 新的{@link javafx.scene.input.DataFormatBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.DataFormatBuilder<javafx.scene.input.DataFormat, ?> dataFormat()
    {
        return new javafx.scene.input.DataFormatBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.InputMethodTextRun}建構器。
     *
     * @return 新的{@link javafx.scene.input.InputMethodTextRunBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.InputMethodTextRunBuilder<javafx.scene.input.InputMethodTextRun, ?> inputMethodTextRun()
    {
        return new javafx.scene.input.InputMethodTextRunBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.KeyCharacterCombination}建構器。
     *
     * @return 新的{@link javafx.scene.input.KeyCharacterCombinationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.KeyCharacterCombinationBuilder<javafx.scene.input.KeyCharacterCombination, ?> keyCharacterCombination()
    {
        return new javafx.scene.input.KeyCharacterCombinationBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.KeyCodeCombination}建構器。
     *
     * @return 新的{@link javafx.scene.input.KeyCodeCombinationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.KeyCodeCombinationBuilder<javafx.scene.input.KeyCodeCombination, ?> keyCodeCombination()
    {
        return new javafx.scene.input.KeyCodeCombinationBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.Mnemonic}建構器。
     *
     * @return 新的{@link javafx.scene.input.MnemonicBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.MnemonicBuilder<javafx.scene.input.Mnemonic, ?> mnemonic()
    {
        return new javafx.scene.input.MnemonicBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.PickResult}建構器。
     *
     * @return 新的{@link javafx.scene.input.PickResultBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.PickResultBuilder<javafx.scene.input.PickResult, ?> pickResult()
    {
        return new javafx.scene.input.PickResultBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.input.TouchPoint}建構器。
     *
     * @return 新的{@link javafx.scene.input.TouchPointBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.input.TouchPointBuilder<javafx.scene.input.TouchPoint, ?> touchPoint()
    {
        return new javafx.scene.input.TouchPointBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.AnchorPane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.AnchorPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.AnchorPaneBuilder<javafx.scene.layout.AnchorPane, ?> anchorPane()
    {
        return new javafx.scene.layout.AnchorPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.Background}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BackgroundBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BackgroundBuilder<javafx.scene.layout.Background, ?> background()
    {
        return new javafx.scene.layout.BackgroundBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BackgroundFill}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BackgroundFillBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BackgroundFillBuilder<javafx.scene.layout.BackgroundFill, ?> backgroundFill()
    {
        return new javafx.scene.layout.BackgroundFillBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BackgroundImage}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BackgroundImageBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BackgroundImageBuilder<javafx.scene.layout.BackgroundImage, ?> backgroundImage()
    {
        return new javafx.scene.layout.BackgroundImageBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BackgroundPosition}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BackgroundPositionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BackgroundPositionBuilder<javafx.scene.layout.BackgroundPosition, ?> backgroundPosition()
    {
        return new javafx.scene.layout.BackgroundPositionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BackgroundSize}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BackgroundSizeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BackgroundSizeBuilder<javafx.scene.layout.BackgroundSize, ?> backgroundSize()
    {
        return new javafx.scene.layout.BackgroundSizeBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.Border}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BorderBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BorderBuilder<javafx.scene.layout.Border, ?> border()
    {
        return new javafx.scene.layout.BorderBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BorderImage}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BorderImageBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BorderImageBuilder<javafx.scene.layout.BorderImage, ?> borderImage()
    {
        return new javafx.scene.layout.BorderImageBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BorderPane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BorderPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BorderPaneBuilder<javafx.scene.layout.BorderPane, ?> borderPane()
    {
        return new javafx.scene.layout.BorderPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BorderStroke}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BorderStrokeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BorderStrokeBuilder<javafx.scene.layout.BorderStroke, ?> borderStroke()
    {
        return new javafx.scene.layout.BorderStrokeBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BorderStrokeStyle}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BorderStrokeStyleBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BorderStrokeStyleBuilder<javafx.scene.layout.BorderStrokeStyle, ?> borderStrokeStyle()
    {
        return new javafx.scene.layout.BorderStrokeStyleBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.BorderWidths}建構器。
     *
     * @return 新的{@link javafx.scene.layout.BorderWidthsBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.BorderWidthsBuilder<javafx.scene.layout.BorderWidths, ?> borderWidths()
    {
        return new javafx.scene.layout.BorderWidthsBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.ColumnConstraints}建構器。
     *
     * @return 新的{@link javafx.scene.layout.ColumnConstraintsBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.ColumnConstraintsBuilder<javafx.scene.layout.ColumnConstraints, ?> columnConstraints()
    {
        return new javafx.scene.layout.ColumnConstraintsBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.CornerRadii}建構器。
     *
     * @return 新的{@link javafx.scene.layout.CornerRadiiBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.CornerRadiiBuilder<javafx.scene.layout.CornerRadii, ?> cornerRadii()
    {
        return new javafx.scene.layout.CornerRadiiBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.FlowPane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.FlowPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.FlowPaneBuilder<javafx.scene.layout.FlowPane, ?> flowPane()
    {
        return new javafx.scene.layout.FlowPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.GridPane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.GridPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.GridPaneBuilder<javafx.scene.layout.GridPane, ?> gridPane()
    {
        return new javafx.scene.layout.GridPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.HBox}建構器。
     *
     * @return 新的{@link javafx.scene.layout.HBoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.HBoxBuilder<javafx.scene.layout.HBox, ?> hBox()
    {
        return new javafx.scene.layout.HBoxBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.Pane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.PaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.PaneBuilder<javafx.scene.layout.Pane, ?> pane()
    {
        return new javafx.scene.layout.PaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.Region}建構器。
     *
     * @return 新的{@link javafx.scene.layout.RegionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.RegionBuilder<javafx.scene.layout.Region, ?> region()
    {
        return new javafx.scene.layout.RegionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.RowConstraints}建構器。
     *
     * @return 新的{@link javafx.scene.layout.RowConstraintsBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.RowConstraintsBuilder<javafx.scene.layout.RowConstraints, ?> rowConstraints()
    {
        return new javafx.scene.layout.RowConstraintsBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.StackPane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.StackPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.StackPaneBuilder<javafx.scene.layout.StackPane, ?> stackPane()
    {
        return new javafx.scene.layout.StackPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.TilePane}建構器。
     *
     * @return 新的{@link javafx.scene.layout.TilePaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.TilePaneBuilder<javafx.scene.layout.TilePane, ?> tilePane()
    {
        return new javafx.scene.layout.TilePaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.layout.VBox}建構器。
     *
     * @return 新的{@link javafx.scene.layout.VBoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.layout.VBoxBuilder<javafx.scene.layout.VBox, ?> vBox()
    {
        return new javafx.scene.layout.VBoxBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.media.AudioClip}建構器。
     *
     * @return 新的{@link javafx.scene.media.AudioClipBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.media.AudioClipBuilder<javafx.scene.media.AudioClip, ?> audioClip()
    {
        return new javafx.scene.media.AudioClipBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.media.EqualizerBand}建構器。
     *
     * @return 新的{@link javafx.scene.media.EqualizerBandBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.media.EqualizerBandBuilder<javafx.scene.media.EqualizerBand, ?> equalizerBand()
    {
        return new javafx.scene.media.EqualizerBandBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.media.Media}建構器。
     *
     * @return 新的{@link javafx.scene.media.MediaBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.media.MediaBuilder<javafx.scene.media.Media, ?> media()
    {
        return new javafx.scene.media.MediaBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.media.MediaPlayer}建構器。
     *
     * @return 新的{@link javafx.scene.media.MediaPlayerBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.media.MediaPlayerBuilder<javafx.scene.media.MediaPlayer, ?> mediaPlayer()
    {
        return new javafx.scene.media.MediaPlayerBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.media.MediaView}建構器。
     *
     * @return 新的{@link javafx.scene.media.MediaViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.media.MediaViewBuilder<javafx.scene.media.MediaView, ?> mediaView()
    {
        return new javafx.scene.media.MediaViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.paint.Color}建構器。
     *
     * @return 新的{@link javafx.scene.paint.ColorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.paint.ColorBuilder<javafx.scene.paint.Color, ?> color()
    {
        return new javafx.scene.paint.ColorBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.paint.ImagePattern}建構器。
     *
     * @return 新的{@link javafx.scene.paint.ImagePatternBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.paint.ImagePatternBuilder<javafx.scene.paint.ImagePattern, ?> imagePattern()
    {
        return new javafx.scene.paint.ImagePatternBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.paint.LinearGradient}建構器。
     *
     * @return 新的{@link javafx.scene.paint.LinearGradientBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.paint.LinearGradientBuilder<javafx.scene.paint.LinearGradient, ?> linearGradient()
    {
        return new javafx.scene.paint.LinearGradientBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.paint.PhongMaterial}建構器。
     *
     * @return 新的{@link javafx.scene.paint.PhongMaterialBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.paint.PhongMaterialBuilder<javafx.scene.paint.PhongMaterial, ?> phongMaterial()
    {
        return new javafx.scene.paint.PhongMaterialBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.paint.RadialGradient}建構器。
     *
     * @return 新的{@link javafx.scene.paint.RadialGradientBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.paint.RadialGradientBuilder<javafx.scene.paint.RadialGradient, ?> radialGradient()
    {
        return new javafx.scene.paint.RadialGradientBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.paint.Stop}建構器。
     *
     * @return 新的{@link javafx.scene.paint.StopBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.paint.StopBuilder<javafx.scene.paint.Stop, ?> stop()
    {
        return new javafx.scene.paint.StopBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Arc}建構器。
     *
     * @return 新的{@link javafx.scene.shape.ArcBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.ArcBuilder<javafx.scene.shape.Arc, ?> arc()
    {
        return new javafx.scene.shape.ArcBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.ArcTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.ArcToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.ArcToBuilder<javafx.scene.shape.ArcTo, ?> arcTo()
    {
        return new javafx.scene.shape.ArcToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Box}建構器。
     *
     * @return 新的{@link javafx.scene.shape.BoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.BoxBuilder<javafx.scene.shape.Box, ?> box()
    {
        return new javafx.scene.shape.BoxBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Circle}建構器。
     *
     * @return 新的{@link javafx.scene.shape.CircleBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.CircleBuilder<javafx.scene.shape.Circle, ?> circle()
    {
        return new javafx.scene.shape.CircleBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.ClosePath}建構器。
     *
     * @return 新的{@link javafx.scene.shape.ClosePathBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.ClosePathBuilder<javafx.scene.shape.ClosePath, ?> closePath()
    {
        return new javafx.scene.shape.ClosePathBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.CubicCurve}建構器。
     *
     * @return 新的{@link javafx.scene.shape.CubicCurveBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.CubicCurveBuilder<javafx.scene.shape.CubicCurve, ?> cubicCurve()
    {
        return new javafx.scene.shape.CubicCurveBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.CubicCurveTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.CubicCurveToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.CubicCurveToBuilder<javafx.scene.shape.CubicCurveTo, ?> cubicCurveTo()
    {
        return new javafx.scene.shape.CubicCurveToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Cylinder}建構器。
     *
     * @return 新的{@link javafx.scene.shape.CylinderBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.CylinderBuilder<javafx.scene.shape.Cylinder, ?> cylinder()
    {
        return new javafx.scene.shape.CylinderBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Ellipse}建構器。
     *
     * @return 新的{@link javafx.scene.shape.EllipseBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.EllipseBuilder<javafx.scene.shape.Ellipse, ?> ellipse()
    {
        return new javafx.scene.shape.EllipseBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.HLineTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.HLineToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.HLineToBuilder<javafx.scene.shape.HLineTo, ?> hLineTo()
    {
        return new javafx.scene.shape.HLineToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Line}建構器。
     *
     * @return 新的{@link javafx.scene.shape.LineBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.LineBuilder<javafx.scene.shape.Line, ?> line()
    {
        return new javafx.scene.shape.LineBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.LineTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.LineToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.LineToBuilder<javafx.scene.shape.LineTo, ?> lineTo()
    {
        return new javafx.scene.shape.LineToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.MeshView}建構器。
     *
     * @return 新的{@link javafx.scene.shape.MeshViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.MeshViewBuilder<javafx.scene.shape.MeshView, ?> meshView()
    {
        return new javafx.scene.shape.MeshViewBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.MoveTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.MoveToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.MoveToBuilder<javafx.scene.shape.MoveTo, ?> moveTo()
    {
        return new javafx.scene.shape.MoveToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Path}建構器。
     *
     * @return 新的{@link javafx.scene.shape.PathBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.PathBuilder<javafx.scene.shape.Path, ?> path()
    {
        return new javafx.scene.shape.PathBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.PathElement}建構器。
     *
     * @return 新的{@link javafx.scene.shape.PathElementBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.PathElementBuilder<javafx.scene.shape.PathElement, ?> pathElement()
    {
        return new javafx.scene.shape.PathElementBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Polygon}建構器。
     *
     * @return 新的{@link javafx.scene.shape.PolygonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.PolygonBuilder<javafx.scene.shape.Polygon, ?> polygon()
    {
        return new javafx.scene.shape.PolygonBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Polyline}建構器。
     *
     * @return 新的{@link javafx.scene.shape.PolylineBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.PolylineBuilder<javafx.scene.shape.Polyline, ?> polyline()
    {
        return new javafx.scene.shape.PolylineBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.QuadCurve}建構器。
     *
     * @return 新的{@link javafx.scene.shape.QuadCurveBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.QuadCurveBuilder<javafx.scene.shape.QuadCurve, ?> quadCurve()
    {
        return new javafx.scene.shape.QuadCurveBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.QuadCurveTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.QuadCurveToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.QuadCurveToBuilder<javafx.scene.shape.QuadCurveTo, ?> quadCurveTo()
    {
        return new javafx.scene.shape.QuadCurveToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Rectangle}建構器。
     *
     * @return 新的{@link javafx.scene.shape.RectangleBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.RectangleBuilder<javafx.scene.shape.Rectangle, ?> rectangle()
    {
        return new javafx.scene.shape.RectangleBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.SVGPath}建構器。
     *
     * @return 新的{@link javafx.scene.shape.SVGPathBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.SVGPathBuilder<javafx.scene.shape.SVGPath, ?> sVGPath()
    {
        return new javafx.scene.shape.SVGPathBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Shape}建構器。
     *
     * @return 新的{@link javafx.scene.shape.ShapeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.ShapeBuilder<javafx.scene.shape.Shape, ?> shape()
    {
        return new javafx.scene.shape.ShapeBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.Sphere}建構器。
     *
     * @return 新的{@link javafx.scene.shape.SphereBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.SphereBuilder<javafx.scene.shape.Sphere, ?> sphere()
    {
        return new javafx.scene.shape.SphereBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.TriangleMesh}建構器。
     *
     * @return 新的{@link javafx.scene.shape.TriangleMeshBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.TriangleMeshBuilder<javafx.scene.shape.TriangleMesh, ?> triangleMesh()
    {
        return new javafx.scene.shape.TriangleMeshBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.shape.VLineTo}建構器。
     *
     * @return 新的{@link javafx.scene.shape.VLineToBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.shape.VLineToBuilder<javafx.scene.shape.VLineTo, ?> vLineTo()
    {
        return new javafx.scene.shape.VLineToBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.text.Font}建構器。
     *
     * @return 新的{@link javafx.scene.text.FontBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.text.FontBuilder<javafx.scene.text.Font, ?> font()
    {
        return new javafx.scene.text.FontBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.text.Text}建構器。
     *
     * @return 新的{@link javafx.scene.text.TextBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.text.TextBuilder<javafx.scene.text.Text, ?> text()
    {
        return new javafx.scene.text.TextBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.text.TextFlow}建構器。
     *
     * @return 新的{@link javafx.scene.text.TextFlowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.text.TextFlowBuilder<javafx.scene.text.TextFlow, ?> textFlow()
    {
        return new javafx.scene.text.TextFlowBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.Affine}建構器。
     *
     * @return 新的{@link javafx.scene.transform.AffineBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.AffineBuilder<javafx.scene.transform.Affine, ?> affine()
    {
        return new javafx.scene.transform.AffineBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.NonInvertibleTransformException}建構器。
     *
     * @return 新的{@link javafx.scene.transform.NonInvertibleTransformExceptionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.NonInvertibleTransformExceptionBuilder<javafx.scene.transform.NonInvertibleTransformException, ?> nonInvertibleTransformException()
    {
        return new javafx.scene.transform.NonInvertibleTransformExceptionBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.Rotate}建構器。
     *
     * @return 新的{@link javafx.scene.transform.RotateBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.RotateBuilder<javafx.scene.transform.Rotate, ?> rotate()
    {
        return new javafx.scene.transform.RotateBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.Scale}建構器。
     *
     * @return 新的{@link javafx.scene.transform.ScaleBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.ScaleBuilder<javafx.scene.transform.Scale, ?> scale()
    {
        return new javafx.scene.transform.ScaleBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.Shear}建構器。
     *
     * @return 新的{@link javafx.scene.transform.ShearBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.ShearBuilder<javafx.scene.transform.Shear, ?> shear()
    {
        return new javafx.scene.transform.ShearBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.Transform}建構器。
     *
     * @return 新的{@link javafx.scene.transform.TransformBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.TransformBuilder<javafx.scene.transform.Transform, ?> transform()
    {
        return new javafx.scene.transform.TransformBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.transform.Translate}建構器。
     *
     * @return 新的{@link javafx.scene.transform.TranslateBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.transform.TranslateBuilder<javafx.scene.transform.Translate, ?> translate()
    {
        return new javafx.scene.transform.TranslateBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.web.HTMLEditor}建構器。
     *
     * @return 新的{@link javafx.scene.web.HTMLEditorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.web.HTMLEditorBuilder<javafx.scene.web.HTMLEditor, ?> hTMLEditor()
    {
        return new javafx.scene.web.HTMLEditorBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.web.PopupFeatures}建構器。
     *
     * @return 新的{@link javafx.scene.web.PopupFeaturesBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.web.PopupFeaturesBuilder<javafx.scene.web.PopupFeatures, ?> popupFeatures()
    {
        return new javafx.scene.web.PopupFeaturesBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.web.PromptData}建構器。
     *
     * @return 新的{@link javafx.scene.web.PromptDataBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.web.PromptDataBuilder<javafx.scene.web.PromptData, ?> promptData()
    {
        return new javafx.scene.web.PromptDataBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.web.WebEngine}建構器。
     *
     * @return 新的{@link javafx.scene.web.WebEngineBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.web.WebEngineBuilder<javafx.scene.web.WebEngine, ?> webEngine()
    {
        return new javafx.scene.web.WebEngineBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.web.WebView}建構器。
     *
     * @return 新的{@link javafx.scene.web.WebViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.web.WebViewBuilder<javafx.scene.web.WebView, ?> webView()
    {
        return new javafx.scene.web.WebViewBuilder();
    }

    /**
     * 建立新的{@link javafx.stage.DirectoryChooser}建構器。
     *
     * @return 新的{@link javafx.stage.DirectoryChooserBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.stage.DirectoryChooserBuilder<javafx.stage.DirectoryChooser, ?> directoryChooser()
    {
        return new javafx.stage.DirectoryChooserBuilder();
    }

    /**
     * 建立新的{@link javafx.stage.FileChooser}建構器。
     *
     * @return 新的{@link javafx.stage.FileChooserBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.stage.FileChooserBuilder<javafx.stage.FileChooser, ?> fileChooser()
    {
        return new javafx.stage.FileChooserBuilder();
    }

    /**
     * 建立新的{@link javafx.stage.Popup}建構器。
     *
     * @return 新的{@link javafx.stage.PopupBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.stage.PopupBuilder<javafx.stage.Popup, ?> popup()
    {
        return new javafx.stage.PopupBuilder();
    }

    /**
     * 建立新的{@link javafx.stage.PopupWindow}建構器。
     *
     * @return 新的{@link javafx.stage.PopupWindowBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.stage.PopupWindowBuilder<javafx.stage.PopupWindow, ?> popupWindow()
    {
        return new javafx.stage.PopupWindowBuilder();
    }

    /**
     * 建立新的{@link javafx.stage.Stage}建構器。
     *
     * @return 新的{@link javafx.stage.StageBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.stage.StageBuilder<javafx.stage.Stage, ?> stage()
    {
        return new javafx.stage.StageBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Alert}建構器。
     *
     * @return 新的{@link javafx.scene.control.AlertBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.AlertBuilder<javafx.scene.control.Alert, ?> alert()
    {
        return new javafx.scene.control.AlertBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ButtonBar}建構器。
     *
     * @return 新的{@link javafx.scene.control.ButtonBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ButtonBarBuilder<javafx.scene.control.ButtonBar, ?> buttonBar()
    {
        return new javafx.scene.control.ButtonBarBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ButtonType}建構器。
     *
     * @return 新的{@link javafx.scene.control.ButtonTypeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.ButtonTypeBuilder<javafx.scene.control.ButtonType, ?> buttonType()
    {
        return new javafx.scene.control.ButtonTypeBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.ChoiceDialog}建構器。
     *
     * @return 新的{@link javafx.scene.control.ChoiceDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> javafx.scene.control.ChoiceDialogBuilder<T, javafx.scene.control.ChoiceDialog<T>, ?> choiceDialog()
    {
        return new javafx.scene.control.ChoiceDialogBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.Dialog}建構器。
     *
     * @return 新的{@link javafx.scene.control.DialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <R extends java.lang.Object> javafx.scene.control.DialogBuilder<R, javafx.scene.control.Dialog<R>, ?> dialog()
    {
        return new javafx.scene.control.DialogBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.DialogPane}建構器。
     *
     * @return 新的{@link javafx.scene.control.DialogPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.DialogPaneBuilder<javafx.scene.control.DialogPane, ?> dialogPane()
    {
        return new javafx.scene.control.DialogPaneBuilder();
    }

    /**
     * 建立新的{@link javafx.scene.control.TextInputDialog}建構器。
     *
     * @return 新的{@link javafx.scene.control.TextInputDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static javafx.scene.control.TextInputDialogBuilder<javafx.scene.control.TextInputDialog, ?> textInputDialog()
    {
        return new javafx.scene.control.TextInputDialogBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.BreadCrumbBar}建構器。
     *
     * @return 新的{@link org.controlsfx.control.BreadCrumbBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.BreadCrumbBarBuilder<T, org.controlsfx.control.BreadCrumbBar<T>, ?> breadCrumbBar()
    {
        return new org.controlsfx.control.BreadCrumbBarBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.CheckComboBox}建構器。
     *
     * @return 新的{@link org.controlsfx.control.CheckComboBoxBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.CheckComboBoxBuilder<T, org.controlsfx.control.CheckComboBox<T>, ?> checkComboBox()
    {
        return new org.controlsfx.control.CheckComboBoxBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.CheckListView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.CheckListViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.CheckListViewBuilder<T, org.controlsfx.control.CheckListView<T>, ?> checkListView()
    {
        return new org.controlsfx.control.CheckListViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.CheckTreeView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.CheckTreeViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.CheckTreeViewBuilder<T, org.controlsfx.control.CheckTreeView<T>, ?> checkTreeView()
    {
        return new org.controlsfx.control.CheckTreeViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.GridCell}建構器。
     *
     * @return 新的{@link org.controlsfx.control.GridCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.GridCellBuilder<T, org.controlsfx.control.GridCell<T>, ?> gridCell()
    {
        return new org.controlsfx.control.GridCellBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.GridView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.GridViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.GridViewBuilder<T, org.controlsfx.control.GridView<T>, ?> gridView()
    {
        return new org.controlsfx.control.GridViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.HiddenSidesPane}建構器。
     *
     * @return 新的{@link org.controlsfx.control.HiddenSidesPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.HiddenSidesPaneBuilder<org.controlsfx.control.HiddenSidesPane, ?> hiddenSidesPane()
    {
        return new org.controlsfx.control.HiddenSidesPaneBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.HyperlinkLabel}建構器。
     *
     * @return 新的{@link org.controlsfx.control.HyperlinkLabelBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.HyperlinkLabelBuilder<org.controlsfx.control.HyperlinkLabel, ?> hyperlinkLabel()
    {
        return new org.controlsfx.control.HyperlinkLabelBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.InfoOverlay}建構器。
     *
     * @return 新的{@link org.controlsfx.control.InfoOverlayBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.InfoOverlayBuilder<org.controlsfx.control.InfoOverlay, ?> infoOverlay()
    {
        return new org.controlsfx.control.InfoOverlayBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.ListSelectionView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.ListSelectionViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.ListSelectionViewBuilder<T, org.controlsfx.control.ListSelectionView<T>, ?> listSelectionView()
    {
        return new org.controlsfx.control.ListSelectionViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.MasterDetailPane}建構器。
     *
     * @return 新的{@link org.controlsfx.control.MasterDetailPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.MasterDetailPaneBuilder<org.controlsfx.control.MasterDetailPane, ?> masterDetailPane()
    {
        return new org.controlsfx.control.MasterDetailPaneBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.NotificationPane}建構器。
     *
     * @return 新的{@link org.controlsfx.control.NotificationPaneBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.NotificationPaneBuilder<org.controlsfx.control.NotificationPane, ?> notificationPane()
    {
        return new org.controlsfx.control.NotificationPaneBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.PlusMinusSlider}建構器。
     *
     * @return 新的{@link org.controlsfx.control.PlusMinusSliderBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.PlusMinusSliderBuilder<org.controlsfx.control.PlusMinusSlider, ?> plusMinusSlider()
    {
        return new org.controlsfx.control.PlusMinusSliderBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.PopOver}建構器。
     *
     * @return 新的{@link org.controlsfx.control.PopOverBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.PopOverBuilder<org.controlsfx.control.PopOver, ?> popOver()
    {
        return new org.controlsfx.control.PopOverBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.PropertySheet}建構器。
     *
     * @return 新的{@link org.controlsfx.control.PropertySheetBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.PropertySheetBuilder<org.controlsfx.control.PropertySheet, ?> propertySheet()
    {
        return new org.controlsfx.control.PropertySheetBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.RangeSlider}建構器。
     *
     * @return 新的{@link org.controlsfx.control.RangeSliderBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.RangeSliderBuilder<org.controlsfx.control.RangeSlider, ?> rangeSlider()
    {
        return new org.controlsfx.control.RangeSliderBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.Rating}建構器。
     *
     * @return 新的{@link org.controlsfx.control.RatingBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.RatingBuilder<org.controlsfx.control.Rating, ?> rating()
    {
        return new org.controlsfx.control.RatingBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.SegmentedButton}建構器。
     *
     * @return 新的{@link org.controlsfx.control.SegmentedButtonBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.SegmentedButtonBuilder<org.controlsfx.control.SegmentedButton, ?> segmentedButton()
    {
        return new org.controlsfx.control.SegmentedButtonBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.SnapshotView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.SnapshotViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.SnapshotViewBuilder<org.controlsfx.control.SnapshotView, ?> snapshotView()
    {
        return new org.controlsfx.control.SnapshotViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.StatusBar}建構器。
     *
     * @return 新的{@link org.controlsfx.control.StatusBarBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.StatusBarBuilder<org.controlsfx.control.StatusBar, ?> statusBar()
    {
        return new org.controlsfx.control.StatusBarBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.TaskProgressView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.TaskProgressViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends javafx.concurrent.Task<?>> org.controlsfx.control.TaskProgressViewBuilder<T, org.controlsfx.control.TaskProgressView<T>, ?> taskProgressView()
    {
        return new org.controlsfx.control.TaskProgressViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.action.Action}建構器。
     *
     * @return 新的{@link org.controlsfx.control.action.ActionBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.action.ActionBuilder<org.controlsfx.control.action.Action, ?> action()
    {
        return new org.controlsfx.control.action.ActionBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.action.ActionGroup}建構器。
     *
     * @return 新的{@link org.controlsfx.control.action.ActionGroupBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.action.ActionGroupBuilder<org.controlsfx.control.action.ActionGroup, ?> actionGroup()
    {
        return new org.controlsfx.control.action.ActionGroupBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.cell.ColorGridCell}建構器。
     *
     * @return 新的{@link org.controlsfx.control.cell.ColorGridCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.cell.ColorGridCellBuilder<org.controlsfx.control.cell.ColorGridCell, ?> colorGridCell()
    {
        return new org.controlsfx.control.cell.ColorGridCellBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.cell.ImageGridCell}建構器。
     *
     * @return 新的{@link org.controlsfx.control.cell.ImageGridCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.cell.ImageGridCellBuilder<org.controlsfx.control.cell.ImageGridCell, ?> imageGridCell()
    {
        return new org.controlsfx.control.cell.ImageGridCellBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.cell.MediaImageCell}建構器。
     *
     * @return 新的{@link org.controlsfx.control.cell.MediaImageCellBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.cell.MediaImageCellBuilder<org.controlsfx.control.cell.MediaImageCell, ?> mediaImageCell()
    {
        return new org.controlsfx.control.cell.MediaImageCellBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.decoration.GraphicDecoration}建構器。
     *
     * @return 新的{@link org.controlsfx.control.decoration.GraphicDecorationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.decoration.GraphicDecorationBuilder<org.controlsfx.control.decoration.GraphicDecoration, ?> graphicDecoration()
    {
        return new org.controlsfx.control.decoration.GraphicDecorationBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.decoration.StyleClassDecoration}建構器。
     *
     * @return 新的{@link org.controlsfx.control.decoration.StyleClassDecorationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.decoration.StyleClassDecorationBuilder<org.controlsfx.control.decoration.StyleClassDecoration, ?> styleClassDecoration()
    {
        return new org.controlsfx.control.decoration.StyleClassDecorationBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.GridBase}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.GridBaseBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.spreadsheet.GridBaseBuilder<org.controlsfx.control.spreadsheet.GridBase, ?> gridBase()
    {
        return new org.controlsfx.control.spreadsheet.GridBaseBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.GridChange}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.GridChangeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.spreadsheet.GridChangeBuilder<org.controlsfx.control.spreadsheet.GridChange, ?> gridChange()
    {
        return new org.controlsfx.control.spreadsheet.GridChangeBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.SpreadsheetCellBase}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.SpreadsheetCellBaseBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.spreadsheet.SpreadsheetCellBaseBuilder<org.controlsfx.control.spreadsheet.SpreadsheetCellBase, ?> spreadsheetCellBase()
    {
        return new org.controlsfx.control.spreadsheet.SpreadsheetCellBaseBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.SpreadsheetCellEditor}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.SpreadsheetCellEditorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.spreadsheet.SpreadsheetCellEditorBuilder<org.controlsfx.control.spreadsheet.SpreadsheetCellEditor, ?> spreadsheetCellEditor()
    {
        return new org.controlsfx.control.spreadsheet.SpreadsheetCellEditorBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.SpreadsheetCellType}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.SpreadsheetCellTypeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.spreadsheet.SpreadsheetCellTypeBuilder<T, org.controlsfx.control.spreadsheet.SpreadsheetCellType<T>, ?> spreadsheetCellType()
    {
        return new org.controlsfx.control.spreadsheet.SpreadsheetCellTypeBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.SpreadsheetView}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.SpreadsheetViewBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.spreadsheet.SpreadsheetViewBuilder<org.controlsfx.control.spreadsheet.SpreadsheetView, ?> spreadsheetView()
    {
        return new org.controlsfx.control.spreadsheet.SpreadsheetViewBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.spreadsheet.StringConverterWithFormat}建構器。
     *
     * @return 新的{@link org.controlsfx.control.spreadsheet.StringConverterWithFormatBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object> org.controlsfx.control.spreadsheet.StringConverterWithFormatBuilder<T, org.controlsfx.control.spreadsheet.StringConverterWithFormat<T>, ?> stringConverterWithFormat()
    {
        return new org.controlsfx.control.spreadsheet.StringConverterWithFormatBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.textfield.CustomPasswordField}建構器。
     *
     * @return 新的{@link org.controlsfx.control.textfield.CustomPasswordFieldBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.textfield.CustomPasswordFieldBuilder<org.controlsfx.control.textfield.CustomPasswordField, ?> customPasswordField()
    {
        return new org.controlsfx.control.textfield.CustomPasswordFieldBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.control.textfield.CustomTextField}建構器。
     *
     * @return 新的{@link org.controlsfx.control.textfield.CustomTextFieldBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.control.textfield.CustomTextFieldBuilder<org.controlsfx.control.textfield.CustomTextField, ?> customTextField()
    {
        return new org.controlsfx.control.textfield.CustomTextFieldBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.dialog.CommandLinksDialog}建構器。
     *
     * @return 新的{@link org.controlsfx.dialog.CommandLinksDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.dialog.CommandLinksDialogBuilder<org.controlsfx.dialog.CommandLinksDialog, ?> commandLinksDialog()
    {
        return new org.controlsfx.dialog.CommandLinksDialogBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.dialog.ExceptionDialog}建構器。
     *
     * @return 新的{@link org.controlsfx.dialog.ExceptionDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.dialog.ExceptionDialogBuilder<org.controlsfx.dialog.ExceptionDialog, ?> exceptionDialog()
    {
        return new org.controlsfx.dialog.ExceptionDialogBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.dialog.FontSelectorDialog}建構器。
     *
     * @return 新的{@link org.controlsfx.dialog.FontSelectorDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.dialog.FontSelectorDialogBuilder<org.controlsfx.dialog.FontSelectorDialog, ?> fontSelectorDialog()
    {
        return new org.controlsfx.dialog.FontSelectorDialogBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.dialog.LoginDialog}建構器。
     *
     * @return 新的{@link org.controlsfx.dialog.LoginDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.dialog.LoginDialogBuilder<org.controlsfx.dialog.LoginDialog, ?> loginDialog()
    {
        return new org.controlsfx.dialog.LoginDialogBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.dialog.ProgressDialog}建構器。
     *
     * @return 新的{@link org.controlsfx.dialog.ProgressDialogBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.dialog.ProgressDialogBuilder<org.controlsfx.dialog.ProgressDialog, ?> progressDialog()
    {
        return new org.controlsfx.dialog.ProgressDialogBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.dialog.Wizard}建構器。
     *
     * @return 新的{@link org.controlsfx.dialog.WizardBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.dialog.WizardBuilder<org.controlsfx.dialog.Wizard, ?> wizard()
    {
        return new org.controlsfx.dialog.WizardBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.glyphfont.FontAwesome}建構器。
     *
     * @return 新的{@link org.controlsfx.glyphfont.FontAwesomeBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.glyphfont.FontAwesomeBuilder<org.controlsfx.glyphfont.FontAwesome, ?> fontAwesome()
    {
        return new org.controlsfx.glyphfont.FontAwesomeBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.glyphfont.Glyph}建構器。
     *
     * @return 新的{@link org.controlsfx.glyphfont.GlyphBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.glyphfont.GlyphBuilder<org.controlsfx.glyphfont.Glyph, ?> glyph()
    {
        return new org.controlsfx.glyphfont.GlyphBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.glyphfont.GlyphFont}建構器。
     *
     * @return 新的{@link org.controlsfx.glyphfont.GlyphFontBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.glyphfont.GlyphFontBuilder<org.controlsfx.glyphfont.GlyphFont, ?> glyphFont()
    {
        return new org.controlsfx.glyphfont.GlyphFontBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.property.BeanProperty}建構器。
     *
     * @return 新的{@link org.controlsfx.property.BeanPropertyBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.property.BeanPropertyBuilder<org.controlsfx.property.BeanProperty, ?> beanProperty()
    {
        return new org.controlsfx.property.BeanPropertyBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.property.editor.AbstractPropertyEditor}建構器。
     *
     * @return 新的{@link org.controlsfx.property.editor.AbstractPropertyEditorBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static <T extends java.lang.Object, C extends javafx.scene.Node> org.controlsfx.property.editor.AbstractPropertyEditorBuilder<T, C, org.controlsfx.property.editor.AbstractPropertyEditor<T, C>, ?> abstractPropertyEditor()
    {
        return new org.controlsfx.property.editor.AbstractPropertyEditorBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.property.editor.DefaultPropertyEditorFactory}建構器。
     *
     * @return 新的{@link org.controlsfx.property.editor.DefaultPropertyEditorFactoryBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.property.editor.DefaultPropertyEditorFactoryBuilder<org.controlsfx.property.editor.DefaultPropertyEditorFactory, ?> defaultPropertyEditorFactory()
    {
        return new org.controlsfx.property.editor.DefaultPropertyEditorFactoryBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.tools.Utils}建構器。
     *
     * @return 新的{@link org.controlsfx.tools.UtilsBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.tools.UtilsBuilder<org.controlsfx.tools.Utils, ?> utils()
    {
        return new org.controlsfx.tools.UtilsBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.validation.ValidationResult}建構器。
     *
     * @return 新的{@link org.controlsfx.validation.ValidationResultBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.validation.ValidationResultBuilder<org.controlsfx.validation.ValidationResult, ?> validationResult()
    {
        return new org.controlsfx.validation.ValidationResultBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.validation.ValidationSupport}建構器。
     *
     * @return 新的{@link org.controlsfx.validation.ValidationSupportBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.validation.ValidationSupportBuilder<org.controlsfx.validation.ValidationSupport, ?> validationSupport()
    {
        return new org.controlsfx.validation.ValidationSupportBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.validation.decoration.AbstractValidationDecoration}建構器。
     *
     * @return 新的{@link org.controlsfx.validation.decoration.AbstractValidationDecorationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.validation.decoration.AbstractValidationDecorationBuilder<org.controlsfx.validation.decoration.AbstractValidationDecoration, ?> abstractValidationDecoration()
    {
        return new org.controlsfx.validation.decoration.AbstractValidationDecorationBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.validation.decoration.CompoundValidationDecoration}建構器。
     *
     * @return 新的{@link org.controlsfx.validation.decoration.CompoundValidationDecorationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.validation.decoration.CompoundValidationDecorationBuilder<org.controlsfx.validation.decoration.CompoundValidationDecoration, ?> compoundValidationDecoration()
    {
        return new org.controlsfx.validation.decoration.CompoundValidationDecorationBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.validation.decoration.GraphicValidationDecoration}建構器。
     *
     * @return 新的{@link org.controlsfx.validation.decoration.GraphicValidationDecorationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.validation.decoration.GraphicValidationDecorationBuilder<org.controlsfx.validation.decoration.GraphicValidationDecoration, ?> graphicValidationDecoration()
    {
        return new org.controlsfx.validation.decoration.GraphicValidationDecorationBuilder();
    }

    /**
     * 建立新的{@link org.controlsfx.validation.decoration.StyleClassValidationDecoration}建構器。
     *
     * @return 新的{@link org.controlsfx.validation.decoration.StyleClassValidationDecorationBuilder}
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static org.controlsfx.validation.decoration.StyleClassValidationDecorationBuilder<org.controlsfx.validation.decoration.StyleClassValidationDecoration, ?> styleClassValidationDecoration()
    {
        return new org.controlsfx.validation.decoration.StyleClassValidationDecorationBuilder();
    }
}
