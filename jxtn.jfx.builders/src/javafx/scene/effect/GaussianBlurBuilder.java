// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.effect;

/**
 * {@link GaussianBlur}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link GaussianBlur})
 * @param <B> 建構器本身的型態(需繼承{@link GaussianBlurBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class GaussianBlurBuilder<Z extends GaussianBlur, B extends GaussianBlurBuilder<Z, B>>
        extends javafx.scene.effect.EffectBuilder<Z, B>
{

    private boolean hasInput;
    private javafx.scene.effect.Effect valInput;

    private boolean hasRadius;
    private double valRadius;

    private boolean boundInput;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.effect.Effect> obsrvInput;

    private boolean boundRadius;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvRadius;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasInput)
            instance.setInput(this.valInput);
        if (this.hasRadius)
            instance.setRadius(this.valRadius);
        if (this.boundInput)
            instance.inputProperty().bind(this.obsrvInput);
        if (this.boundRadius)
            instance.radiusProperty().bind(this.obsrvRadius);
    }

    /**
     * 設定屬性{@link GaussianBlur#setInput(javafx.scene.effect.Effect)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B input(javafx.scene.effect.Effect value)
    {
        this.hasInput = true;
        this.valInput = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link GaussianBlur#setRadius(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B radius(double value)
    {
        this.hasRadius = true;
        this.valRadius = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link GaussianBlur#inputProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindInput(javafx.beans.value.ObservableValue<? extends javafx.scene.effect.Effect> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundInput = true;
        this.obsrvInput = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link GaussianBlur#radiusProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindRadius(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundRadius = true;
        this.obsrvRadius = source;
        return (B) this;
    }

    /**
     * 建構{@link GaussianBlur}物件
     *
     * @return 新的{@link GaussianBlur}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public GaussianBlur build()
    {
        GaussianBlur instance = new GaussianBlur();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
