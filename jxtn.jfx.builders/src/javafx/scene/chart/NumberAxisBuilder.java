// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.chart;

/**
 * {@link NumberAxis}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link NumberAxis})
 * @param <B> 建構器本身的型態(需繼承{@link NumberAxisBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class NumberAxisBuilder<Z extends NumberAxis, B extends NumberAxisBuilder<Z, B>>
        extends javafx.scene.chart.ValueAxisBuilder<java.lang.Number, Z, B>
{

    private boolean hasForceZeroInRange;
    private boolean valForceZeroInRange;

    private boolean hasTickUnit;
    private double valTickUnit;

    private boolean boundForceZeroInRange;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrvForceZeroInRange;

    private boolean boundTickUnit;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvTickUnit;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasForceZeroInRange)
            instance.setForceZeroInRange(this.valForceZeroInRange);
        if (this.hasTickUnit)
            instance.setTickUnit(this.valTickUnit);
        if (this.boundForceZeroInRange)
            instance.forceZeroInRangeProperty().bind(this.obsrvForceZeroInRange);
        if (this.boundTickUnit)
            instance.tickUnitProperty().bind(this.obsrvTickUnit);
    }

    /**
     * 設定屬性{@link NumberAxis#setForceZeroInRange(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B forceZeroInRange(boolean value)
    {
        this.hasForceZeroInRange = true;
        this.valForceZeroInRange = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link NumberAxis#setTickUnit(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B tickUnit(double value)
    {
        this.hasTickUnit = true;
        this.valTickUnit = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link NumberAxis#forceZeroInRangeProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindForceZeroInRange(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundForceZeroInRange = true;
        this.obsrvForceZeroInRange = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link NumberAxis#tickUnitProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindTickUnit(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundTickUnit = true;
        this.obsrvTickUnit = source;
        return (B) this;
    }

    /**
     * 建構{@link NumberAxis}物件
     *
     * @return 新的{@link NumberAxis}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public NumberAxis build()
    {
        NumberAxis instance = new NumberAxis();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
