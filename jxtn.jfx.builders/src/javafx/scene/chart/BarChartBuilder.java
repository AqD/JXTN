// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.chart;

/**
 * {@link BarChart}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class BarChartBuilder<X extends java.lang.Object, Y extends java.lang.Object, Z extends BarChart<X, Y>, B extends BarChartBuilder<X, Y, Z, B>>
        extends javafx.scene.chart.XYChartBuilder<X, Y, Z, B>
{

    protected boolean hasBarGap;
    protected double valBarGap;

    protected boolean hasCategoryGap;
    protected double valCategoryGap;

    protected boolean boundBarGap;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvBarGap;

    protected boolean boundCategoryGap;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvCategoryGap;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasBarGap)
            instance.setBarGap(this.valBarGap);
        if (this.hasCategoryGap)
            instance.setCategoryGap(this.valCategoryGap);
        if (this.boundBarGap)
            instance.barGapProperty().bind(this.obsrvBarGap);
        if (this.boundCategoryGap)
            instance.categoryGapProperty().bind(this.obsrvCategoryGap);
    }

    /**
     * 設定屬性{@link BarChart#setBarGap}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B barGap(double value)
    {
        this.hasBarGap = true;
        this.valBarGap = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link BarChart#setCategoryGap}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B categoryGap(double value)
    {
        this.hasCategoryGap = true;
        this.valCategoryGap = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link BarChart#barGapProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindBarGap(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundBarGap = true;
        this.obsrvBarGap = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link BarChart#categoryGapProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindCategoryGap(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundCategoryGap = true;
        this.obsrvCategoryGap = source;
        return (B) this;
    }

    /**
     * 建構{@link BarChart}物件
     *
     * @return 新的{@link BarChart}物件實體
     */
    @SuppressWarnings("unchecked")
    public BarChart<X, Y> build(javafx.scene.chart.Axis<X> arg0, javafx.scene.chart.Axis<Y> arg1)
    {
        BarChart<X, Y> instance = new BarChart<X, Y>(arg0, arg1);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
