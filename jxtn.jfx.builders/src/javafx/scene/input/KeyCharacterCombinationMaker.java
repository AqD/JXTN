// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.input;

/**
 * {@link KeyCharacterCombination}建構器。
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link KeyCharacterCombination})
 * @param <B> 建構器本身的型態(需繼承{@link KeyCharacterCombinationMaker})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class KeyCharacterCombinationMaker<Z extends KeyCharacterCombination, B extends KeyCharacterCombinationMaker<Z, B>>
        extends javafx.scene.input.KeyCombinationMaker<Z, B>
        implements KeyCharacterCombinationMakerExt<Z, B>
{

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
    }

    /**
     * 建構{@link KeyCharacterCombination}物件。
     *
     * @return 新的{@link KeyCharacterCombination}物件實體
     */
    @SuppressWarnings("unchecked")
    public KeyCharacterCombination build(java.lang.String arg0, javafx.scene.input.KeyCombination.Modifier[] arg1)
    {
        KeyCharacterCombination instance = new KeyCharacterCombination(arg0, arg1);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link KeyCharacterCombination}物件。
     *
     * @return 新的{@link KeyCharacterCombination}物件實體
     */
    @SuppressWarnings("unchecked")
    public KeyCharacterCombination build(java.lang.String arg0, javafx.scene.input.KeyCombination.ModifierValue arg1, javafx.scene.input.KeyCombination.ModifierValue arg2, javafx.scene.input.KeyCombination.ModifierValue arg3, javafx.scene.input.KeyCombination.ModifierValue arg4, javafx.scene.input.KeyCombination.ModifierValue arg5)
    {
        KeyCharacterCombination instance = new KeyCharacterCombination(arg0, arg1, arg2, arg3, arg4, arg5);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
