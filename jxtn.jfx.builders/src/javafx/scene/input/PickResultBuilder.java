// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.input;

/**
 * {@link PickResult}建構器。
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link PickResult})
 * @param <B> 建構器本身的型態(需繼承{@link PickResultBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class PickResultBuilder<Z extends PickResult, B extends PickResultBuilder<Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
        implements PickResultBuilderExt<Z, B>
{

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
    }

    /**
     * 建構{@link PickResult}物件。
     *
     * @return 新的{@link PickResult}物件實體
     */
    @SuppressWarnings("unchecked")
    public PickResult build(javafx.event.EventTarget arg0, double arg1, double arg2)
    {
        PickResult instance = new PickResult(arg0, arg1, arg2);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link PickResult}物件。
     *
     * @return 新的{@link PickResult}物件實體
     */
    @SuppressWarnings("unchecked")
    public PickResult build(javafx.scene.Node arg0, javafx.geometry.Point3D arg1, double arg2)
    {
        PickResult instance = new PickResult(arg0, arg1, arg2);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link PickResult}物件。
     *
     * @return 新的{@link PickResult}物件實體
     */
    @SuppressWarnings("unchecked")
    public PickResult build(javafx.scene.Node arg0, javafx.geometry.Point3D arg1, double arg2, int arg3, javafx.geometry.Point2D arg4)
    {
        PickResult instance = new PickResult(arg0, arg1, arg2, arg3, arg4);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
