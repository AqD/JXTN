// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.paint;

/**
 * {@link ImagePattern}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link ImagePattern})
 * @param <B> 建構器本身的型態(需繼承{@link ImagePatternBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class ImagePatternBuilder<Z extends ImagePattern, B extends ImagePatternBuilder<Z, B>>
        extends javafx.scene.paint.PaintBuilder<Z, B>
        implements ImagePatternBuilderExt<Z, B>
{

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
    }

    /**
     * 建構{@link ImagePattern}物件
     *
     * @return 新的{@link ImagePattern}物件實體
     */
    @SuppressWarnings("unchecked")
    public ImagePattern build(javafx.scene.image.Image arg0)
    {
        ImagePattern instance = new ImagePattern(arg0);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link ImagePattern}物件
     *
     * @return 新的{@link ImagePattern}物件實體
     */
    @SuppressWarnings("unchecked")
    public ImagePattern build(javafx.scene.image.Image arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5)
    {
        ImagePattern instance = new ImagePattern(arg0, arg1, arg2, arg3, arg4, arg5);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
