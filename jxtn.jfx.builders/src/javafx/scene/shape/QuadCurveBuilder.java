// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.shape;

/**
 * {@link QuadCurve}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class QuadCurveBuilder<Z extends QuadCurve, B extends QuadCurveBuilder<Z, B>>
        extends javafx.scene.shape.ShapeBuilder<Z, B>
{

    protected boolean hasControlX;
    protected double valControlX;

    protected boolean hasControlY;
    protected double valControlY;

    protected boolean hasEndX;
    protected double valEndX;

    protected boolean hasEndY;
    protected double valEndY;

    protected boolean hasStartX;
    protected double valStartX;

    protected boolean hasStartY;
    protected double valStartY;

    protected boolean boundControlX;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvControlX;

    protected boolean boundControlY;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvControlY;

    protected boolean boundEndX;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvEndX;

    protected boolean boundEndY;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvEndY;

    protected boolean boundStartX;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvStartX;

    protected boolean boundStartY;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvStartY;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasControlX)
            instance.setControlX(this.valControlX);
        if (this.hasControlY)
            instance.setControlY(this.valControlY);
        if (this.hasEndX)
            instance.setEndX(this.valEndX);
        if (this.hasEndY)
            instance.setEndY(this.valEndY);
        if (this.hasStartX)
            instance.setStartX(this.valStartX);
        if (this.hasStartY)
            instance.setStartY(this.valStartY);
        if (this.boundControlX)
            instance.controlXProperty().bind(this.obsrvControlX);
        if (this.boundControlY)
            instance.controlYProperty().bind(this.obsrvControlY);
        if (this.boundEndX)
            instance.endXProperty().bind(this.obsrvEndX);
        if (this.boundEndY)
            instance.endYProperty().bind(this.obsrvEndY);
        if (this.boundStartX)
            instance.startXProperty().bind(this.obsrvStartX);
        if (this.boundStartY)
            instance.startYProperty().bind(this.obsrvStartY);
    }

    /**
     * 設定屬性{@link QuadCurve#setControlX(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B controlX(double value)
    {
        this.hasControlX = true;
        this.valControlX = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#setControlY(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B controlY(double value)
    {
        this.hasControlY = true;
        this.valControlY = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#setEndX(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B endX(double value)
    {
        this.hasEndX = true;
        this.valEndX = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#setEndY(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B endY(double value)
    {
        this.hasEndY = true;
        this.valEndY = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#setStartX(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B startX(double value)
    {
        this.hasStartX = true;
        this.valStartX = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#setStartY(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B startY(double value)
    {
        this.hasStartY = true;
        this.valStartY = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#controlXProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindControlX(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundControlX = true;
        this.obsrvControlX = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#controlYProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindControlY(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundControlY = true;
        this.obsrvControlY = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#endXProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindEndX(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundEndX = true;
        this.obsrvEndX = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#endYProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindEndY(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundEndY = true;
        this.obsrvEndY = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#startXProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindStartX(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundStartX = true;
        this.obsrvStartX = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link QuadCurve#startYProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindStartY(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundStartY = true;
        this.obsrvStartY = source;
        return (B) this;
    }

    /**
     * 建構{@link QuadCurve}物件
     *
     * @return 新的{@link QuadCurve}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public QuadCurve build()
    {
        QuadCurve instance = new QuadCurve();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
