// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.shape;

/**
 * {@link SVGPath}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link SVGPath})
 * @param <B> 建構器本身的型態(需繼承{@link SVGPathBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class SVGPathBuilder<Z extends SVGPath, B extends SVGPathBuilder<Z, B>>
        extends javafx.scene.shape.ShapeBuilder<Z, B>
        implements SVGPathBuilderExt<Z, B>
{

    private boolean hasContent;
    private java.lang.String valContent;

    private boolean hasFillRule;
    private javafx.scene.shape.FillRule valFillRule;

    private boolean bound1Content;
    private boolean bound2Content;
    private javafx.beans.value.ObservableValue<? extends String> obsrv1Content;
    private javafx.beans.property.Property<String> obsrv2Content;

    private boolean bound1FillRule;
    private boolean bound2FillRule;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.shape.FillRule> obsrv1FillRule;
    private javafx.beans.property.Property<javafx.scene.shape.FillRule> obsrv2FillRule;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasContent)
            instance.setContent(this.valContent);
        if (this.hasFillRule)
            instance.setFillRule(this.valFillRule);
        if (this.bound1Content)
            instance.contentProperty().bind(this.obsrv1Content);
        if (this.bound2Content)
            instance.contentProperty().bindBidirectional(this.obsrv2Content);
        if (this.bound1FillRule)
            instance.fillRuleProperty().bind(this.obsrv1FillRule);
        if (this.bound2FillRule)
            instance.fillRuleProperty().bindBidirectional(this.obsrv2FillRule);
    }

    /**
     * 設定屬性{@link SVGPath#setContent(java.lang.String)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B content(java.lang.String value)
    {
        this.hasContent = true;
        this.valContent = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link SVGPath#setFillRule(javafx.scene.shape.FillRule)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B fillRule(javafx.scene.shape.FillRule value)
    {
        this.hasFillRule = true;
        this.valFillRule = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link SVGPath#contentProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindContent(javafx.beans.value.ObservableValue<? extends String> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Content = true;
        this.obsrv1Content = source;
        this.bound2Content = false;
        this.obsrv2Content = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link SVGPath#contentProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalContent(javafx.beans.property.Property<String> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Content = false;
        this.obsrv1Content = null;
        this.bound2Content = true;
        this.obsrv2Content = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link SVGPath#fillRuleProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindFillRule(javafx.beans.value.ObservableValue<? extends javafx.scene.shape.FillRule> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1FillRule = true;
        this.obsrv1FillRule = source;
        this.bound2FillRule = false;
        this.obsrv2FillRule = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link SVGPath#fillRuleProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalFillRule(javafx.beans.property.Property<javafx.scene.shape.FillRule> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1FillRule = false;
        this.obsrv1FillRule = null;
        this.bound2FillRule = true;
        this.obsrv2FillRule = source;
        return (B) this;
    }

    /**
     * 建構{@link SVGPath}物件
     *
     * @return 新的{@link SVGPath}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public SVGPath build()
    {
        SVGPath instance = new SVGPath();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
