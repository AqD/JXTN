// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.shape;

/**
 * {@link Line}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link Line})
 * @param <B> 建構器本身的型態(需繼承{@link LineBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class LineBuilder<Z extends Line, B extends LineBuilder<Z, B>>
        extends javafx.scene.shape.ShapeBuilder<Z, B>
{

    private boolean hasEndX;
    private double valEndX;

    private boolean hasEndY;
    private double valEndY;

    private boolean hasStartX;
    private double valStartX;

    private boolean hasStartY;
    private double valStartY;

    private boolean boundEndX;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvEndX;

    private boolean boundEndY;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvEndY;

    private boolean boundStartX;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvStartX;

    private boolean boundStartY;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvStartY;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasEndX)
            instance.setEndX(this.valEndX);
        if (this.hasEndY)
            instance.setEndY(this.valEndY);
        if (this.hasStartX)
            instance.setStartX(this.valStartX);
        if (this.hasStartY)
            instance.setStartY(this.valStartY);
        if (this.boundEndX)
            instance.endXProperty().bind(this.obsrvEndX);
        if (this.boundEndY)
            instance.endYProperty().bind(this.obsrvEndY);
        if (this.boundStartX)
            instance.startXProperty().bind(this.obsrvStartX);
        if (this.boundStartY)
            instance.startYProperty().bind(this.obsrvStartY);
    }

    /**
     * 設定屬性{@link Line#setEndX(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B endX(double value)
    {
        this.hasEndX = true;
        this.valEndX = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#setEndY(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B endY(double value)
    {
        this.hasEndY = true;
        this.valEndY = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#setStartX(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B startX(double value)
    {
        this.hasStartX = true;
        this.valStartX = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#setStartY(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B startY(double value)
    {
        this.hasStartY = true;
        this.valStartY = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#endXProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindEndX(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundEndX = true;
        this.obsrvEndX = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#endYProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindEndY(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundEndY = true;
        this.obsrvEndY = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#startXProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindStartX(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundStartX = true;
        this.obsrvStartX = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link Line#startYProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindStartY(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundStartY = true;
        this.obsrvStartY = source;
        return (B) this;
    }

    /**
     * 建構{@link Line}物件
     *
     * @return 新的{@link Line}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public Line build()
    {
        Line instance = new Line();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
