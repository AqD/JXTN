// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.layout;

/**
 * {@link RowConstraints}建構器。
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link RowConstraints})
 * @param <B> 建構器本身的型態(需繼承{@link RowConstraintsBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class RowConstraintsBuilder<Z extends RowConstraints, B extends RowConstraintsBuilder<Z, B>>
        extends javafx.scene.layout.ConstraintsBaseBuilder<Z, B>
        implements RowConstraintsBuilderExt<Z, B>
{

    private boolean hasFillHeight;
    private boolean valFillHeight;

    private boolean hasMaxHeight;
    private double valMaxHeight;

    private boolean hasMinHeight;
    private double valMinHeight;

    private boolean hasPercentHeight;
    private double valPercentHeight;

    private boolean hasPrefHeight;
    private double valPrefHeight;

    private boolean hasValignment;
    private javafx.geometry.VPos valValignment;

    private boolean hasVgrow;
    private javafx.scene.layout.Priority valVgrow;

    private boolean bound1FillHeight;
    private boolean bound2FillHeight;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrv1FillHeight;
    private javafx.beans.property.Property<Boolean> obsrv2FillHeight;

    private boolean bound1MaxHeight;
    private boolean bound2MaxHeight;
    private javafx.beans.value.ObservableValue<? extends Number> obsrv1MaxHeight;
    private javafx.beans.property.Property<Number> obsrv2MaxHeight;

    private boolean bound1MinHeight;
    private boolean bound2MinHeight;
    private javafx.beans.value.ObservableValue<? extends Number> obsrv1MinHeight;
    private javafx.beans.property.Property<Number> obsrv2MinHeight;

    private boolean bound1PercentHeight;
    private boolean bound2PercentHeight;
    private javafx.beans.value.ObservableValue<? extends Number> obsrv1PercentHeight;
    private javafx.beans.property.Property<Number> obsrv2PercentHeight;

    private boolean bound1PrefHeight;
    private boolean bound2PrefHeight;
    private javafx.beans.value.ObservableValue<? extends Number> obsrv1PrefHeight;
    private javafx.beans.property.Property<Number> obsrv2PrefHeight;

    private boolean bound1Valignment;
    private boolean bound2Valignment;
    private javafx.beans.value.ObservableValue<? extends javafx.geometry.VPos> obsrv1Valignment;
    private javafx.beans.property.Property<javafx.geometry.VPos> obsrv2Valignment;

    private boolean bound1Vgrow;
    private boolean bound2Vgrow;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.layout.Priority> obsrv1Vgrow;
    private javafx.beans.property.Property<javafx.scene.layout.Priority> obsrv2Vgrow;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasFillHeight)
            instance.setFillHeight(this.valFillHeight);
        if (this.hasMaxHeight)
            instance.setMaxHeight(this.valMaxHeight);
        if (this.hasMinHeight)
            instance.setMinHeight(this.valMinHeight);
        if (this.hasPercentHeight)
            instance.setPercentHeight(this.valPercentHeight);
        if (this.hasPrefHeight)
            instance.setPrefHeight(this.valPrefHeight);
        if (this.hasValignment)
            instance.setValignment(this.valValignment);
        if (this.hasVgrow)
            instance.setVgrow(this.valVgrow);
        if (this.bound1FillHeight)
            instance.fillHeightProperty().bind(this.obsrv1FillHeight);
        if (this.bound2FillHeight)
            instance.fillHeightProperty().bindBidirectional(this.obsrv2FillHeight);
        if (this.bound1MaxHeight)
            instance.maxHeightProperty().bind(this.obsrv1MaxHeight);
        if (this.bound2MaxHeight)
            instance.maxHeightProperty().bindBidirectional(this.obsrv2MaxHeight);
        if (this.bound1MinHeight)
            instance.minHeightProperty().bind(this.obsrv1MinHeight);
        if (this.bound2MinHeight)
            instance.minHeightProperty().bindBidirectional(this.obsrv2MinHeight);
        if (this.bound1PercentHeight)
            instance.percentHeightProperty().bind(this.obsrv1PercentHeight);
        if (this.bound2PercentHeight)
            instance.percentHeightProperty().bindBidirectional(this.obsrv2PercentHeight);
        if (this.bound1PrefHeight)
            instance.prefHeightProperty().bind(this.obsrv1PrefHeight);
        if (this.bound2PrefHeight)
            instance.prefHeightProperty().bindBidirectional(this.obsrv2PrefHeight);
        if (this.bound1Valignment)
            instance.valignmentProperty().bind(this.obsrv1Valignment);
        if (this.bound2Valignment)
            instance.valignmentProperty().bindBidirectional(this.obsrv2Valignment);
        if (this.bound1Vgrow)
            instance.vgrowProperty().bind(this.obsrv1Vgrow);
        if (this.bound2Vgrow)
            instance.vgrowProperty().bindBidirectional(this.obsrv2Vgrow);
    }

    /**
     * 設定屬性{@link RowConstraints#setFillHeight(boolean)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B fillHeight(boolean value)
    {
        this.hasFillHeight = true;
        this.valFillHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setMaxHeight(double)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B maxHeight(double value)
    {
        this.hasMaxHeight = true;
        this.valMaxHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setMinHeight(double)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B minHeight(double value)
    {
        this.hasMinHeight = true;
        this.valMinHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setPercentHeight(double)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B percentHeight(double value)
    {
        this.hasPercentHeight = true;
        this.valPercentHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setPrefHeight(double)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B prefHeight(double value)
    {
        this.hasPrefHeight = true;
        this.valPrefHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setValignment(javafx.geometry.VPos)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B valignment(javafx.geometry.VPos value)
    {
        this.hasValignment = true;
        this.valValignment = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setVgrow(javafx.scene.layout.Priority)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B vgrow(javafx.scene.layout.Priority value)
    {
        this.hasVgrow = true;
        this.valVgrow = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#fillHeightProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindFillHeight(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1FillHeight = true;
        this.obsrv1FillHeight = source;
        this.bound2FillHeight = false;
        this.obsrv2FillHeight = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#fillHeightProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalFillHeight(javafx.beans.property.Property<Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1FillHeight = false;
        this.obsrv1FillHeight = null;
        this.bound2FillHeight = true;
        this.obsrv2FillHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#maxHeightProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindMaxHeight(javafx.beans.value.ObservableValue<? extends Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1MaxHeight = true;
        this.obsrv1MaxHeight = source;
        this.bound2MaxHeight = false;
        this.obsrv2MaxHeight = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#maxHeightProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalMaxHeight(javafx.beans.property.Property<Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1MaxHeight = false;
        this.obsrv1MaxHeight = null;
        this.bound2MaxHeight = true;
        this.obsrv2MaxHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#minHeightProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindMinHeight(javafx.beans.value.ObservableValue<? extends Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1MinHeight = true;
        this.obsrv1MinHeight = source;
        this.bound2MinHeight = false;
        this.obsrv2MinHeight = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#minHeightProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalMinHeight(javafx.beans.property.Property<Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1MinHeight = false;
        this.obsrv1MinHeight = null;
        this.bound2MinHeight = true;
        this.obsrv2MinHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#percentHeightProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindPercentHeight(javafx.beans.value.ObservableValue<? extends Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1PercentHeight = true;
        this.obsrv1PercentHeight = source;
        this.bound2PercentHeight = false;
        this.obsrv2PercentHeight = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#percentHeightProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalPercentHeight(javafx.beans.property.Property<Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1PercentHeight = false;
        this.obsrv1PercentHeight = null;
        this.bound2PercentHeight = true;
        this.obsrv2PercentHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#prefHeightProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindPrefHeight(javafx.beans.value.ObservableValue<? extends Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1PrefHeight = true;
        this.obsrv1PrefHeight = source;
        this.bound2PrefHeight = false;
        this.obsrv2PrefHeight = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#prefHeightProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalPrefHeight(javafx.beans.property.Property<Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1PrefHeight = false;
        this.obsrv1PrefHeight = null;
        this.bound2PrefHeight = true;
        this.obsrv2PrefHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#valignmentProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindValignment(javafx.beans.value.ObservableValue<? extends javafx.geometry.VPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Valignment = true;
        this.obsrv1Valignment = source;
        this.bound2Valignment = false;
        this.obsrv2Valignment = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#valignmentProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalValignment(javafx.beans.property.Property<javafx.geometry.VPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Valignment = false;
        this.obsrv1Valignment = null;
        this.bound2Valignment = true;
        this.obsrv2Valignment = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#vgrowProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindVgrow(javafx.beans.value.ObservableValue<? extends javafx.scene.layout.Priority> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Vgrow = true;
        this.obsrv1Vgrow = source;
        this.bound2Vgrow = false;
        this.obsrv2Vgrow = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#vgrowProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalVgrow(javafx.beans.property.Property<javafx.scene.layout.Priority> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Vgrow = false;
        this.obsrv1Vgrow = null;
        this.bound2Vgrow = true;
        this.obsrv2Vgrow = source;
        return (B) this;
    }

    /**
     * 建構{@link RowConstraints}物件。
     *
     * @return 新的{@link RowConstraints}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public RowConstraints build()
    {
        RowConstraints instance = new RowConstraints();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link RowConstraints}物件。
     *
     * @return 新的{@link RowConstraints}物件實體
     */
    @SuppressWarnings("unchecked")
    public RowConstraints build(double arg0)
    {
        RowConstraints instance = new RowConstraints(arg0);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link RowConstraints}物件。
     *
     * @return 新的{@link RowConstraints}物件實體
     */
    @SuppressWarnings("unchecked")
    public RowConstraints build(double arg0, double arg1, double arg2)
    {
        RowConstraints instance = new RowConstraints(arg0, arg1, arg2);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link RowConstraints}物件。
     *
     * @return 新的{@link RowConstraints}物件實體
     */
    @SuppressWarnings("unchecked")
    public RowConstraints build(double arg0, double arg1, double arg2, javafx.scene.layout.Priority arg3, javafx.geometry.VPos arg4, boolean arg5)
    {
        RowConstraints instance = new RowConstraints(arg0, arg1, arg2, arg3, arg4, arg5);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
