// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.layout;

/**
 * {@link RowConstraints}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class RowConstraintsBuilder<Z extends RowConstraints, B extends RowConstraintsBuilder<Z, B>>
        extends javafx.scene.layout.ConstraintsBaseBuilder<Z, B>
{

    protected boolean hasFillHeight;
    protected boolean valFillHeight;

    protected boolean hasMaxHeight;
    protected double valMaxHeight;

    protected boolean hasMinHeight;
    protected double valMinHeight;

    protected boolean hasPercentHeight;
    protected double valPercentHeight;

    protected boolean hasPrefHeight;
    protected double valPrefHeight;

    protected boolean hasValignment;
    protected javafx.geometry.VPos valValignment;

    protected boolean hasVgrow;
    protected javafx.scene.layout.Priority valVgrow;

    protected boolean boundFillHeight;
    protected javafx.beans.value.ObservableValue<? extends Boolean> obsrvFillHeight;

    protected boolean boundMaxHeight;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvMaxHeight;

    protected boolean boundMinHeight;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvMinHeight;

    protected boolean boundPercentHeight;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvPercentHeight;

    protected boolean boundPrefHeight;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvPrefHeight;

    protected boolean boundValignment;
    protected javafx.beans.value.ObservableValue<? extends javafx.geometry.VPos> obsrvValignment;

    protected boolean boundVgrow;
    protected javafx.beans.value.ObservableValue<? extends javafx.scene.layout.Priority> obsrvVgrow;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasFillHeight)
            instance.setFillHeight(this.valFillHeight);
        if (this.hasMaxHeight)
            instance.setMaxHeight(this.valMaxHeight);
        if (this.hasMinHeight)
            instance.setMinHeight(this.valMinHeight);
        if (this.hasPercentHeight)
            instance.setPercentHeight(this.valPercentHeight);
        if (this.hasPrefHeight)
            instance.setPrefHeight(this.valPrefHeight);
        if (this.hasValignment)
            instance.setValignment(this.valValignment);
        if (this.hasVgrow)
            instance.setVgrow(this.valVgrow);
        if (this.boundFillHeight)
            instance.fillHeightProperty().bind(this.obsrvFillHeight);
        if (this.boundMaxHeight)
            instance.maxHeightProperty().bind(this.obsrvMaxHeight);
        if (this.boundMinHeight)
            instance.minHeightProperty().bind(this.obsrvMinHeight);
        if (this.boundPercentHeight)
            instance.percentHeightProperty().bind(this.obsrvPercentHeight);
        if (this.boundPrefHeight)
            instance.prefHeightProperty().bind(this.obsrvPrefHeight);
        if (this.boundValignment)
            instance.valignmentProperty().bind(this.obsrvValignment);
        if (this.boundVgrow)
            instance.vgrowProperty().bind(this.obsrvVgrow);
    }

    /**
     * 設定屬性{@link RowConstraints#setFillHeight(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B fillHeight(boolean value)
    {
        this.hasFillHeight = true;
        this.valFillHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setMaxHeight(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B maxHeight(double value)
    {
        this.hasMaxHeight = true;
        this.valMaxHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setMinHeight(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B minHeight(double value)
    {
        this.hasMinHeight = true;
        this.valMinHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setPercentHeight(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B percentHeight(double value)
    {
        this.hasPercentHeight = true;
        this.valPercentHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setPrefHeight(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B prefHeight(double value)
    {
        this.hasPrefHeight = true;
        this.valPrefHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setValignment(javafx.geometry.VPos)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B valignment(javafx.geometry.VPos value)
    {
        this.hasValignment = true;
        this.valValignment = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#setVgrow(javafx.scene.layout.Priority)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B vgrow(javafx.scene.layout.Priority value)
    {
        this.hasVgrow = true;
        this.valVgrow = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#fillHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindFillHeight(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundFillHeight = true;
        this.obsrvFillHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#maxHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindMaxHeight(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundMaxHeight = true;
        this.obsrvMaxHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#minHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindMinHeight(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundMinHeight = true;
        this.obsrvMinHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#percentHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindPercentHeight(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundPercentHeight = true;
        this.obsrvPercentHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#prefHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindPrefHeight(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundPrefHeight = true;
        this.obsrvPrefHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#valignmentProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindValignment(javafx.beans.value.ObservableValue<? extends javafx.geometry.VPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundValignment = true;
        this.obsrvValignment = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link RowConstraints#vgrowProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindVgrow(javafx.beans.value.ObservableValue<? extends javafx.scene.layout.Priority> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundVgrow = true;
        this.obsrvVgrow = source;
        return (B) this;
    }

    /**
     * 建構{@link RowConstraints}物件
     *
     * @return 新的{@link RowConstraints}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public RowConstraints build()
    {
        RowConstraints instance = new RowConstraints();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
