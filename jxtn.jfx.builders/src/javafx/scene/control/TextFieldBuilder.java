// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link TextField}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link TextField})
 * @param <B> 建構器本身的型態(需繼承{@link TextFieldBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class TextFieldBuilder<Z extends TextField, B extends TextFieldBuilder<Z, B>>
        extends javafx.scene.control.TextInputControlBuilder<Z, B>
{

    private boolean hasAlignment;
    private javafx.geometry.Pos valAlignment;

    private boolean hasOnAction;
    private javafx.event.EventHandler<javafx.event.ActionEvent> valOnAction;

    private boolean hasPrefColumnCount;
    private int valPrefColumnCount;

    private boolean boundAlignment;
    private javafx.beans.value.ObservableValue<? extends javafx.geometry.Pos> obsrvAlignment;

    private boolean boundOnAction;
    private javafx.beans.value.ObservableValue<? extends javafx.event.EventHandler<javafx.event.ActionEvent>> obsrvOnAction;

    private boolean boundPrefColumnCount;
    private javafx.beans.value.ObservableValue<? extends Integer> obsrvPrefColumnCount;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasAlignment)
            instance.setAlignment(this.valAlignment);
        if (this.hasOnAction)
            instance.setOnAction(this.valOnAction);
        if (this.hasPrefColumnCount)
            instance.setPrefColumnCount(this.valPrefColumnCount);
        if (this.boundAlignment)
            instance.alignmentProperty().bind(this.obsrvAlignment);
        if (this.boundOnAction)
            instance.onActionProperty().bind(this.obsrvOnAction);
        if (this.boundPrefColumnCount)
            instance.prefColumnCountProperty().bind(this.obsrvPrefColumnCount);
    }

    /**
     * 設定屬性{@link TextField#setAlignment(javafx.geometry.Pos)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B alignment(javafx.geometry.Pos value)
    {
        this.hasAlignment = true;
        this.valAlignment = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextField#setOnAction(javafx.event.EventHandler)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B onAction(javafx.event.EventHandler<javafx.event.ActionEvent> value)
    {
        this.hasOnAction = true;
        this.valOnAction = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextField#setPrefColumnCount(int)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B prefColumnCount(int value)
    {
        this.hasPrefColumnCount = true;
        this.valPrefColumnCount = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextField#alignmentProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindAlignment(javafx.beans.value.ObservableValue<? extends javafx.geometry.Pos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundAlignment = true;
        this.obsrvAlignment = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextField#onActionProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindOnAction(javafx.beans.value.ObservableValue<? extends javafx.event.EventHandler<javafx.event.ActionEvent>> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundOnAction = true;
        this.obsrvOnAction = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextField#prefColumnCountProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindPrefColumnCount(javafx.beans.value.ObservableValue<? extends Integer> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundPrefColumnCount = true;
        this.obsrvPrefColumnCount = source;
        return (B) this;
    }

    /**
     * 建構{@link TextField}物件
     *
     * @return 新的{@link TextField}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public TextField build()
    {
        TextField instance = new TextField();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
