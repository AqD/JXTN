// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link TabPane}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link TabPane})
 * @param <B> 建構器本身的型態(需繼承{@link TabPaneBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class TabPaneBuilder<Z extends TabPane, B extends TabPaneBuilder<Z, B>>
        extends javafx.scene.control.ControlBuilder<Z, B>
{

    private boolean hasRotateGraphic;
    private boolean valRotateGraphic;

    private boolean hasSelectionModel;
    private javafx.scene.control.SingleSelectionModel<javafx.scene.control.Tab> valSelectionModel;

    private boolean hasSide;
    private javafx.geometry.Side valSide;

    private boolean hasTabClosingPolicy;
    private javafx.scene.control.TabPane.TabClosingPolicy valTabClosingPolicy;

    private boolean hasTabMaxHeight;
    private double valTabMaxHeight;

    private boolean hasTabMaxWidth;
    private double valTabMaxWidth;

    private boolean hasTabMinHeight;
    private double valTabMinHeight;

    private boolean hasTabMinWidth;
    private double valTabMinWidth;

    private boolean hasTabs;
    private java.util.Collection<javafx.scene.control.Tab> valTabs;

    private boolean boundRotateGraphic;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrvRotateGraphic;

    private boolean boundSelectionModel;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.control.SingleSelectionModel<javafx.scene.control.Tab>> obsrvSelectionModel;

    private boolean boundSide;
    private javafx.beans.value.ObservableValue<? extends javafx.geometry.Side> obsrvSide;

    private boolean boundTabClosingPolicy;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.control.TabPane.TabClosingPolicy> obsrvTabClosingPolicy;

    private boolean boundTabMaxHeight;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvTabMaxHeight;

    private boolean boundTabMaxWidth;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvTabMaxWidth;

    private boolean boundTabMinHeight;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvTabMinHeight;

    private boolean boundTabMinWidth;
    private javafx.beans.value.ObservableValue<? extends Double> obsrvTabMinWidth;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasRotateGraphic)
            instance.setRotateGraphic(this.valRotateGraphic);
        if (this.hasSelectionModel)
            instance.setSelectionModel(this.valSelectionModel);
        if (this.hasSide)
            instance.setSide(this.valSide);
        if (this.hasTabClosingPolicy)
            instance.setTabClosingPolicy(this.valTabClosingPolicy);
        if (this.hasTabMaxHeight)
            instance.setTabMaxHeight(this.valTabMaxHeight);
        if (this.hasTabMaxWidth)
            instance.setTabMaxWidth(this.valTabMaxWidth);
        if (this.hasTabMinHeight)
            instance.setTabMinHeight(this.valTabMinHeight);
        if (this.hasTabMinWidth)
            instance.setTabMinWidth(this.valTabMinWidth);
        if (this.hasTabs)
            instance.getTabs().setAll(this.valTabs);
        if (this.boundRotateGraphic)
            instance.rotateGraphicProperty().bind(this.obsrvRotateGraphic);
        if (this.boundSelectionModel)
            instance.selectionModelProperty().bind(this.obsrvSelectionModel);
        if (this.boundSide)
            instance.sideProperty().bind(this.obsrvSide);
        if (this.boundTabClosingPolicy)
            instance.tabClosingPolicyProperty().bind(this.obsrvTabClosingPolicy);
        if (this.boundTabMaxHeight)
            instance.tabMaxHeightProperty().bind(this.obsrvTabMaxHeight);
        if (this.boundTabMaxWidth)
            instance.tabMaxWidthProperty().bind(this.obsrvTabMaxWidth);
        if (this.boundTabMinHeight)
            instance.tabMinHeightProperty().bind(this.obsrvTabMinHeight);
        if (this.boundTabMinWidth)
            instance.tabMinWidthProperty().bind(this.obsrvTabMinWidth);
    }

    /**
     * 設定屬性{@link TabPane#setRotateGraphic(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B rotateGraphic(boolean value)
    {
        this.hasRotateGraphic = true;
        this.valRotateGraphic = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setSelectionModel(javafx.scene.control.SingleSelectionModel)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B selectionModel(javafx.scene.control.SingleSelectionModel<javafx.scene.control.Tab> value)
    {
        this.hasSelectionModel = true;
        this.valSelectionModel = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setSide(javafx.geometry.Side)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B side(javafx.geometry.Side value)
    {
        this.hasSide = true;
        this.valSide = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setTabClosingPolicy(javafx.scene.control.TabPane.TabClosingPolicy)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B tabClosingPolicy(javafx.scene.control.TabPane.TabClosingPolicy value)
    {
        this.hasTabClosingPolicy = true;
        this.valTabClosingPolicy = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setTabMaxHeight(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B tabMaxHeight(double value)
    {
        this.hasTabMaxHeight = true;
        this.valTabMaxHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setTabMaxWidth(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B tabMaxWidth(double value)
    {
        this.hasTabMaxWidth = true;
        this.valTabMaxWidth = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setTabMinHeight(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B tabMinHeight(double value)
    {
        this.hasTabMinHeight = true;
        this.valTabMinHeight = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#setTabMinWidth(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B tabMinWidth(double value)
    {
        this.hasTabMinWidth = true;
        this.valTabMinWidth = value;
        return (B) this;
    }

    /**
     * 設定集合屬性{@link TabPane#getTabs}的內容
     *
     * @param value 新的集合內容
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B tabs(java.util.Collection<javafx.scene.control.Tab> value)
    {
        this.hasTabs = true;
        this.valTabs = value;
        return (B) this;
    }

    /**
     * 設定集合屬性{@link TabPane#getTabs}的內容
     *
     * @param value 新的集合內容
     * @return 目前的建構器(this)
     */
    @SafeVarargs
    @SuppressWarnings("unchecked")
    public final B tabs(javafx.scene.control.Tab... value)
    {
        this.hasTabs = true;
        this.valTabs = java.util.Arrays.asList(value);
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#rotateGraphicProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindRotateGraphic(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundRotateGraphic = true;
        this.obsrvRotateGraphic = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#selectionModelProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindSelectionModel(javafx.beans.value.ObservableValue<? extends javafx.scene.control.SingleSelectionModel<javafx.scene.control.Tab>> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundSelectionModel = true;
        this.obsrvSelectionModel = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#sideProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindSide(javafx.beans.value.ObservableValue<? extends javafx.geometry.Side> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundSide = true;
        this.obsrvSide = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#tabClosingPolicyProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindTabClosingPolicy(javafx.beans.value.ObservableValue<? extends javafx.scene.control.TabPane.TabClosingPolicy> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundTabClosingPolicy = true;
        this.obsrvTabClosingPolicy = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#tabMaxHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindTabMaxHeight(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundTabMaxHeight = true;
        this.obsrvTabMaxHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#tabMaxWidthProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindTabMaxWidth(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundTabMaxWidth = true;
        this.obsrvTabMaxWidth = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#tabMinHeightProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindTabMinHeight(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundTabMinHeight = true;
        this.obsrvTabMinHeight = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TabPane#tabMinWidthProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindTabMinWidth(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundTabMinWidth = true;
        this.obsrvTabMinWidth = source;
        return (B) this;
    }

    /**
     * 建構{@link TabPane}物件
     *
     * @return 新的{@link TabPane}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public TabPane build()
    {
        TabPane instance = new TabPane();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
