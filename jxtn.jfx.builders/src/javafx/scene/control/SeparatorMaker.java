// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link Separator}建構器。
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link Separator})
 * @param <B> 建構器本身的型態(需繼承{@link SeparatorMaker})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class SeparatorMaker<Z extends Separator, B extends SeparatorMaker<Z, B>>
        extends javafx.scene.control.ControlMaker<Z, B>
        implements SeparatorMakerExt<Z, B>
{

    private boolean hasHalignment;
    private javafx.geometry.HPos valHalignment;

    private boolean hasOrientation;
    private javafx.geometry.Orientation valOrientation;

    private boolean hasValignment;
    private javafx.geometry.VPos valValignment;

    private boolean bound1Halignment;
    private boolean bound2Halignment;
    private javafx.beans.value.ObservableValue<? extends javafx.geometry.HPos> obsrv1Halignment;
    private javafx.beans.property.Property<javafx.geometry.HPos> obsrv2Halignment;

    private boolean bound1Orientation;
    private boolean bound2Orientation;
    private javafx.beans.value.ObservableValue<? extends javafx.geometry.Orientation> obsrv1Orientation;
    private javafx.beans.property.Property<javafx.geometry.Orientation> obsrv2Orientation;

    private boolean bound1Valignment;
    private boolean bound2Valignment;
    private javafx.beans.value.ObservableValue<? extends javafx.geometry.VPos> obsrv1Valignment;
    private javafx.beans.property.Property<javafx.geometry.VPos> obsrv2Valignment;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasHalignment)
            instance.setHalignment(this.valHalignment);
        if (this.hasOrientation)
            instance.setOrientation(this.valOrientation);
        if (this.hasValignment)
            instance.setValignment(this.valValignment);
        if (this.bound1Halignment)
            instance.halignmentProperty().bind(this.obsrv1Halignment);
        if (this.bound2Halignment)
            instance.halignmentProperty().bindBidirectional(this.obsrv2Halignment);
        if (this.bound1Orientation)
            instance.orientationProperty().bind(this.obsrv1Orientation);
        if (this.bound2Orientation)
            instance.orientationProperty().bindBidirectional(this.obsrv2Orientation);
        if (this.bound1Valignment)
            instance.valignmentProperty().bind(this.obsrv1Valignment);
        if (this.bound2Valignment)
            instance.valignmentProperty().bindBidirectional(this.obsrv2Valignment);
    }

    /**
     * 設定屬性{@link Separator#setHalignment(javafx.geometry.HPos)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B halignment(javafx.geometry.HPos value)
    {
        this.hasHalignment = true;
        this.valHalignment = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#setOrientation(javafx.geometry.Orientation)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B orientation(javafx.geometry.Orientation value)
    {
        this.hasOrientation = true;
        this.valOrientation = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#setValignment(javafx.geometry.VPos)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B valignment(javafx.geometry.VPos value)
    {
        this.hasValignment = true;
        this.valValignment = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#halignmentProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindHalignment(javafx.beans.value.ObservableValue<? extends javafx.geometry.HPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Halignment = true;
        this.obsrv1Halignment = source;
        this.bound2Halignment = false;
        this.obsrv2Halignment = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#halignmentProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalHalignment(javafx.beans.property.Property<javafx.geometry.HPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Halignment = false;
        this.obsrv1Halignment = null;
        this.bound2Halignment = true;
        this.obsrv2Halignment = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#orientationProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindOrientation(javafx.beans.value.ObservableValue<? extends javafx.geometry.Orientation> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Orientation = true;
        this.obsrv1Orientation = source;
        this.bound2Orientation = false;
        this.obsrv2Orientation = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#orientationProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalOrientation(javafx.beans.property.Property<javafx.geometry.Orientation> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Orientation = false;
        this.obsrv1Orientation = null;
        this.bound2Orientation = true;
        this.obsrv2Orientation = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#valignmentProperty}的連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindValignment(javafx.beans.value.ObservableValue<? extends javafx.geometry.VPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Valignment = true;
        this.obsrv1Valignment = source;
        this.bound2Valignment = false;
        this.obsrv2Valignment = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link Separator#valignmentProperty}的雙向連結。
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalValignment(javafx.beans.property.Property<javafx.geometry.VPos> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Valignment = false;
        this.obsrv1Valignment = null;
        this.bound2Valignment = true;
        this.obsrv2Valignment = source;
        return (B) this;
    }

    /**
     * 建構{@link Separator}物件。
     *
     * @return 新的{@link Separator}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public Separator build()
    {
        Separator instance = new Separator();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link Separator}物件。
     *
     * @return 新的{@link Separator}物件實體
     */
    @SuppressWarnings("unchecked")
    public Separator build(javafx.geometry.Orientation arg0)
    {
        Separator instance = new Separator(arg0);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
