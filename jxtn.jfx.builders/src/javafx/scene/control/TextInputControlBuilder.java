// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link TextInputControl}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link TextInputControl})
 * @param <B> 建構器本身的型態(需繼承{@link TextInputControlBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class TextInputControlBuilder<Z extends TextInputControl, B extends TextInputControlBuilder<Z, B>>
        extends javafx.scene.control.ControlBuilder<Z, B>
{

    private boolean hasEditable;
    private boolean valEditable;

    private boolean hasFont;
    private javafx.scene.text.Font valFont;

    private boolean hasPromptText;
    private java.lang.String valPromptText;

    private boolean hasText;
    private java.lang.String valText;

    private boolean boundEditable;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrvEditable;

    private boolean boundFont;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.text.Font> obsrvFont;

    private boolean boundPromptText;
    private javafx.beans.value.ObservableValue<? extends String> obsrvPromptText;

    private boolean boundText;
    private javafx.beans.value.ObservableValue<? extends String> obsrvText;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasEditable)
            instance.setEditable(this.valEditable);
        if (this.hasFont)
            instance.setFont(this.valFont);
        if (this.hasPromptText)
            instance.setPromptText(this.valPromptText);
        if (this.hasText)
            instance.setText(this.valText);
        if (this.boundEditable)
            instance.editableProperty().bind(this.obsrvEditable);
        if (this.boundFont)
            instance.fontProperty().bind(this.obsrvFont);
        if (this.boundPromptText)
            instance.promptTextProperty().bind(this.obsrvPromptText);
        if (this.boundText)
            instance.textProperty().bind(this.obsrvText);
    }

    /**
     * 設定屬性{@link TextInputControl#setEditable(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B editable(boolean value)
    {
        this.hasEditable = true;
        this.valEditable = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#setFont(javafx.scene.text.Font)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B font(javafx.scene.text.Font value)
    {
        this.hasFont = true;
        this.valFont = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#setPromptText(java.lang.String)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B promptText(java.lang.String value)
    {
        this.hasPromptText = true;
        this.valPromptText = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#setText(java.lang.String)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B text(java.lang.String value)
    {
        this.hasText = true;
        this.valText = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#editableProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindEditable(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundEditable = true;
        this.obsrvEditable = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#fontProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindFont(javafx.beans.value.ObservableValue<? extends javafx.scene.text.Font> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundFont = true;
        this.obsrvFont = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#promptTextProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindPromptText(javafx.beans.value.ObservableValue<? extends String> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundPromptText = true;
        this.obsrvPromptText = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextInputControl#textProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindText(javafx.beans.value.ObservableValue<? extends String> source)
    {
        java.util.Objects.requireNonNull(source);
        this.boundText = true;
        this.obsrvText = source;
        return (B) this;
    }
}
