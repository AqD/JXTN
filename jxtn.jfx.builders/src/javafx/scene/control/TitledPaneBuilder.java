// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link TitledPane}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link TitledPane})
 * @param <B> 建構器本身的型態(需繼承{@link TitledPaneBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class TitledPaneBuilder<Z extends TitledPane, B extends TitledPaneBuilder<Z, B>>
        extends javafx.scene.control.LabeledBuilder<Z, B>
        implements TitledPaneBuilderExt<Z, B>
{

    private boolean hasAnimated;
    private boolean valAnimated;

    private boolean hasCollapsible;
    private boolean valCollapsible;

    private boolean hasContent;
    private javafx.scene.Node valContent;

    private boolean hasExpanded;
    private boolean valExpanded;

    private boolean bound1Animated;
    private boolean bound2Animated;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrv1Animated;
    private javafx.beans.property.Property<Boolean> obsrv2Animated;

    private boolean bound1Collapsible;
    private boolean bound2Collapsible;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrv1Collapsible;
    private javafx.beans.property.Property<Boolean> obsrv2Collapsible;

    private boolean bound1Content;
    private boolean bound2Content;
    private javafx.beans.value.ObservableValue<? extends javafx.scene.Node> obsrv1Content;
    private javafx.beans.property.Property<javafx.scene.Node> obsrv2Content;

    private boolean bound1Expanded;
    private boolean bound2Expanded;
    private javafx.beans.value.ObservableValue<? extends Boolean> obsrv1Expanded;
    private javafx.beans.property.Property<Boolean> obsrv2Expanded;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasAnimated)
            instance.setAnimated(this.valAnimated);
        if (this.hasCollapsible)
            instance.setCollapsible(this.valCollapsible);
        if (this.hasContent)
            instance.setContent(this.valContent);
        if (this.hasExpanded)
            instance.setExpanded(this.valExpanded);
        if (this.bound1Animated)
            instance.animatedProperty().bind(this.obsrv1Animated);
        if (this.bound2Animated)
            instance.animatedProperty().bindBidirectional(this.obsrv2Animated);
        if (this.bound1Collapsible)
            instance.collapsibleProperty().bind(this.obsrv1Collapsible);
        if (this.bound2Collapsible)
            instance.collapsibleProperty().bindBidirectional(this.obsrv2Collapsible);
        if (this.bound1Content)
            instance.contentProperty().bind(this.obsrv1Content);
        if (this.bound2Content)
            instance.contentProperty().bindBidirectional(this.obsrv2Content);
        if (this.bound1Expanded)
            instance.expandedProperty().bind(this.obsrv1Expanded);
        if (this.bound2Expanded)
            instance.expandedProperty().bindBidirectional(this.obsrv2Expanded);
    }

    /**
     * 設定屬性{@link TitledPane#setAnimated(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B animated(boolean value)
    {
        this.hasAnimated = true;
        this.valAnimated = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#setCollapsible(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B collapsible(boolean value)
    {
        this.hasCollapsible = true;
        this.valCollapsible = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#setContent(javafx.scene.Node)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B content(javafx.scene.Node value)
    {
        this.hasContent = true;
        this.valContent = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#setExpanded(boolean)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B expanded(boolean value)
    {
        this.hasExpanded = true;
        this.valExpanded = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#animatedProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindAnimated(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Animated = true;
        this.obsrv1Animated = source;
        this.bound2Animated = false;
        this.obsrv2Animated = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#animatedProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalAnimated(javafx.beans.property.Property<Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Animated = false;
        this.obsrv1Animated = null;
        this.bound2Animated = true;
        this.obsrv2Animated = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#collapsibleProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindCollapsible(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Collapsible = true;
        this.obsrv1Collapsible = source;
        this.bound2Collapsible = false;
        this.obsrv2Collapsible = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#collapsibleProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalCollapsible(javafx.beans.property.Property<Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Collapsible = false;
        this.obsrv1Collapsible = null;
        this.bound2Collapsible = true;
        this.obsrv2Collapsible = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#contentProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindContent(javafx.beans.value.ObservableValue<? extends javafx.scene.Node> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Content = true;
        this.obsrv1Content = source;
        this.bound2Content = false;
        this.obsrv2Content = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#contentProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalContent(javafx.beans.property.Property<javafx.scene.Node> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Content = false;
        this.obsrv1Content = null;
        this.bound2Content = true;
        this.obsrv2Content = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#expandedProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindExpanded(javafx.beans.value.ObservableValue<? extends Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Expanded = true;
        this.obsrv1Expanded = source;
        this.bound2Expanded = false;
        this.obsrv2Expanded = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link TitledPane#expandedProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalExpanded(javafx.beans.property.Property<Boolean> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1Expanded = false;
        this.obsrv1Expanded = null;
        this.bound2Expanded = true;
        this.obsrv2Expanded = source;
        return (B) this;
    }

    /**
     * 建構{@link TitledPane}物件
     *
     * @return 新的{@link TitledPane}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public TitledPane build()
    {
        TitledPane instance = new TitledPane();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
