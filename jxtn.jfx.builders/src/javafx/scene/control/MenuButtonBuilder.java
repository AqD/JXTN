// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link MenuButton}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class MenuButtonBuilder<Z extends MenuButton, B extends MenuButtonBuilder<Z, B>>
        extends javafx.scene.control.ButtonBaseBuilder<Z, B>
{

    protected boolean hasItems;
    protected java.util.Collection<javafx.scene.control.MenuItem> valItems;

    protected boolean hasPopupSide;
    protected javafx.geometry.Side valPopupSide;

    protected boolean boundPopupSide;
    protected javafx.beans.value.ObservableValue<? extends javafx.geometry.Side> obsrvPopupSide;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasItems)
            instance.getItems().setAll(this.valItems);
        if (this.hasPopupSide)
            instance.setPopupSide(this.valPopupSide);
        if (this.boundPopupSide)
            instance.popupSideProperty().bind(this.obsrvPopupSide);
    }

    /**
     * 設定集合屬性{@link MenuButton#getItems}的內容
     *
     * @param value 新的集合內容
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B items(java.util.Collection<javafx.scene.control.MenuItem> value)
    {
        this.hasItems = true;
        this.valItems = value;
        return (B) this;
    }

    /**
     * 設定集合屬性{@link MenuButton#getItems}的內容
     *
     * @param value 新的集合內容
     * @return 目前的建構器(this)
     */
    @SafeVarargs
    @SuppressWarnings("unchecked")
    public final B items(javafx.scene.control.MenuItem... value)
    {
        this.hasItems = true;
        this.valItems = java.util.Arrays.asList(value);
        return (B) this;
    }

    /**
     * 設定屬性{@link MenuButton#setPopupSide(javafx.geometry.Side)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B popupSide(javafx.geometry.Side value)
    {
        this.hasPopupSide = true;
        this.valPopupSide = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link MenuButton#popupSideProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bindPopupSide(javafx.beans.value.ObservableValue<? extends javafx.geometry.Side> source)
    {
        assert (source != null);
        this.boundPopupSide = true;
        this.obsrvPopupSide = source;
        return (B) this;
    }

    /**
     * 建構{@link MenuButton}物件
     *
     * @return 新的{@link MenuButton}物件實體
     */
    @Override
    @SuppressWarnings("unchecked")
    public MenuButton build()
    {
        MenuButton instance = new MenuButton();
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
