// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link ToggleGroup}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class ToggleGroupBuilder<Z extends ToggleGroup, B extends ToggleGroupBuilder<Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
{
    private boolean applied;

    protected boolean hasToggles;
    protected java.util.Collection<javafx.scene.control.Toggle> valToggles;
    public void applyTo(ToggleGroup instance)
    {
        super.applyTo(instance);
        if (this.applied)
            throw new IllegalStateException();
        if (this.hasToggles)
            instance.getToggles().setAll(this.valToggles);
        //
        this.applied = true;
    }

    @SuppressWarnings("unchecked")
    public B toggles(java.util.Collection<javafx.scene.control.Toggle> value)
    {
        this.hasToggles = true;
        this.valToggles = value;
        return (B) this;
    }

    @SafeVarargs
    @SuppressWarnings("unchecked")
    public final B toggles(javafx.scene.control.Toggle... value)
    {
        this.hasToggles = true;
        this.valToggles = java.util.Arrays.asList(value);
        return (B) this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ToggleGroup build()
    {
        ToggleGroup instance = new ToggleGroup();
        this.applyTo(instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
