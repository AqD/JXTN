// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.text;

/**
 * {@link TextFlow}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class TextFlowBuilder<Z extends TextFlow, B extends TextFlowBuilder<Z, B>>
        extends javafx.scene.layout.PaneBuilder<Z, B>
{
    private boolean applied;

    protected boolean hasLineSpacing;
    protected double valLineSpacing;

    protected boolean hasTextAlignment;
    protected javafx.scene.text.TextAlignment valTextAlignment;

    protected boolean boundLineSpacing;
    protected javafx.beans.value.ObservableValue<? extends Double> obsrvLineSpacing;

    protected boolean boundTextAlignment;
    protected javafx.beans.value.ObservableValue<? extends javafx.scene.text.TextAlignment> obsrvTextAlignment;
    public void applyTo(TextFlow instance)
    {
        super.applyTo(instance);
        if (this.applied)
            throw new IllegalStateException();
        if (this.hasLineSpacing)
            instance.setLineSpacing(this.valLineSpacing);
        if (this.hasTextAlignment)
            instance.setTextAlignment(this.valTextAlignment);
        if (this.boundLineSpacing)
            instance.lineSpacingProperty().bind(this.obsrvLineSpacing);
        if (this.boundTextAlignment)
            instance.textAlignmentProperty().bind(this.obsrvTextAlignment);
        //
        this.applied = true;
    }

    @SuppressWarnings("unchecked")
    public B lineSpacing(double value)
    {
        this.hasLineSpacing = true;
        this.valLineSpacing = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B textAlignment(javafx.scene.text.TextAlignment value)
    {
        this.hasTextAlignment = true;
        this.valTextAlignment = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B bindLineSpacing(javafx.beans.value.ObservableValue<? extends Double> source)
    {
        assert (source != null);
        this.boundLineSpacing = true;
        this.obsrvLineSpacing = source;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B bindTextAlignment(javafx.beans.value.ObservableValue<? extends javafx.scene.text.TextAlignment> source)
    {
        assert (source != null);
        this.boundTextAlignment = true;
        this.obsrvTextAlignment = source;
        return (B) this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TextFlow build()
    {
        TextFlow instance = new TextFlow();
        this.applyTo(instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
