// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene;

/**
 * {@link Camera}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link Camera})
 * @param <B> 建構器本身的型態(需繼承{@link CameraBuilder})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class CameraBuilder<Z extends Camera, B extends CameraBuilder<Z, B>>
        extends javafx.scene.NodeBuilder<Z, B>
        implements CameraBuilderExt<Z, B>
{

    private boolean hasFarClip;
    private double valFarClip;

    private boolean hasNearClip;
    private double valNearClip;

    private boolean bound1FarClip;
    private boolean bound2FarClip;
    private javafx.beans.value.ObservableValue<? extends Number> obsrv1FarClip;
    private javafx.beans.property.Property<Number> obsrv2FarClip;

    private boolean bound1NearClip;
    private boolean bound2NearClip;
    private javafx.beans.value.ObservableValue<? extends Number> obsrv1NearClip;
    private javafx.beans.property.Property<Number> obsrv2NearClip;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasFarClip)
            instance.setFarClip(this.valFarClip);
        if (this.hasNearClip)
            instance.setNearClip(this.valNearClip);
        if (this.bound1FarClip)
            instance.farClipProperty().bind(this.obsrv1FarClip);
        if (this.bound2FarClip)
            instance.farClipProperty().bindBidirectional(this.obsrv2FarClip);
        if (this.bound1NearClip)
            instance.nearClipProperty().bind(this.obsrv1NearClip);
        if (this.bound2NearClip)
            instance.nearClipProperty().bindBidirectional(this.obsrv2NearClip);
    }

    /**
     * 設定屬性{@link Camera#setFarClip(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B farClip(double value)
    {
        this.hasFarClip = true;
        this.valFarClip = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Camera#setNearClip(double)}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B nearClip(double value)
    {
        this.hasNearClip = true;
        this.valNearClip = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link Camera#farClipProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindFarClip(javafx.beans.value.ObservableValue<? extends Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1FarClip = true;
        this.obsrv1FarClip = source;
        this.bound2FarClip = false;
        this.obsrv2FarClip = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link Camera#farClipProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalFarClip(javafx.beans.property.Property<Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1FarClip = false;
        this.obsrv1FarClip = null;
        this.bound2FarClip = true;
        this.obsrv2FarClip = source;
        return (B) this;
    }

    /**
     * 設定屬性{@link Camera#nearClipProperty}的連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindNearClip(javafx.beans.value.ObservableValue<? extends Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1NearClip = true;
        this.obsrv1NearClip = source;
        this.bound2NearClip = false;
        this.obsrv2NearClip = null;
        return (B) this;
    }

    /**
     * 設定屬性{@link Camera#nearClipProperty}的雙向連結
     *
     * @param value 新的屬性連結(單向)
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public final B bindBidirectionalNearClip(javafx.beans.property.Property<Number> source)
    {
        java.util.Objects.requireNonNull(source);
        this.bound1NearClip = false;
        this.obsrv1NearClip = null;
        this.bound2NearClip = true;
        this.obsrv2NearClip = source;
        return (B) this;
    }
}
