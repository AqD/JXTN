// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.media;

/**
 * {@link AudioClip}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class AudioClipBuilder<Z extends AudioClip, B extends AudioClipBuilder<Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
{
    private boolean applied;

    protected boolean hasBalance;
    protected double valBalance;

    protected boolean hasCycleCount;
    protected int valCycleCount;

    protected boolean hasPan;
    protected double valPan;

    protected boolean hasPriority;
    protected int valPriority;

    protected boolean hasRate;
    protected double valRate;

    protected boolean hasVolume;
    protected double valVolume;
    public void applyTo(AudioClip instance)
    {
        super.applyTo(instance);
        if (this.applied)
            throw new IllegalStateException();
        if (this.hasBalance)
            instance.setBalance(this.valBalance);
        if (this.hasCycleCount)
            instance.setCycleCount(this.valCycleCount);
        if (this.hasPan)
            instance.setPan(this.valPan);
        if (this.hasPriority)
            instance.setPriority(this.valPriority);
        if (this.hasRate)
            instance.setRate(this.valRate);
        if (this.hasVolume)
            instance.setVolume(this.valVolume);
        //
        this.applied = true;
    }

    @SuppressWarnings("unchecked")
    public B balance(double value)
    {
        this.hasBalance = true;
        this.valBalance = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B cycleCount(int value)
    {
        this.hasCycleCount = true;
        this.valCycleCount = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B pan(double value)
    {
        this.hasPan = true;
        this.valPan = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B priority(int value)
    {
        this.hasPriority = true;
        this.valPriority = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B rate(double value)
    {
        this.hasRate = true;
        this.valRate = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public B volume(double value)
    {
        this.hasVolume = true;
        this.valVolume = value;
        return (B) this;
    }

    @SuppressWarnings("unchecked")
    public AudioClip build(java.lang.String arg0)
    {
        AudioClip instance = new AudioClip(arg0);
        this.applyTo(instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
