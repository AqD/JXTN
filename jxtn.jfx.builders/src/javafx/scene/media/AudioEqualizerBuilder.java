// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.media;

/**
 * {@link AudioEqualizer}建構器
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class AudioEqualizerBuilder<Z extends AudioEqualizer, B extends AudioEqualizerBuilder<Z, B>>
        extends jxtn.jfx.builders.AbstractBuilder<Z, B>
{

    protected boolean hasBands;
    protected java.util.Collection<javafx.scene.media.EqualizerBand> valBands;

    protected boolean hasEnabled;
    protected boolean valEnabled;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasBands)
            instance.getBands().setAll(this.valBands);
        if (this.hasEnabled)
            instance.setEnabled(this.valEnabled);
    }

    /**
     * 設定集合屬性{@link AudioEqualizer#getBands}的內容
     *
     * @param value 新的集合內容
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B bands(java.util.Collection<javafx.scene.media.EqualizerBand> value)
    {
        this.hasBands = true;
        this.valBands = value;
        return (B) this;
    }

    /**
     * 設定集合屬性{@link AudioEqualizer#getBands}的內容
     *
     * @param value 新的集合內容
     * @return 目前的建構器(this)
     */
    @SafeVarargs
    @SuppressWarnings("unchecked")
    public final B bands(javafx.scene.media.EqualizerBand... value)
    {
        this.hasBands = true;
        this.valBands = java.util.Arrays.asList(value);
        return (B) this;
    }

    /**
     * 設定屬性{@link AudioEqualizer#setEnabled}
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B enabled(boolean value)
    {
        this.hasEnabled = true;
        this.valEnabled = value;
        return (B) this;
    }
}
