// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.layout;

/**
 * {@link BorderWidths}建構器。
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link BorderWidths})
 * @param <B> 建構器本身的型態(需繼承{@link BorderWidthsMaker})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class BorderWidthsMaker<Z extends BorderWidths, B extends BorderWidthsMaker<Z, B>>
        extends jxtn.jfx.makers.AbstractMaker<Z, B>
        implements BorderWidthsMakerExt<Z, B>
{

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
    }

    /**
     * 建構{@link BorderWidths}物件。
     *
     * @return 新的{@link BorderWidths}物件實體
     */
    @SuppressWarnings("unchecked")
    public BorderWidths build(double arg0)
    {
        BorderWidths instance = new BorderWidths(arg0);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link BorderWidths}物件。
     *
     * @return 新的{@link BorderWidths}物件實體
     */
    @SuppressWarnings("unchecked")
    public BorderWidths build(double arg0, double arg1, double arg2, double arg3)
    {
        BorderWidths instance = new BorderWidths(arg0, arg1, arg2, arg3);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }

    /**
     * 建構{@link BorderWidths}物件。
     *
     * @return 新的{@link BorderWidths}物件實體
     */
    @SuppressWarnings("unchecked")
    public BorderWidths build(double arg0, double arg1, double arg2, double arg3, boolean arg4, boolean arg5, boolean arg6, boolean arg7)
    {
        BorderWidths instance = new BorderWidths(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        this.applyTo((Z) instance);
        this.doAfterBuild((Z) instance);
        return instance;
    }
}
