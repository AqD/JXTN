// @formatter:off
/*
 * Unlicensed, generated by javafx.ftl
 */

package javafx.scene.control;

/**
 * {@link TextFormatter.Change}建構器。
 *
 * @author JarReflectionDataLoader-1.0.0
 * @version jfxrt.jar
 * @param <Z> 要建構的物件型態(需繼承{@link TextFormatter.Change})
 * @param <B> 建構器本身的型態(需繼承{@link TextFormatter.ChangeMaker})
 */
@javax.annotation.Generated("Generated by javafx.ftl")
@SuppressWarnings("all")
public class TextFormatter_ChangeMaker<Z extends TextFormatter.Change, B extends TextFormatter_ChangeMaker<Z, B>>
        extends jxtn.jfx.makers.AbstractMaker<Z, B>
        implements TextFormatter_ChangeMakerExt<Z, B>
{

    private boolean hasAnchor;
    private int valAnchor;

    private boolean hasCaretPosition;
    private int valCaretPosition;

    private boolean hasText;
    private java.lang.String valText;

    @Override
    public void applyTo(Z instance)
    {
        super.applyTo(instance);
        if (this.hasAnchor)
            instance.setAnchor(this.valAnchor);
        if (this.hasCaretPosition)
            instance.setCaretPosition(this.valCaretPosition);
        if (this.hasText)
            instance.setText(this.valText);
    }

    /**
     * 設定屬性{@link TextFormatter.Change#setAnchor(int)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B anchor(int value)
    {
        this.hasAnchor = true;
        this.valAnchor = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextFormatter.Change#setCaretPosition(int)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B caretPosition(int value)
    {
        this.hasCaretPosition = true;
        this.valCaretPosition = value;
        return (B) this;
    }

    /**
     * 設定屬性{@link TextFormatter.Change#setText(java.lang.String)}。
     *
     * @param value 新的屬性值
     * @return 目前的建構器(this)
     */
    @SuppressWarnings("unchecked")
    public B text(java.lang.String value)
    {
        this.hasText = true;
        this.valText = value;
        return (B) this;
    }
}
