<?xml version="1.0" encoding="UTF-8"?><reflection loader="JarReflectionDataLoader-1.0.0">
  <jar file="jfxrt.jar">
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="AmbientLight" genericParam="" genericParamPrepend="" name="AmbientLight" package="javafx.scene" super="javafx.scene.LightBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.AmbientLight" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.AmbientLight" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </constructor>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Camera" genericParam="" genericParamPrepend="" name="Camera" package="javafx.scene" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="farClipProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getFarClip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getNearClip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="nearClipProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setFarClip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setNearClip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="farClip" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFarClip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFarClip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="nearClip" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getNearClip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setNearClip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Cursor" genericParam="" genericParamPrepend="" name="Cursor" package="javafx.scene" super="">
      <field access="public" final="true" name="CLOSED_HAND" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="CROSSHAIR" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="DEFAULT" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="DISAPPEAR" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="E_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="HAND" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="H_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="MOVE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="NE_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="NONE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="NW_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="N_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="OPEN_HAND" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="SE_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="SW_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="S_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="TEXT" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="V_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="WAIT" public="true" static="true" type="javafx.scene.Cursor"/>
      <field access="public" final="true" name="W_RESIZE" public="true" static="true" type="javafx.scene.Cursor"/>
      <method abstract="false" access="public" final="false" name="cursor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.Cursor" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Group" genericParam="" genericParamPrepend="" name="Group" package="javafx.scene" super="javafx.scene.Parent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.Group" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.Group" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;javafx.scene.Node&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.Collection&lt;javafx.scene.Node&gt;" name="arg0" type="java.util.Collection"/>
      </constructor>
      <constructor access="public" name="javafx.scene.Group" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="autoSizeChildrenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isAutoSizeChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="minHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="minWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prefHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prefWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAutoSizeChildren" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="autoSizeChildren" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAutoSizeChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAutoSizeChildren" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="children" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ImageCursor" genericParam="" genericParamPrepend="" name="ImageCursor" package="javafx.scene" super="javafx.scene.Cursor" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.ImageCursor" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.ImageCursor" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </constructor>
      <constructor access="public" name="javafx.scene.ImageCursor" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="chooseBestCursor" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.image.Image[] arg0, double arg1, double arg2" public="true" returnType="javafx.scene.ImageCursor" static="true">
        <parameter genericType="javafx.scene.image.Image[]" name="arg0" type="javafx.scene.image.Image[]"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getBestSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Dimension2D" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="getHotspotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getHotspotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="false" name="getMaximumColors" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="true"/>
      <method abstract="false" access="public" final="true" name="hotspotXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="hotspotYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="imageProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <property genericParam="" genericType="double" name="hotspotX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHotspotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="hotspotY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHotspotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="LightBase" genericParam="" genericParamPrepend="" name="LightBase" package="javafx.scene" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="colorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="false" name="getScope" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isLightOn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="lightOnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLightOn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="lightOn" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isLightOn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setLightOn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="scope" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getScope" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Node" genericParam="" genericParamPrepend="" name="Node" package="javafx.scene" super="">
      <field access="public" final="true" name="BASELINE_OFFSET_SAME_AS_HEIGHT" public="true" static="true" type="double"/>
      <method abstract="false" access="public" final="true" name="accessibleHelpProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="accessibleRoleDescriptionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="accessibleRoleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.AccessibleRole&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="accessibleTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="addEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="applyCss" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="autosize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="blendModeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.BlendMode&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="boundsInLocalProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Bounds&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="boundsInParentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Bounds&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="cacheHintProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.CacheHint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cacheProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="clipProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="computeAreaInScreen" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="contains" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="contains" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="cursorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Cursor&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="depthTestProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.DepthTest&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="disableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="disabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="effectProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="effectiveNodeOrientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.NodeOrientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="eventDispatcherProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventDispatcher&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="fireEvent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.Event arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.Event" name="arg0" type="javafx.event.Event"/>
      </method>
      <method abstract="false" access="public" final="true" name="focusTraversableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="focusedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAccessibleHelp" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getAccessibleRole" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.AccessibleRole" static="false"/>
      <method abstract="false" access="public" final="true" name="getAccessibleRoleDescription" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getAccessibleText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getBaselineOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getBlendMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlendMode" static="false"/>
      <method abstract="false" access="public" final="true" name="getBoundsInLocal" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      <method abstract="false" access="public" final="true" name="getBoundsInParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      <method abstract="false" access="public" final="true" name="getCacheHint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.CacheHint" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getClip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCursor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Cursor" static="false"/>
      <method abstract="false" access="public" final="true" name="getDepthTest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.DepthTest" static="false"/>
      <method abstract="false" access="public" final="true" name="getEffect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getEffectiveNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getEventDispatcher" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventDispatcher" static="false"/>
      <method abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getInputMethodRequests" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.InputMethodRequests" static="false"/>
      <method abstract="false" access="public" final="true" name="getLayoutBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      <method abstract="false" access="public" final="true" name="getLayoutX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLayoutY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLocalToParentTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="true" name="getLocalToSceneTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="true" name="getNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnContextMenuRequested" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragDetected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragDone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragDropped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnInputMethodTextChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnKeyPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnKeyReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnKeyTyped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseClicked" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMousePressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRotate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRotationFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRotationStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnScroll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnScrollFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnScrollStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeUp" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchStationary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnZoom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnZoomFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnZoomStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Parent" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getRotate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRotationAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
      <method abstract="false" access="public" final="true" name="getScaleX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScaleY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScaleZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScene" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Scene" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="true" name="getTransforms" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.transform.Transform&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTranslateX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTranslateY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTranslateZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hoverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="idProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="inputMethodRequestsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.input.InputMethodRequests&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="intersects" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="boolean" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="intersects" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="true" name="isCache" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDisable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDisabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isFocusTraversable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isFocused" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isHover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isManaged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMouseTransparent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isPickOnBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="layoutBoundsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Bounds&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="layoutXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="layoutYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="localToParent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToParent" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToParent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToParent" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToParent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="true" name="localToParentTransformProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.transform.Transform&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Bounds arg0, boolean arg1" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, boolean arg2" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Point2D arg0, boolean arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, boolean arg3" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScene" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Point3D arg0, boolean arg1" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="localToSceneTransformProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.transform.Transform&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="localToScreen" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScreen" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScreen" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScreen" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="localToScreen" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="lookup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="lookupAll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.util.Set&lt;javafx.scene.Node&gt;" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="managedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="maxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="maxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="minHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="minWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="mouseTransparentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="nodeOrientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.NodeOrientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="notifyAccessibleAttributeChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.AccessibleAttribute arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
      </method>
      <method abstract="false" access="public" final="true" name="onContextMenuRequestedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragDetectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragDoneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragDroppedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragEnteredProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragExitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragOverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onInputMethodTextChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onKeyPressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onKeyReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onKeyTypedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseClickedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragEnteredProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragExitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragOverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDraggedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseEnteredProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseExitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseMovedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMousePressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onRotateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onRotationFinishedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onRotationStartedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onScrollFinishedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onScrollProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onScrollStartedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeDownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeLeftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeRightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeUpProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchMovedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchPressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchStationaryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onZoomFinishedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onZoomProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onZoomStartedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="opacityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="parentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Parent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="parentToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="parentToLocal" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="parentToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="parentToLocal" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="parentToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="true" name="pickOnBoundsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="prefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="pressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pseudoClassStateChanged" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.css.PseudoClass arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.css.PseudoClass" name="arg0" type="javafx.css.PseudoClass"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="relocate" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="requestFocus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="resize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="resizeRelocate" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="rotateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="rotationAxisProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Point3D&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="scaleXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scaleYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scaleZProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="sceneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Scene&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Bounds arg0, boolean arg1" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, boolean arg2" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Point2D arg0, boolean arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="sceneToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="screenToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="screenToLocal" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="screenToLocal" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAccessibleHelp" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAccessibleRole" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.AccessibleRole arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleRole" name="arg0" type="javafx.scene.AccessibleRole"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAccessibleRoleDescription" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAccessibleText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBlendMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCache" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCacheHint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.CacheHint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.CacheHint" name="arg0" type="javafx.scene.CacheHint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setClip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCursor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Cursor arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Cursor" name="arg0" type="javafx.scene.Cursor"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDepthTest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.DepthTest arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.DepthTest" name="arg0" type="javafx.scene.DepthTest"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDisable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEffect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEventDispatcher" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatcher arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventDispatcher" name="arg0" type="javafx.event.EventDispatcher"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFocusTraversable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInputMethodRequests" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.InputMethodRequests arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.InputMethodRequests" name="arg0" type="javafx.scene.input.InputMethodRequests"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLayoutX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLayoutY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setManaged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMouseTransparent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setNodeOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.NodeOrientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.NodeOrientation" name="arg0" type="javafx.geometry.NodeOrientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnContextMenuRequested" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragDetected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragDone" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragDropped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnInputMethodTextChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnKeyPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnKeyReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnKeyTyped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseClicked" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMousePressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRotationFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRotationStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnScroll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnScrollFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnScrollStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeDown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeUp" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchStationary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnZoom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnZoomFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnZoomStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPickOnBounds" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRotationAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScaleX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScaleY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScaleZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTranslateX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTranslateY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTranslateZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="snapshot" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.SnapshotParameters arg0, javafx.scene.image.WritableImage arg1" public="true" returnType="javafx.scene.image.WritableImage" static="false">
        <parameter genericType="javafx.scene.SnapshotParameters" name="arg0" type="javafx.scene.SnapshotParameters"/>
        <parameter genericType="javafx.scene.image.WritableImage" name="arg1" type="javafx.scene.image.WritableImage"/>
      </method>
      <method abstract="false" access="public" final="false" name="snapshot" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.SnapshotResult, java.lang.Void&gt; arg0, javafx.scene.SnapshotParameters arg1, javafx.scene.image.WritableImage arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.SnapshotResult, java.lang.Void&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.scene.SnapshotParameters" name="arg1" type="javafx.scene.SnapshotParameters"/>
        <parameter genericType="javafx.scene.image.WritableImage" name="arg2" type="javafx.scene.image.WritableImage"/>
      </method>
      <method abstract="false" access="public" final="false" name="startDragAndDrop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.TransferMode[] arg0" public="true" returnType="javafx.scene.input.Dragboard" static="false">
        <parameter genericType="javafx.scene.input.TransferMode[]" name="arg0" type="javafx.scene.input.TransferMode[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="startFullDrag" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toBack" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="toFront" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="translateXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="translateYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="translateZProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="usesMirroring" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="visibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="accessibleHelp" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getAccessibleHelp" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setAccessibleHelp" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.AccessibleRole" name="accessibleRole" override="false" rawType="javafx.scene.AccessibleRole" static="false">
        <getter abstract="false" access="public" final="true" name="getAccessibleRole" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.AccessibleRole" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.AccessibleRole" index="" name="setAccessibleRole" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.AccessibleRole arg0" public="true" rawType="javafx.scene.AccessibleRole" returnType="void" static="false">
          <parameter genericType="javafx.scene.AccessibleRole" name="arg0" type="javafx.scene.AccessibleRole"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="accessibleRoleDescription" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getAccessibleRoleDescription" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setAccessibleRoleDescription" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="accessibleText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getAccessibleText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setAccessibleText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="baselineOffset" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getBaselineOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.BlendMode" name="blendMode" override="false" rawType="javafx.scene.effect.BlendMode" static="false">
        <getter abstract="false" access="public" final="true" name="getBlendMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlendMode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.BlendMode" index="" name="setBlendMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" rawType="javafx.scene.effect.BlendMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Bounds" name="boundsInLocal" override="false" rawType="javafx.geometry.Bounds" static="false">
        <getter abstract="false" access="public" final="true" name="getBoundsInLocal" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Bounds" name="boundsInParent" override="false" rawType="javafx.geometry.Bounds" static="false">
        <getter abstract="false" access="public" final="true" name="getBoundsInParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="cache" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCache" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCache" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.CacheHint" name="cacheHint" override="false" rawType="javafx.scene.CacheHint" static="false">
        <getter abstract="false" access="public" final="true" name="getCacheHint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.CacheHint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.CacheHint" index="" name="setCacheHint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.CacheHint arg0" public="true" rawType="javafx.scene.CacheHint" returnType="void" static="false">
          <parameter genericType="javafx.scene.CacheHint" name="arg0" type="javafx.scene.CacheHint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="clip" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getClip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setClip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Cursor" name="cursor" override="false" rawType="javafx.scene.Cursor" static="false">
        <getter abstract="false" access="public" final="true" name="getCursor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Cursor" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Cursor" index="" name="setCursor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Cursor arg0" public="true" rawType="javafx.scene.Cursor" returnType="void" static="false">
          <parameter genericType="javafx.scene.Cursor" name="arg0" type="javafx.scene.Cursor"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.DepthTest" name="depthTest" override="false" rawType="javafx.scene.DepthTest" static="false">
        <getter abstract="false" access="public" final="true" name="getDepthTest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.DepthTest" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.DepthTest" index="" name="setDepthTest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.DepthTest arg0" public="true" rawType="javafx.scene.DepthTest" returnType="void" static="false">
          <parameter genericType="javafx.scene.DepthTest" name="arg0" type="javafx.scene.DepthTest"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="disable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDisable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDisable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="disabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDisabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="effect" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getEffect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setEffect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.NodeOrientation" name="effectiveNodeOrientation" override="false" rawType="javafx.geometry.NodeOrientation" static="false">
        <getter abstract="false" access="public" final="true" name="getEffectiveNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.event.EventDispatcher" name="eventDispatcher" override="false" rawType="javafx.event.EventDispatcher" static="false">
        <getter abstract="false" access="public" final="true" name="getEventDispatcher" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventDispatcher" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.event.EventDispatcher" index="" name="setEventDispatcher" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatcher arg0" public="true" rawType="javafx.event.EventDispatcher" returnType="void" static="false">
          <parameter genericType="javafx.event.EventDispatcher" name="arg0" type="javafx.event.EventDispatcher"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="focusTraversable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFocusTraversable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFocusTraversable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="focused" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFocused" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="hover" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="id" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.input.InputMethodRequests" name="inputMethodRequests" override="false" rawType="javafx.scene.input.InputMethodRequests" static="false">
        <getter abstract="false" access="public" final="true" name="getInputMethodRequests" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.InputMethodRequests" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.input.InputMethodRequests" index="" name="setInputMethodRequests" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.InputMethodRequests arg0" public="true" rawType="javafx.scene.input.InputMethodRequests" returnType="void" static="false">
          <parameter genericType="javafx.scene.input.InputMethodRequests" name="arg0" type="javafx.scene.input.InputMethodRequests"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Bounds" name="layoutBounds" override="false" rawType="javafx.geometry.Bounds" static="false">
        <getter abstract="false" access="public" final="true" name="getLayoutBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="layoutX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLayoutX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLayoutX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="layoutY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLayoutY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLayoutY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.transform.Transform" name="localToParentTransform" override="false" rawType="javafx.scene.transform.Transform" static="false">
        <getter abstract="false" access="public" final="true" name="getLocalToParentTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.transform.Transform" name="localToSceneTransform" override="false" rawType="javafx.scene.transform.Transform" static="false">
        <getter abstract="false" access="public" final="true" name="getLocalToSceneTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="managed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isManaged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setManaged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="mouseTransparent" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMouseTransparent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setMouseTransparent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.NodeOrientation" name="nodeOrientation" override="false" rawType="javafx.geometry.NodeOrientation" static="false">
        <getter abstract="false" access="public" final="true" name="getNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.NodeOrientation" index="" name="setNodeOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.NodeOrientation arg0" public="true" rawType="javafx.geometry.NodeOrientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.NodeOrientation" name="arg0" type="javafx.geometry.NodeOrientation"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ContextMenuEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" name="onContextMenuRequested" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnContextMenuRequested" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ContextMenuEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" index="" name="setOnContextMenuRequested" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onDragDetected" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragDetected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnDragDetected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragDone" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragDone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragDone" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragDropped" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragDropped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragDropped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragEntered" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragExited" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragOver" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.InputMethodEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" name="onInputMethodTextChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnInputMethodTextChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.InputMethodEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" index="" name="setOnInputMethodTextChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="onKeyPressed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnKeyPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" index="" name="setOnKeyPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="onKeyReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnKeyReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" index="" name="setOnKeyReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="onKeyTyped" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnKeyTyped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" index="" name="setOnKeyTyped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseClicked" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseClicked" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseClicked" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragEntered" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragExited" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragOver" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseDragged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseDragged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseEntered" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseExited" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseMoved" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMousePressed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMousePressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMousePressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="onRotate" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRotate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" index="" name="setOnRotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="onRotationFinished" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRotationFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" index="" name="setOnRotationFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="onRotationStarted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRotationStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" index="" name="setOnRotationStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="onScroll" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnScroll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" index="" name="setOnScroll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="onScrollFinished" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnScrollFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" index="" name="setOnScrollFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="onScrollStarted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnScrollStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" index="" name="setOnScrollStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeDown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeDown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeLeft" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeRight" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeUp" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeUp" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeUp" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchMoved" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchPressed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchStationary" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchStationary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchStationary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="onZoom" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnZoom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" index="" name="setOnZoom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="onZoomFinished" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnZoomFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" index="" name="setOnZoomFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="onZoomStarted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnZoomStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" index="" name="setOnZoomStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="opacity" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Parent" name="parent" override="false" rawType="javafx.scene.Parent" static="false">
        <getter abstract="false" access="public" final="true" name="getParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Parent" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="pickOnBounds" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPickOnBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setPickOnBounds" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="pressed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.PseudoClass" genericType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" name="pseudoClassStates" override="false" rawType="javafx.collections.ObservableSet" static="false">
        <getter abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="rotate" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRotate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Point3D" name="rotationAxis" override="false" rawType="javafx.geometry.Point3D" static="false">
        <getter abstract="false" access="public" final="true" name="getRotationAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Point3D" index="" name="setRotationAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" rawType="javafx.geometry.Point3D" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scaleX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScaleX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScaleX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scaleY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScaleY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScaleY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scaleZ" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScaleZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScaleZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Scene" name="scene" override="false" rawType="javafx.scene.Scene" static="false">
        <getter abstract="false" access="public" final="true" name="getScene" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Scene" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="false" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="javafx.scene.transform.Transform" genericType="javafx.collections.ObservableList&lt;javafx.scene.transform.Transform&gt;" name="transforms" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getTransforms" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.transform.Transform&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="translateX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTranslateX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTranslateX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="translateY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTranslateY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTranslateY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="translateZ" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTranslateZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTranslateZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="typeSelector" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="visible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Double" name="AnchorPane_bottomAnchor" override="false" rawType="java.lang.Double" static="true" staticName="bottomAnchor" staticType="javafx.scene.layout.AnchorPane">
        <getter abstract="false" access="public" final="false" name="getBottomAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Double" index="" name="setBottomAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" rawType="java.lang.Double" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Double" name="AnchorPane_leftAnchor" override="false" rawType="java.lang.Double" static="true" staticName="leftAnchor" staticType="javafx.scene.layout.AnchorPane">
        <getter abstract="false" access="public" final="false" name="getLeftAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Double" index="" name="setLeftAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" rawType="java.lang.Double" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Double" name="AnchorPane_rightAnchor" override="false" rawType="java.lang.Double" static="true" staticName="rightAnchor" staticType="javafx.scene.layout.AnchorPane">
        <getter abstract="false" access="public" final="false" name="getRightAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Double" index="" name="setRightAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" rawType="java.lang.Double" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Double" name="AnchorPane_topAnchor" override="false" rawType="java.lang.Double" static="true" staticName="topAnchor" staticType="javafx.scene.layout.AnchorPane">
        <getter abstract="false" access="public" final="false" name="getTopAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Double" index="" name="setTopAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" rawType="java.lang.Double" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Pos" name="BorderPane_alignment" override="false" rawType="javafx.geometry.Pos" static="true" staticName="alignment" staticType="javafx.scene.layout.BorderPane">
        <getter abstract="false" access="public" final="false" name="getAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Pos" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" rawType="javafx.geometry.Pos" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="BorderPane_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.BorderPane">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ButtonBar.ButtonData" name="ButtonBar_buttonData" override="false" rawType="javafx.scene.control.ButtonBar.ButtonData" static="true" staticName="buttonData" staticType="javafx.scene.control.ButtonBar">
        <getter abstract="false" access="public" final="false" name="getButtonData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.control.ButtonBar.ButtonData" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.control.ButtonBar.ButtonData" index="" name="setButtonData" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.control.ButtonBar.ButtonData arg1" public="true" rawType="javafx.scene.control.ButtonBar.ButtonData" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.scene.control.ButtonBar.ButtonData" name="arg1" type="javafx.scene.control.ButtonBar.ButtonData"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="ButtonBar_buttonUniformSize" override="false" rawType="boolean" static="true" staticName="buttonUniformSize" staticType="javafx.scene.control.ButtonBar">
        <getter abstract="false" access="public" final="false" name="isButtonUniformSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="boolean" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setButtonUniformSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, boolean arg1" public="true" rawType="boolean" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="boolean" name="arg1" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="FlowPane_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.FlowPane">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Integer" name="GridPane_columnIndex" override="false" rawType="java.lang.Integer" static="true" staticName="columnIndex" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getColumnIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Integer" index="" name="setColumnIndex" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" rawType="java.lang.Integer" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Integer" name="GridPane_columnSpan" override="false" rawType="java.lang.Integer" static="true" staticName="columnSpan" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getColumnSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Integer" index="" name="setColumnSpan" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" rawType="java.lang.Integer" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Boolean" name="GridPane_fillHeight" override="false" rawType="java.lang.Boolean" static="true" staticName="fillHeight" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="isFillHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Boolean" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Boolean" index="" name="setFillHeight" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Boolean arg1" public="true" rawType="java.lang.Boolean" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Boolean" name="arg1" type="java.lang.Boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Boolean" name="GridPane_fillWidth" override="false" rawType="java.lang.Boolean" static="true" staticName="fillWidth" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="isFillWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Boolean" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Boolean" index="" name="setFillWidth" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Boolean arg1" public="true" rawType="java.lang.Boolean" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Boolean" name="arg1" type="java.lang.Boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.HPos" name="GridPane_halignment" override="false" rawType="javafx.geometry.HPos" static="true" staticName="halignment" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.HPos" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.HPos" index="" name="setHalignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.HPos arg1" public="true" rawType="javafx.geometry.HPos" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.HPos" name="arg1" type="javafx.geometry.HPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Priority" name="GridPane_hgrow" override="false" rawType="javafx.scene.layout.Priority" static="true" staticName="hgrow" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getHgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.layout.Priority" index="" name="setHgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" rawType="javafx.scene.layout.Priority" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="GridPane_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Integer" name="GridPane_rowIndex" override="false" rawType="java.lang.Integer" static="true" staticName="rowIndex" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getRowIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Integer" index="" name="setRowIndex" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" rawType="java.lang.Integer" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Integer" name="GridPane_rowSpan" override="false" rawType="java.lang.Integer" static="true" staticName="rowSpan" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getRowSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Integer" index="" name="setRowSpan" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" rawType="java.lang.Integer" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.VPos" name="GridPane_valignment" override="false" rawType="javafx.geometry.VPos" static="true" staticName="valignment" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.VPos" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.VPos" index="" name="setValignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.VPos arg1" public="true" rawType="javafx.geometry.VPos" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.VPos" name="arg1" type="javafx.geometry.VPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Priority" name="GridPane_vgrow" override="false" rawType="javafx.scene.layout.Priority" static="true" staticName="vgrow" staticType="javafx.scene.layout.GridPane">
        <getter abstract="false" access="public" final="false" name="getVgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.layout.Priority" index="" name="setVgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" rawType="javafx.scene.layout.Priority" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Priority" name="HBox_hgrow" override="false" rawType="javafx.scene.layout.Priority" static="true" staticName="hgrow" staticType="javafx.scene.layout.HBox">
        <getter abstract="false" access="public" final="false" name="getHgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.layout.Priority" index="" name="setHgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" rawType="javafx.scene.layout.Priority" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="HBox_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.HBox">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Boolean" name="SplitPane_resizableWithParent" override="false" rawType="java.lang.Boolean" static="true" staticName="resizableWithParent" staticType="javafx.scene.control.SplitPane">
        <getter abstract="false" access="public" final="false" name="isResizableWithParent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Boolean" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Boolean" index="" name="setResizableWithParent" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Boolean arg1" public="true" rawType="java.lang.Boolean" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="java.lang.Boolean" name="arg1" type="java.lang.Boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Pos" name="StackPane_alignment" override="false" rawType="javafx.geometry.Pos" static="true" staticName="alignment" staticType="javafx.scene.layout.StackPane">
        <getter abstract="false" access="public" final="false" name="getAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Pos" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" rawType="javafx.geometry.Pos" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="StackPane_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.StackPane">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Pos" name="TilePane_alignment" override="false" rawType="javafx.geometry.Pos" static="true" staticName="alignment" staticType="javafx.scene.layout.TilePane">
        <getter abstract="false" access="public" final="false" name="getAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Pos" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" rawType="javafx.geometry.Pos" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="TilePane_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.TilePane">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="VBox_margin" override="false" rawType="javafx.geometry.Insets" static="true" staticName="margin" staticType="javafx.scene.layout.VBox">
        <getter abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Insets" index="" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" rawType="javafx.geometry.Insets" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Priority" name="VBox_vgrow" override="false" rawType="javafx.scene.layout.Priority" static="true" staticName="vgrow" staticType="javafx.scene.layout.VBox">
        <getter abstract="false" access="public" final="false" name="getVgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </getter>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.layout.Priority" index="" name="setVgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" rawType="javafx.scene.layout.Priority" returnType="void" static="true">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
          <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ParallelCamera" genericParam="" genericParamPrepend="" name="ParallelCamera" package="javafx.scene" super="javafx.scene.Camera" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.ParallelCamera" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Parent" genericParam="" genericParamPrepend="" name="Parent" package="javafx.scene" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="false" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getChildrenUnmodifiable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getStylesheets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isNeedsLayout" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="layout" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="lookup" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="minHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="minWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="needsLayoutProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="prefHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prefWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="requestLayout" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <property genericParam="" genericType="double" name="baselineOffset" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="childrenUnmodifiable" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getChildrenUnmodifiable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="needsLayout" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isNeedsLayout" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="stylesheets" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getStylesheets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PerspectiveCamera" genericParam="" genericParamPrepend="" name="PerspectiveCamera" package="javafx.scene" super="javafx.scene.Camera" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.PerspectiveCamera" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.PerspectiveCamera" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="fieldOfViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getFieldOfView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isFixedEyeAtCameraZero" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isVerticalFieldOfView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setFieldOfView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVerticalFieldOfView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="verticalFieldOfViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="double" name="fieldOfView" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFieldOfView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFieldOfView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="fixedEyeAtCameraZero" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFixedEyeAtCameraZero" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="verticalFieldOfView" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVerticalFieldOfView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVerticalFieldOfView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PointLight" genericParam="" genericParamPrepend="" name="PointLight" package="javafx.scene" super="javafx.scene.LightBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.PointLight" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.PointLight" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Scene" genericParam="" genericParamPrepend="" name="Scene" package="javafx.scene" super="">
      <constructor access="public" name="javafx.scene.Scene" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Parent arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
      </constructor>
      <constructor access="public" name="javafx.scene.Scene" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Parent arg0, javafx.scene.paint.Paint arg1" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg1" type="javafx.scene.paint.Paint"/>
      </constructor>
      <constructor access="public" name="javafx.scene.Scene" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Parent arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.Scene" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.Parent arg0, double arg1, double arg2, boolean arg3" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.Scene" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.Parent arg0, double arg1, double arg2, javafx.scene.paint.Paint arg3" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg3" type="javafx.scene.paint.Paint"/>
      </constructor>
      <constructor access="public" name="javafx.scene.Scene" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Parent arg0, double arg1, double arg2, boolean arg3, javafx.scene.SceneAntialiasing arg4" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
        <parameter genericType="javafx.scene.SceneAntialiasing" name="arg4" type="javafx.scene.SceneAntialiasing"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="addEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="addMnemonic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.Mnemonic arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.Mnemonic" name="arg0" type="javafx.scene.input.Mnemonic"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="cameraProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Camera&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cursorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Cursor&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="effectiveNodeOrientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.NodeOrientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="eventDispatcherProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventDispatcher&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="focusOwnerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getAccelerators" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;javafx.scene.input.KeyCombination, java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAntiAliasing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.SceneAntialiasing" static="false"/>
      <method abstract="false" access="public" final="true" name="getCamera" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Camera" static="false"/>
      <method abstract="false" access="public" final="true" name="getCursor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Cursor" static="false"/>
      <method abstract="false" access="public" final="true" name="getEffectiveNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getEventDispatcher" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventDispatcher" static="false"/>
      <method abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusOwner" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMnemonics" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;javafx.scene.input.KeyCombination, javafx.collections.ObservableList&lt;javafx.scene.input.Mnemonic&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnContextMenuRequested" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragDetected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragDone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragDropped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnInputMethodTextChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnKeyPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnKeyReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnKeyTyped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseClicked" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseDragged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMousePressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMouseReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRotate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRotationFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRotationStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnScroll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnScrollFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnScrollStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSwipeUp" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTouchStationary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnZoom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnZoomFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnZoomStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Parent" static="false"/>
      <method abstract="false" access="public" final="true" name="getStylesheets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getUserAgentStylesheet" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWindow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isDepthBuffer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="lookup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="nodeOrientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.NodeOrientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onContextMenuRequestedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragDetectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragDoneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragDroppedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragEnteredProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragExitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onDragOverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onInputMethodTextChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onKeyPressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onKeyReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onKeyTypedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseClickedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragEnteredProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragExitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragOverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDragReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseDraggedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseEnteredProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseExitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseMovedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMousePressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMouseReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onRotateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onRotationFinishedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onRotationStartedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onScrollFinishedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onScrollProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onScrollStartedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeDownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeLeftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeRightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSwipeUpProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchMovedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchPressedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchReleasedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onTouchStationaryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onZoomFinishedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onZoomProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onZoomStartedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="removeEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="removeMnemonic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.Mnemonic arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.Mnemonic" name="arg0" type="javafx.scene.input.Mnemonic"/>
      </method>
      <method abstract="false" access="public" final="true" name="rootProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Parent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCamera" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Camera arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Camera" name="arg0" type="javafx.scene.Camera"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCursor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Cursor arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Cursor" name="arg0" type="javafx.scene.Cursor"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEventDispatcher" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatcher arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventDispatcher" name="arg0" type="javafx.event.EventDispatcher"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setNodeOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.NodeOrientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.NodeOrientation" name="arg0" type="javafx.geometry.NodeOrientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnContextMenuRequested" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragDetected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragDone" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragDropped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnInputMethodTextChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnKeyPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnKeyReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnKeyTyped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseClicked" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseDragged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMousePressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMouseReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRotationFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRotationStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnScroll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnScrollFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnScrollStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeDown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSwipeUp" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTouchStationary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnZoom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnZoomFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnZoomStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Parent arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUserAgentStylesheet" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="snapshot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.WritableImage arg0" public="true" returnType="javafx.scene.image.WritableImage" static="false">
        <parameter genericType="javafx.scene.image.WritableImage" name="arg0" type="javafx.scene.image.WritableImage"/>
      </method>
      <method abstract="false" access="public" final="false" name="snapshot" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.SnapshotResult, java.lang.Void&gt; arg0, javafx.scene.image.WritableImage arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.SnapshotResult, java.lang.Void&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.scene.image.WritableImage" name="arg1" type="javafx.scene.image.WritableImage"/>
      </method>
      <method abstract="false" access="public" final="false" name="startDragAndDrop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.TransferMode[] arg0" public="true" returnType="javafx.scene.input.Dragboard" static="false">
        <parameter genericType="javafx.scene.input.TransferMode[]" name="arg0" type="javafx.scene.input.TransferMode[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="startFullDrag" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="userAgentStylesheetProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="windowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.stage.Window&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="javafx.scene.input.KeyCombination, java.lang.Runnable" genericType="javafx.collections.ObservableMap&lt;javafx.scene.input.KeyCombination, java.lang.Runnable&gt;" name="accelerators" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="false" name="getAccelerators" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;javafx.scene.input.KeyCombination, java.lang.Runnable&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.SceneAntialiasing" name="antiAliasing" override="false" rawType="javafx.scene.SceneAntialiasing" static="false">
        <getter abstract="false" access="public" final="true" name="getAntiAliasing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.SceneAntialiasing" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Camera" name="camera" override="false" rawType="javafx.scene.Camera" static="false">
        <getter abstract="false" access="public" final="true" name="getCamera" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Camera" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Camera" index="" name="setCamera" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Camera arg0" public="true" rawType="javafx.scene.Camera" returnType="void" static="false">
          <parameter genericType="javafx.scene.Camera" name="arg0" type="javafx.scene.Camera"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Cursor" name="cursor" override="false" rawType="javafx.scene.Cursor" static="false">
        <getter abstract="false" access="public" final="true" name="getCursor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Cursor" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Cursor" index="" name="setCursor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Cursor arg0" public="true" rawType="javafx.scene.Cursor" returnType="void" static="false">
          <parameter genericType="javafx.scene.Cursor" name="arg0" type="javafx.scene.Cursor"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="depthBuffer" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDepthBuffer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.NodeOrientation" name="effectiveNodeOrientation" override="false" rawType="javafx.geometry.NodeOrientation" static="false">
        <getter abstract="false" access="public" final="true" name="getEffectiveNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.event.EventDispatcher" name="eventDispatcher" override="false" rawType="javafx.event.EventDispatcher" static="false">
        <getter abstract="false" access="public" final="true" name="getEventDispatcher" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventDispatcher" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.event.EventDispatcher" index="" name="setEventDispatcher" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatcher arg0" public="true" rawType="javafx.event.EventDispatcher" returnType="void" static="false">
          <parameter genericType="javafx.event.EventDispatcher" name="arg0" type="javafx.event.EventDispatcher"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="fill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="focusOwner" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusOwner" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.KeyCombination, javafx.collections.ObservableList&lt;javafx.scene.input.Mnemonic&gt;" genericType="javafx.collections.ObservableMap&lt;javafx.scene.input.KeyCombination, javafx.collections.ObservableList&lt;javafx.scene.input.Mnemonic&gt;&gt;" name="mnemonics" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="false" name="getMnemonics" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;javafx.scene.input.KeyCombination, javafx.collections.ObservableList&lt;javafx.scene.input.Mnemonic&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.NodeOrientation" name="nodeOrientation" override="false" rawType="javafx.geometry.NodeOrientation" static="false">
        <getter abstract="false" access="public" final="true" name="getNodeOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.NodeOrientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.NodeOrientation" index="" name="setNodeOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.NodeOrientation arg0" public="true" rawType="javafx.geometry.NodeOrientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.NodeOrientation" name="arg0" type="javafx.geometry.NodeOrientation"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ContextMenuEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" name="onContextMenuRequested" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnContextMenuRequested" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ContextMenuEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" index="" name="setOnContextMenuRequested" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ContextMenuEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onDragDetected" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragDetected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnDragDetected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragDone" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragDone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragDone" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragDropped" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragDropped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragDropped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragEntered" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragExited" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="onDragOver" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.DragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" index="" name="setOnDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.InputMethodEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" name="onInputMethodTextChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnInputMethodTextChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.InputMethodEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" index="" name="setOnInputMethodTextChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.InputMethodEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="onKeyPressed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnKeyPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" index="" name="setOnKeyPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="onKeyReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnKeyReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" index="" name="setOnKeyReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="onKeyTyped" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnKeyTyped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.KeyEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" index="" name="setOnKeyTyped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseClicked" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseClicked" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseClicked" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragEntered" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragExited" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragOver" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragOver" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragOver" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="onMouseDragReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" index="" name="setOnMouseDragReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseDragged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseDragged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseDragged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseEntered" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseEntered" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseEntered" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseExited" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseExited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseExited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseMoved" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMousePressed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMousePressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMousePressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="onMouseReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMouseReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.MouseEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" index="" name="setOnMouseReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="onRotate" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRotate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" index="" name="setOnRotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="onRotationFinished" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRotationFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" index="" name="setOnRotationFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="onRotationStarted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRotationStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.RotateEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" index="" name="setOnRotationStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="onScroll" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnScroll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" index="" name="setOnScroll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="onScrollFinished" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnScrollFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" index="" name="setOnScrollFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="onScrollStarted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnScrollStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ScrollEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" index="" name="setOnScrollStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeDown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeDown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeLeft" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeRight" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="onSwipeUp" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSwipeUp" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.SwipeEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" index="" name="setOnSwipeUp" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchMoved" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchMoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchMoved" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchPressed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchPressed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchPressed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchReleased" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchReleased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchReleased" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="onTouchStationary" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTouchStationary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.TouchEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" index="" name="setOnTouchStationary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="onZoom" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnZoom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" index="" name="setOnZoom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="onZoomFinished" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnZoomFinished" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" index="" name="setOnZoomFinished" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="onZoomStarted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnZoomStarted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.input.ZoomEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" index="" name="setOnZoomStarted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Parent" name="root" override="false" rawType="javafx.scene.Parent" static="false">
        <getter abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Parent" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Parent" index="" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Parent arg0" public="true" rawType="javafx.scene.Parent" returnType="void" static="false">
          <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="stylesheets" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getStylesheets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getUserAgentStylesheet" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setUserAgentStylesheet" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.stage.Window" name="window" override="false" rawType="javafx.stage.Window" static="false">
        <getter abstract="false" access="public" final="true" name="getWindow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SceneAntialiasing" genericParam="" genericParamPrepend="" name="SceneAntialiasing" package="javafx.scene" super="">
      <field access="public" final="true" name="BALANCED" public="true" static="true" type="javafx.scene.SceneAntialiasing"/>
      <field access="public" final="true" name="DISABLED" public="true" static="true" type="javafx.scene.SceneAntialiasing"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SnapshotParameters" genericParam="" genericParamPrepend="" name="SnapshotParameters" package="javafx.scene" super="">
      <constructor access="public" name="javafx.scene.SnapshotParameters" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="getCamera" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Camera" static="false"/>
      <method abstract="false" access="public" final="false" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="false" name="getTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="getViewport" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="false" name="isDepthBuffer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="setCamera" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Camera arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Camera" name="arg0" type="javafx.scene.Camera"/>
      </method>
      <method abstract="false" access="public" final="false" name="setDepthBuffer" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="setViewport" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Camera" name="camera" override="false" rawType="javafx.scene.Camera" static="false">
        <getter abstract="false" access="public" final="false" name="getCamera" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Camera" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.Camera" index="" name="setCamera" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Camera arg0" public="true" rawType="javafx.scene.Camera" returnType="void" static="false">
          <parameter genericType="javafx.scene.Camera" name="arg0" type="javafx.scene.Camera"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="depthBuffer" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isDepthBuffer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setDepthBuffer" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="fill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="false" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.transform.Transform" name="transform" override="false" rawType="javafx.scene.transform.Transform" static="false">
        <getter abstract="false" access="public" final="false" name="getTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.transform.Transform" index="" name="setTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" rawType="javafx.scene.transform.Transform" returnType="void" static="false">
          <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Rectangle2D" name="viewport" override="false" rawType="javafx.geometry.Rectangle2D" static="false">
        <getter abstract="false" access="public" final="false" name="getViewport" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.Rectangle2D" index="" name="setViewport" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" rawType="javafx.geometry.Rectangle2D" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SnapshotResult" genericParam="" genericParamPrepend="" name="SnapshotResult" package="javafx.scene" super="">
      <method abstract="false" access="public" final="false" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritableImage" static="false"/>
      <method abstract="false" access="public" final="false" name="getSnapshotParameters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.SnapshotParameters" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <property genericParam="" genericType="javafx.scene.image.WritableImage" name="image" override="false" rawType="javafx.scene.image.WritableImage" static="false">
        <getter abstract="false" access="public" final="false" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritableImage" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.SnapshotParameters" name="snapshotParameters" override="false" rawType="javafx.scene.SnapshotParameters" static="false">
        <getter abstract="false" access="public" final="false" name="getSnapshotParameters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.SnapshotParameters" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="source" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SubScene" genericParam="" genericParamPrepend="" name="SubScene" package="javafx.scene" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.SubScene" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Parent arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.SubScene" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Parent arg0, double arg1, double arg2, boolean arg3, javafx.scene.SceneAntialiasing arg4" public="true" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
        <parameter genericType="javafx.scene.SceneAntialiasing" name="arg4" type="javafx.scene.SceneAntialiasing"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="cameraProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Camera&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAntiAliasing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.SceneAntialiasing" static="false"/>
      <method abstract="false" access="public" final="true" name="getCamera" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Camera" static="false"/>
      <method abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Parent" static="false"/>
      <method abstract="false" access="public" final="true" name="getUserAgentStylesheet" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isDepthBuffer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="rootProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Parent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCamera" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Camera arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Camera" name="arg0" type="javafx.scene.Camera"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Parent arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUserAgentStylesheet" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="userAgentStylesheetProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.SceneAntialiasing" name="antiAliasing" override="false" rawType="javafx.scene.SceneAntialiasing" static="false">
        <getter abstract="false" access="public" final="true" name="getAntiAliasing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.SceneAntialiasing" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Camera" name="camera" override="false" rawType="javafx.scene.Camera" static="false">
        <getter abstract="false" access="public" final="true" name="getCamera" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Camera" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Camera" index="" name="setCamera" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Camera arg0" public="true" rawType="javafx.scene.Camera" returnType="void" static="false">
          <parameter genericType="javafx.scene.Camera" name="arg0" type="javafx.scene.Camera"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="depthBuffer" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDepthBuffer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="fill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Parent" name="root" override="false" rawType="javafx.scene.Parent" static="false">
        <getter abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Parent" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Parent" index="" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Parent arg0" public="true" rawType="javafx.scene.Parent" returnType="void" static="false">
          <parameter genericType="javafx.scene.Parent" name="arg0" type="javafx.scene.Parent"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getUserAgentStylesheet" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setUserAgentStylesheet" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Canvas" genericParam="" genericParamPrepend="" name="Canvas" package="javafx.scene.canvas" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.canvas.Canvas" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.canvas.Canvas" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getGraphicsContext2D" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.canvas.GraphicsContext" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.canvas.GraphicsContext" name="graphicsContext2D" override="false" rawType="javafx.scene.canvas.GraphicsContext" static="false">
        <getter abstract="false" access="public" final="false" name="getGraphicsContext2D" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.canvas.GraphicsContext" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GraphicsContext" genericParam="" genericParamPrepend="" name="GraphicsContext" package="javafx.scene.canvas" super="">
      <method abstract="false" access="public" final="false" name="appendSVGPath" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="applyEffect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="false" name="arc" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="arcTo" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="beginPath" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="bezierCurveTo" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearRect" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="clip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="closePath" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="drawImage" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="drawImage" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2, double arg3, double arg4" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="drawImage" override="false" parameterCount="9" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="double" name="arg8" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="fill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="fillArc" override="false" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, javafx.scene.shape.ArcType arg6" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="javafx.scene.shape.ArcType" name="arg6" type="javafx.scene.shape.ArcType"/>
      </method>
      <method abstract="false" access="public" final="false" name="fillOval" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="fillPolygon" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, double[] arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="double[]" name="arg1" type="double[]"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="fillRect" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="fillRoundRect" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="fillText" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="fillText" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getCanvas" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.canvas.Canvas" static="false"/>
      <method abstract="false" access="public" final="false" name="getEffect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="javafx.scene.effect.Effect" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="false" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="false" name="getFillRule" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.FillRule" static="false"/>
      <method abstract="false" access="public" final="false" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
      <method abstract="false" access="public" final="false" name="getFontSmoothingType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.FontSmoothingType" static="false"/>
      <method abstract="false" access="public" final="false" name="getGlobalAlpha" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getGlobalBlendMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlendMode" static="false"/>
      <method abstract="false" access="public" final="false" name="getLineCap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineCap" static="false"/>
      <method abstract="false" access="public" final="false" name="getLineDashOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getLineDashes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double[]" static="false"/>
      <method abstract="false" access="public" final="false" name="getLineJoin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineJoin" static="false"/>
      <method abstract="false" access="public" final="false" name="getLineWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMiterLimit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getPixelWriter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelWriter" static="false"/>
      <method abstract="false" access="public" final="false" name="getStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="false" name="getTextAlign" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
      <method abstract="false" access="public" final="false" name="getTextBaseline" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
      <method abstract="false" access="public" final="false" name="getTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Affine" static="false"/>
      <method abstract="false" access="public" final="false" name="getTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Affine arg0" public="true" returnType="javafx.scene.transform.Affine" static="false">
        <parameter genericType="javafx.scene.transform.Affine" name="arg0" type="javafx.scene.transform.Affine"/>
      </method>
      <method abstract="false" access="public" final="false" name="isPointInPath" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="lineTo" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="moveTo" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="quadraticCurveTo" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="rect" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="restore" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="rotate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="save" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="scale" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setEffect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFillRule" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.FillRule arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.FillRule" name="arg0" type="javafx.scene.shape.FillRule"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFontSmoothingType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.FontSmoothingType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.FontSmoothingType" name="arg0" type="javafx.scene.text.FontSmoothingType"/>
      </method>
      <method abstract="false" access="public" final="false" name="setGlobalAlpha" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setGlobalBlendMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLineCap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineCap arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.StrokeLineCap" name="arg0" type="javafx.scene.shape.StrokeLineCap"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLineDashOffset" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLineDashes" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double[] arg0" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLineJoin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineJoin arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.StrokeLineJoin" name="arg0" type="javafx.scene.shape.StrokeLineJoin"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLineWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMiterLimit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setStroke" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTextAlign" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTextBaseline" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTransform" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Affine arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.Affine" name="arg0" type="javafx.scene.transform.Affine"/>
      </method>
      <method abstract="false" access="public" final="false" name="stroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="strokeArc" override="false" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, javafx.scene.shape.ArcType arg6" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="javafx.scene.shape.ArcType" name="arg6" type="javafx.scene.shape.ArcType"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokeLine" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokeOval" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokePolygon" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, double[] arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="double[]" name="arg1" type="double[]"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokePolyline" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, double[] arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="double[]" name="arg1" type="double[]"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokeRect" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokeRoundRect" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokeText" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="strokeText" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Affine arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.Affine" name="arg0" type="javafx.scene.transform.Affine"/>
      </method>
      <method abstract="false" access="public" final="false" name="translate" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <property genericParam="" genericType="javafx.scene.canvas.Canvas" name="canvas" override="false" rawType="javafx.scene.canvas.Canvas" static="false">
        <getter abstract="false" access="public" final="false" name="getCanvas" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.canvas.Canvas" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="effect" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setEffect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="fill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="false" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.FillRule" name="fillRule" override="false" rawType="javafx.scene.shape.FillRule" static="false">
        <getter abstract="false" access="public" final="false" name="getFillRule" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.FillRule" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.shape.FillRule" index="" name="setFillRule" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.FillRule arg0" public="true" rawType="javafx.scene.shape.FillRule" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.FillRule" name="arg0" type="javafx.scene.shape.FillRule"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.Font" name="font" override="false" rawType="javafx.scene.text.Font" static="false">
        <getter abstract="false" access="public" final="false" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.text.Font" index="" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" rawType="javafx.scene.text.Font" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.FontSmoothingType" name="fontSmoothingType" override="false" rawType="javafx.scene.text.FontSmoothingType" static="false">
        <getter abstract="false" access="public" final="false" name="getFontSmoothingType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.FontSmoothingType" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.text.FontSmoothingType" index="" name="setFontSmoothingType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.FontSmoothingType arg0" public="true" rawType="javafx.scene.text.FontSmoothingType" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.FontSmoothingType" name="arg0" type="javafx.scene.text.FontSmoothingType"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="globalAlpha" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getGlobalAlpha" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setGlobalAlpha" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.BlendMode" name="globalBlendMode" override="false" rawType="javafx.scene.effect.BlendMode" static="false">
        <getter abstract="false" access="public" final="false" name="getGlobalBlendMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlendMode" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.effect.BlendMode" index="" name="setGlobalBlendMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" rawType="javafx.scene.effect.BlendMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeLineCap" name="lineCap" override="false" rawType="javafx.scene.shape.StrokeLineCap" static="false">
        <getter abstract="false" access="public" final="false" name="getLineCap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineCap" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.shape.StrokeLineCap" index="" name="setLineCap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineCap arg0" public="true" rawType="javafx.scene.shape.StrokeLineCap" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.StrokeLineCap" name="arg0" type="javafx.scene.shape.StrokeLineCap"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lineDashOffset" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getLineDashOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setLineDashOffset" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double[]" name="lineDashes" override="false" rawType="double[]" static="false">
        <getter abstract="false" access="public" final="false" name="getLineDashes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double[]" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double[]" index="" name="setLineDashes" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double[] arg0" public="true" rawType="double[]" returnType="void" static="false">
          <parameter genericType="double[]" name="arg0" type="double[]"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeLineJoin" name="lineJoin" override="false" rawType="javafx.scene.shape.StrokeLineJoin" static="false">
        <getter abstract="false" access="public" final="false" name="getLineJoin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineJoin" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.shape.StrokeLineJoin" index="" name="setLineJoin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineJoin arg0" public="true" rawType="javafx.scene.shape.StrokeLineJoin" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.StrokeLineJoin" name="arg0" type="javafx.scene.shape.StrokeLineJoin"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lineWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getLineWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setLineWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="miterLimit" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMiterLimit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setMiterLimit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.image.PixelWriter" name="pixelWriter" override="false" rawType="javafx.scene.image.PixelWriter" static="false">
        <getter abstract="false" access="public" final="false" name="getPixelWriter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelWriter" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="stroke" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="false" name="getStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setStroke" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.TextAlignment" name="textAlign" override="false" rawType="javafx.scene.text.TextAlignment" static="false">
        <getter abstract="false" access="public" final="false" name="getTextAlign" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.text.TextAlignment" index="" name="setTextAlign" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" rawType="javafx.scene.text.TextAlignment" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.VPos" name="textBaseline" override="false" rawType="javafx.geometry.VPos" static="false">
        <getter abstract="false" access="public" final="false" name="getTextBaseline" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.geometry.VPos" index="" name="setTextBaseline" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" rawType="javafx.geometry.VPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.transform.Affine" name="transform" override="false" rawType="javafx.scene.transform.Affine" static="false">
        <getter abstract="false" access="public" final="false" name="getTransform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Affine" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.transform.Affine" index="" name="setTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Affine arg0" public="true" rawType="javafx.scene.transform.Affine" returnType="void" static="false">
          <parameter genericType="javafx.scene.transform.Affine" name="arg0" type="javafx.scene.transform.Affine"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="AreaChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="AreaChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.AreaChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.AreaChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="createSymbolsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getCreateSymbols" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCreateSymbols" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="createSymbols" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getCreateSymbols" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCreateSymbols" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="Axis&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="Axis" package="javafx.scene.chart" super="javafx.scene.layout.Region" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.chart.Axis" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="animatedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="autoRangingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="true" access="public" final="false" name="getDisplayPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="double" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getLabel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickLabelFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickLabelFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickLabelGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickLabelRotation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTickMarks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.Axis.TickMark&lt;T&gt;&gt;" static="false"/>
      <method abstract="true" access="public" final="false" name="getValueForDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="T" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="true" access="public" final="false" name="getZeroPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="invalidateRange" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.List&lt;T&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="true" name="isAutoRanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTickLabelsVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTickMarkVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="true" access="public" final="false" name="isValueOnAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="labelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="requestAxisLayout" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAutoRanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLabel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLabelFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLabelFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLabelGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLabelRotation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLabelsVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickMarkVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="sideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tickLabelFillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tickLabelFontProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.Font&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tickLabelGapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tickLabelRotationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tickLabelsVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tickLengthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tickMarkVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="true" access="public" final="false" name="toNumericValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="double" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="toRealValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="T" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="boolean" name="animated" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="autoRanging" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAutoRanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAutoRanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="label" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getLabel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setLabel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="side" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="tickLabelFill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getTickLabelFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setTickLabelFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.Font" name="tickLabelFont" override="false" rawType="javafx.scene.text.Font" static="false">
        <getter abstract="false" access="public" final="true" name="getTickLabelFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.Font" index="" name="setTickLabelFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" rawType="javafx.scene.text.Font" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tickLabelGap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTickLabelGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTickLabelGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tickLabelRotation" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTickLabelRotation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTickLabelRotation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="tickLabelsVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTickLabelsVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setTickLabelsVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tickLength" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTickLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTickLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="tickMarkVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTickMarkVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setTickMarkVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.chart.Axis.TickMark&lt;T&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.Axis.TickMark&lt;T&gt;&gt;" name="tickMarks" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getTickMarks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.Axis.TickMark&lt;T&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="zeroPosition" override="false" rawType="double" static="false">
        <getter abstract="true" access="public" final="false" name="getZeroPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="Axis.TickMark&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="Axis.TickMark" package="javafx.scene.chart" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.chart.Axis$TickMark" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getLabel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="true" name="isTextVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="labelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.binding.StringExpression" static="false"/>
      <method abstract="false" access="public" final="true" name="positionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.binding.DoubleExpression" static="false"/>
      <method abstract="false" access="public" final="true" name="setLabel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.binding.ObjectExpression&lt;T&gt;" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="label" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getLabel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setLabel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="position" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="textVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTextVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setTextVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="BarChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="BarChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.BarChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.BarChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.BarChart" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2, double arg3" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="barGapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="categoryGapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBarGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCategoryGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setBarGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCategoryGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="barGap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBarGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBarGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="categoryGap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCategoryGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCategoryGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="BubbleChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="BubbleChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.BubbleChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.BubbleChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CategoryAxis" genericParam="" genericParamPrepend="" name="CategoryAxis" package="javafx.scene.chart" super="javafx.scene.chart.Axis" superParam="java.lang.String" superParamPrepend="java.lang.String, ">
      <constructor access="public" name="javafx.scene.chart.CategoryAxis" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.chart.CategoryAxis" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;java.lang.String&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="categorySpacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="endMarginProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="gapStartAndEndProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCategories" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCategorySpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getDisplayPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="double" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getDisplayPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="double" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="getEndMargin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartMargin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getValueForDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getValueForDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getZeroPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="invalidateRange" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;java.lang.String&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.List&lt;java.lang.String&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="true" name="isGapStartAndEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isValueOnAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="isValueOnAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCategories" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;java.lang.String&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEndMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGapStartAndEnd" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="startMarginProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toNumericValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="double" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toNumericValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="double" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toRealValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toRealValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="categories" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getCategories" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" index="" name="setCategories" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;java.lang.String&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="categorySpacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCategorySpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="endMargin" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndMargin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="gapStartAndEnd" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isGapStartAndEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setGapStartAndEnd" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startMargin" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartMargin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="zeroPosition" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getZeroPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Chart" genericParam="" genericParamPrepend="" name="Chart" package="javafx.scene.chart" super="javafx.scene.layout.Region" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.chart.Chart" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="animatedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getLegendSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitleSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="isLegendVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="legendSideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="legendVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLegendSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLegendVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitleSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="titleSideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="animated" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="legendSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getLegendSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setLegendSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="legendVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isLegendVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setLegendVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="titleSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getTitleSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setTitleSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="LineChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="LineChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.LineChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.LineChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="axisSortingPolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.chart.LineChart.SortingPolicy&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="createSymbolsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAxisSortingPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.LineChart.SortingPolicy" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getCreateSymbols" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAxisSortingPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.chart.LineChart.SortingPolicy arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.chart.LineChart.SortingPolicy" name="arg0" type="javafx.scene.chart.LineChart.SortingPolicy"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCreateSymbols" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="javafx.scene.chart.LineChart.SortingPolicy" name="axisSortingPolicy" override="false" rawType="javafx.scene.chart.LineChart.SortingPolicy" static="false">
        <getter abstract="false" access="public" final="true" name="getAxisSortingPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.LineChart.SortingPolicy" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.chart.LineChart.SortingPolicy" index="" name="setAxisSortingPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.chart.LineChart.SortingPolicy arg0" public="true" rawType="javafx.scene.chart.LineChart.SortingPolicy" returnType="void" static="false">
          <parameter genericType="javafx.scene.chart.LineChart.SortingPolicy" name="arg0" type="javafx.scene.chart.LineChart.SortingPolicy"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="createSymbols" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getCreateSymbols" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCreateSymbols" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="NumberAxis" genericParam="" genericParamPrepend="" name="NumberAxis" package="javafx.scene.chart" super="javafx.scene.chart.ValueAxis" superParam="java.lang.Number" superParamPrepend="java.lang.Number, ">
      <constructor access="public" name="javafx.scene.chart.NumberAxis" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.chart.NumberAxis" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.NumberAxis" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="forceZeroInRangeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickUnit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isForceZeroInRange" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setForceZeroInRange" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickUnit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="tickUnitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="forceZeroInRange" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isForceZeroInRange" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setForceZeroInRange" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tickUnit" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTickUnit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTickUnit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="NumberAxis.DefaultFormatter" genericParam="" genericParamPrepend="" name="NumberAxis.DefaultFormatter" package="javafx.scene.chart" super="">
      <constructor access="public" name="javafx.scene.chart.NumberAxis$DefaultFormatter" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.chart.NumberAxis arg0" public="true" static="false">
        <parameter genericType="javafx.scene.chart.NumberAxis" name="arg0" type="javafx.scene.chart.NumberAxis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.NumberAxis$DefaultFormatter" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.NumberAxis arg0, java.lang.String arg1, java.lang.String arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.NumberAxis" name="arg0" type="javafx.scene.chart.NumberAxis"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="fromString" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.lang.Number" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="fromString" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Number arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Number" name="arg0" type="java.lang.Number"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PieChart" genericParam="" genericParamPrepend="" name="PieChart" package="javafx.scene.chart" super="javafx.scene.chart.Chart" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.chart.PieChart" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.chart.PieChart" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="clockwiseProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="dataProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getLabelLineLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLabelsVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isClockwise" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="labelLineLengthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="labelsVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setClockwise" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLabelLineLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLabelsVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="startAngleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="clockwise" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isClockwise" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setClockwise" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.chart.PieChart.Data" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" name="data" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.chart.PieChart.Data" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" index="" name="setData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.PieChart.Data&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="labelLineLength" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLabelLineLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLabelLineLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="labelsVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getLabelsVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setLabelsVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startAngle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PieChart.Data" genericParam="" genericParamPrepend="" name="PieChart.Data" package="javafx.scene.chart" super="">
      <constructor access="public" name="javafx.scene.chart.PieChart$Data" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, double arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="chartProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.chart.PieChart&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getChart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.PieChart" static="false"/>
      <method abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getPieValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="nameProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="nodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="pieValueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setName" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPieValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.chart.PieChart" name="chart" override="false" rawType="javafx.scene.chart.PieChart" static="false">
        <getter abstract="false" access="public" final="true" name="getChart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.PieChart" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setName" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="node" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="false" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="pieValue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPieValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPieValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="ScatterChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="ScatterChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.ScatterChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.ScatterChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="StackedAreaChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="StackedAreaChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.StackedAreaChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.StackedAreaChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="createSymbolsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getCreateSymbols" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCreateSymbols" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="createSymbols" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getCreateSymbols" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCreateSymbols" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="StackedBarChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="StackedBarChart" package="javafx.scene.chart" super="javafx.scene.chart.XYChart" superParam="X, Y" superParamPrepend="X, Y, ">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.StackedBarChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.StackedBarChart" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.StackedBarChart" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg2, double arg3" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg2" type="javafx.collections.ObservableList"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="categoryGapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getCategoryGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="setCategoryGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="categoryGap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getCategoryGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setCategoryGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Number" genericDeclarationPrepend="T extends java.lang.Number, " genericName="ValueAxis&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ValueAxis" package="javafx.scene.chart" super="javafx.scene.chart.Axis" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.chart.ValueAxis" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.chart.ValueAxis" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getDisplayPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="double" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Number"/>
      </method>
      <method abstract="false" access="public" final="false" name="getDisplayPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="double" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getLowerBound" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinorTickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinorTickLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTickLabelFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getUpperBound" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getValueForDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="T" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getValueForDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getZeroPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="invalidateRange" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.List&lt;T&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="true" name="isMinorTickVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isValueOnAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Number"/>
      </method>
      <method abstract="false" access="public" final="false" name="isValueOnAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="lowerBoundProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minorTickCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minorTickLengthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minorTickVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scaleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setLowerBound" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinorTickCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinorTickLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinorTickVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTickLabelFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUpperBound" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="tickLabelFormatterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toNumericValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="double" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Number"/>
      </method>
      <method abstract="false" access="public" final="false" name="toNumericValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="double" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toRealValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="T" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toRealValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="upperBoundProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="lowerBound" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLowerBound" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLowerBound" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="minorTickCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMinorTickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMinorTickCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minorTickLength" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinorTickLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinorTickLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="minorTickVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMinorTickVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setMinorTickVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scale" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="tickLabelFormatter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getTickLabelFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setTickLabelFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="upperBound" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getUpperBound" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setUpperBound" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="zeroPosition" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getZeroPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="XYChart&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="XYChart" package="javafx.scene.chart" super="javafx.scene.chart.Chart" superParam="" superParamPrepend="">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.XYChart" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.chart.Axis&lt;X&gt; arg0, javafx.scene.chart.Axis&lt;Y&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.chart.Axis&lt;X&gt;" name="arg0" type="javafx.scene.chart.Axis"/>
        <parameter genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="arg1" type="javafx.scene.chart.Axis"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alternativeColumnFillVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="alternativeRowFillVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="dataProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getVerticalGridLinesVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="getXAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.Axis&lt;X&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getYAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.Axis&lt;Y&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="horizontalGridLinesVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="horizontalZeroLineVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isAlternativeColumnFillVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isAlternativeRowFillVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isHorizontalGridLinesVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isHorizontalZeroLineVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isVerticalZeroLineVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlternativeColumnFillVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAlternativeRowFillVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHorizontalGridLinesVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHorizontalZeroLineVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVerticalGridLinesVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVerticalZeroLineVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="verticalGridLinesVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="verticalZeroLineVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="alternativeColumnFillVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAlternativeColumnFillVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAlternativeColumnFillVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="alternativeRowFillVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAlternativeRowFillVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAlternativeRowFillVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.chart.XYChart.Series&lt;X, Y&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="data" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.chart.XYChart.Series&lt;X, Y&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" index="" name="setData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Series&lt;X, Y&gt;&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="horizontalGridLinesVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHorizontalGridLinesVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setHorizontalGridLinesVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="horizontalZeroLineVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHorizontalZeroLineVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setHorizontalZeroLineVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="verticalGridLinesVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getVerticalGridLinesVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVerticalGridLinesVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="verticalZeroLineVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVerticalZeroLineVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVerticalZeroLineVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="X" genericType="javafx.scene.chart.Axis&lt;X&gt;" name="xAxis" override="false" rawType="javafx.scene.chart.Axis" static="false">
        <getter abstract="false" access="public" final="false" name="getXAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.Axis&lt;X&gt;" static="false"/>
      </property>
      <property genericParam="Y" genericType="javafx.scene.chart.Axis&lt;Y&gt;" name="yAxis" override="false" rawType="javafx.scene.chart.Axis" static="false">
        <getter abstract="false" access="public" final="false" name="getYAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.Axis&lt;Y&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="XYChart.Data&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="XYChart.Data" package="javafx.scene.chart" super="">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.XYChart$Data" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.chart.XYChart$Data" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="X arg0, Y arg1" public="true" static="false">
        <parameter genericType="X" name="arg0" type="java.lang.Object"/>
        <parameter genericType="Y" name="arg1" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.XYChart$Data" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="X arg0, Y arg1, java.lang.Object arg2" public="true" static="false">
        <parameter genericType="X" name="arg0" type="java.lang.Object"/>
        <parameter genericType="Y" name="arg1" type="java.lang.Object"/>
        <parameter genericType="java.lang.Object" name="arg2" type="java.lang.Object"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="XValueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;X&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="YValueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;Y&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="extraValueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getExtraValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getXValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="X" static="false"/>
      <method abstract="false" access="public" final="true" name="getYValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="Y" static="false"/>
      <method abstract="false" access="public" final="true" name="nodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setExtraValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setXValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="X arg0" public="true" returnType="void" static="false">
        <parameter genericType="X" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setYValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="Y arg0" public="true" returnType="void" static="false">
        <parameter genericType="Y" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.Object" name="extraValue" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="true" name="getExtraValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Object" index="" name="setExtraValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="node" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="X" name="xValue" override="false" rawType="X" static="false">
        <getter abstract="false" access="public" final="true" name="getXValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="X" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="X" index="" name="setXValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="X arg0" public="true" rawType="X" returnType="void" static="false">
          <parameter genericType="X" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="Y" name="yValue" override="false" rawType="Y" static="false">
        <getter abstract="false" access="public" final="true" name="getYValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="Y" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="Y" index="" name="setYValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="Y arg0" public="true" rawType="Y" returnType="void" static="false">
          <parameter genericType="Y" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="X extends java.lang.Object, Y extends java.lang.Object" genericDeclarationPrepend="X extends java.lang.Object, Y extends java.lang.Object, " genericName="XYChart.Series&lt;X, Y&gt;" genericParam="X, Y" genericParamPrepend="X, Y, " name="XYChart.Series" package="javafx.scene.chart" super="">
      <typeParameter name="X"/>
      <typeParameter name="Y"/>
      <constructor access="public" name="javafx.scene.chart.XYChart$Series" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.chart.XYChart$Series" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.chart.XYChart$Series" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt; arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="chartProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.chart.XYChart&lt;X, Y&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="dataProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getChart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.XYChart&lt;X, Y&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="nameProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="nodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setName" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="X, Y" genericType="javafx.scene.chart.XYChart&lt;X, Y&gt;" name="chart" override="false" rawType="javafx.scene.chart.XYChart" static="false">
        <getter abstract="false" access="public" final="true" name="getChart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.chart.XYChart&lt;X, Y&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.chart.XYChart.Data&lt;X, Y&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" name="data" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.chart.XYChart.Data&lt;X, Y&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" index="" name="setData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.chart.XYChart.Data&lt;X, Y&gt;&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setName" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="node" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Accordion" genericParam="" genericParamPrepend="" name="Accordion" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Accordion" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Accordion" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TitledPane[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TitledPane[]" name="arg0" type="javafx.scene.control.TitledPane[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="expandedPaneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TitledPane&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getExpandedPane" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TitledPane" static="false"/>
      <method abstract="false" access="public" final="true" name="getPanes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TitledPane&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setExpandedPane" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TitledPane arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TitledPane" name="arg0" type="javafx.scene.control.TitledPane"/>
      </method>
      <property genericParam="" genericType="javafx.scene.control.TitledPane" name="expandedPane" override="false" rawType="javafx.scene.control.TitledPane" static="false">
        <getter abstract="false" access="public" final="true" name="getExpandedPane" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TitledPane" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.TitledPane" index="" name="setExpandedPane" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TitledPane arg0" public="true" rawType="javafx.scene.control.TitledPane" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TitledPane" name="arg0" type="javafx.scene.control.TitledPane"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TitledPane" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TitledPane&gt;" name="panes" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getPanes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TitledPane&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Alert" genericParam="" genericParamPrepend="" name="Alert" package="javafx.scene.control" super="javafx.scene.control.Dialog" superParam="javafx.scene.control.ButtonType" superParamPrepend="javafx.scene.control.ButtonType, ">
      <constructor access="public" name="javafx.scene.control.Alert" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Alert.AlertType arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.Alert.AlertType" name="arg0" type="javafx.scene.control.Alert.AlertType"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Alert" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.Alert.AlertType arg0, java.lang.String arg1, javafx.scene.control.ButtonType[] arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.Alert.AlertType" name="arg0" type="javafx.scene.control.Alert.AlertType"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="javafx.scene.control.ButtonType[]" name="arg2" type="javafx.scene.control.ButtonType[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alertTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Alert.AlertType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAlertType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Alert.AlertType" static="false"/>
      <method abstract="false" access="public" final="true" name="getButtonTypes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.ButtonType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlertType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Alert.AlertType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Alert.AlertType" name="arg0" type="javafx.scene.control.Alert.AlertType"/>
      </method>
      <property genericParam="" genericType="javafx.scene.control.Alert.AlertType" name="alertType" override="false" rawType="javafx.scene.control.Alert.AlertType" static="false">
        <getter abstract="false" access="public" final="true" name="getAlertType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Alert.AlertType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.Alert.AlertType" index="" name="setAlertType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Alert.AlertType arg0" public="true" rawType="javafx.scene.control.Alert.AlertType" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.Alert.AlertType" name="arg0" type="javafx.scene.control.Alert.AlertType"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ButtonType" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.ButtonType&gt;" name="buttonTypes" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getButtonTypes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.ButtonType&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Button" genericParam="" genericParamPrepend="" name="Button" package="javafx.scene.control" super="javafx.scene.control.ButtonBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Button" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Button" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Button" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="cancelButtonProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="defaultButtonProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isCancelButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDefaultButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setCancelButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDefaultButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="cancelButton" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCancelButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCancelButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="defaultButton" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDefaultButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDefaultButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ButtonBar" genericParam="" genericParamPrepend="" name="ButtonBar" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ButtonBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ButtonBar" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <field access="public" final="true" name="BUTTON_ORDER_LINUX" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="BUTTON_ORDER_MAC_OS" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="BUTTON_ORDER_NONE" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="BUTTON_ORDER_WINDOWS" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="true" name="buttonMinWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="buttonOrderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getButtonData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.control.ButtonBar.ButtonData" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getButtonMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getButtonOrder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getButtons" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="isButtonUniformSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="boolean" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="setButtonData" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.control.ButtonBar.ButtonData arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.control.ButtonBar.ButtonData" name="arg1" type="javafx.scene.control.ButtonBar.ButtonData"/>
      </method>
      <method abstract="false" access="public" final="true" name="setButtonMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setButtonOrder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setButtonUniformSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, boolean arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="" genericType="double" name="buttonMinWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getButtonMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setButtonMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="buttonOrder" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getButtonOrder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setButtonOrder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="buttons" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getButtons" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="ButtonBase" genericParam="" genericParamPrepend="" name="ButtonBase" package="javafx.scene.control" super="javafx.scene.control.Labeled" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ButtonBase" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ButtonBase" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.ButtonBase" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="arm" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="armedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="disarm" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="true" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isArmed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <property genericParam="" genericType="boolean" name="armed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isArmed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ButtonType" genericParam="" genericParamPrepend="" name="ButtonType" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.ButtonType" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.ButtonType" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.control.ButtonBar.ButtonData arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.control.ButtonBar.ButtonData" name="arg1" type="javafx.scene.control.ButtonBar.ButtonData"/>
      </constructor>
      <field access="public" final="true" name="APPLY" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="CANCEL" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="CLOSE" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="FINISH" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="NEXT" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="NO" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="OK" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="PREVIOUS" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <field access="public" final="true" name="YES" public="true" static="true" type="javafx.scene.control.ButtonType"/>
      <method abstract="false" access="public" final="true" name="getButtonData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ButtonBar.ButtonData" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.control.ButtonBar.ButtonData" name="buttonData" override="false" rawType="javafx.scene.control.ButtonBar.ButtonData" static="false">
        <getter abstract="false" access="public" final="true" name="getButtonData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ButtonBar.ButtonData" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="Cell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="Cell" package="javafx.scene.control" super="javafx.scene.control.Labeled" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.Cell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="commitEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="editingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="emptyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isEditing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="itemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="editing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="empty" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="item" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CheckBox" genericParam="" genericParamPrepend="" name="CheckBox" package="javafx.scene.control" super="javafx.scene.control.ButtonBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.CheckBox" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.CheckBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="allowIndeterminateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="indeterminateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isAllowIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAllowIndeterminate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setIndeterminate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="allowIndeterminate" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAllowIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAllowIndeterminate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="indeterminate" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setIndeterminate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckBoxTreeItem&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckBoxTreeItem" package="javafx.scene.control" super="javafx.scene.control.TreeItem" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.CheckBoxTreeItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.CheckBoxTreeItem" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.CheckBoxTreeItem" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.CheckBoxTreeItem" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="T arg0, javafx.scene.Node arg1, boolean arg2" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.CheckBoxTreeItem" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="T arg0, javafx.scene.Node arg1, boolean arg2, boolean arg3" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="checkBoxSelectionChangedEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.CheckBoxTreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="independentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="indeterminateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isIndependent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setIndependent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setIndeterminate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="independent" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isIndependent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setIndependent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="indeterminate" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setIndeterminate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckBoxTreeItem.TreeModificationEvent&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckBoxTreeItem.TreeModificationEvent" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.CheckBoxTreeItem$TreeModificationEvent" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg0, javafx.scene.control.CheckBoxTreeItem&lt;T&gt; arg1, boolean arg2" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.CheckBoxTreeItem&lt;T&gt;" name="arg1" type="javafx.scene.control.CheckBoxTreeItem"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.CheckBoxTreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="wasIndeterminateChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="wasSelectionChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="T" genericType="javafx.scene.control.CheckBoxTreeItem&lt;T&gt;" name="treeItem" override="false" rawType="javafx.scene.control.CheckBoxTreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.CheckBoxTreeItem&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CheckMenuItem" genericParam="" genericParamPrepend="" name="CheckMenuItem" package="javafx.scene.control" super="javafx.scene.control.MenuItem" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.CheckMenuItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.CheckMenuItem" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.CheckMenuItem" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ChoiceBox&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ChoiceBox" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ChoiceBox" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ChoiceBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <field access="public" final="true" name="ON_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="itemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHiddenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHidingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShowingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.SingleSelectionModel&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SingleSelectionModel&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" name="arg0" type="javafx.scene.control.SingleSelectionModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;T&gt;" static="false"/>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHidden" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHiding" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShowing" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.SingleSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SingleSelectionModel&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.SingleSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" name="arg0" type="javafx.scene.control.SingleSelectionModel"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ChoiceDialog&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ChoiceDialog" package="javafx.scene.control" super="javafx.scene.control.Dialog" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ChoiceDialog" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ChoiceDialog" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, T[] arg1" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.ChoiceDialog" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, java.util.Collection&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.util.Collection&lt;T&gt;" name="arg1" type="java.util.Collection"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getDefaultChoice" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedItemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setSelectedItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="T" name="defaultChoice" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getDefaultChoice" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="selectedItem" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setSelectedItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ColorPicker" genericParam="" genericParamPrepend="" name="ColorPicker" package="javafx.scene.control" super="javafx.scene.control.ComboBoxBase" superParam="javafx.scene.paint.Color" superParamPrepend="javafx.scene.paint.Color, ">
      <constructor access="public" name="javafx.scene.control.ColorPicker" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ColorPicker" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </constructor>
      <field access="public" final="true" name="STYLE_CLASS_BUTTON" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_CLASS_SPLIT_BUTTON" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="true" name="getCustomColors" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <property genericParam="javafx.scene.paint.Color" genericType="javafx.collections.ObservableList&lt;javafx.scene.paint.Color&gt;" name="customColors" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getCustomColors" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.paint.Color&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ComboBox&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ComboBox" package="javafx.scene.control" super="javafx.scene.control.ComboBoxBase" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ComboBox" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ComboBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="buttonCellProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="editorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TextField&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getButtonCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ListCell&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getVisibleRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="itemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="placeholderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.SingleSelectionModel&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setButtonCell" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ListCell&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ListCell&lt;T&gt;" name="arg0" type="javafx.scene.control.ListCell"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SingleSelectionModel&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" name="arg0" type="javafx.scene.control.SingleSelectionModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisibleRowCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="visibleRowCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <property genericParam="T" genericType="javafx.scene.control.ListCell&lt;T&gt;" name="buttonCell" override="false" rawType="javafx.scene.control.ListCell" static="false">
        <getter abstract="false" access="public" final="true" name="getButtonCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ListCell&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.ListCell&lt;T&gt;" index="" name="setButtonCell" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ListCell&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.ListCell" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ListCell&lt;T&gt;" name="arg0" type="javafx.scene.control.ListCell"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TextField" name="editor" override="false" rawType="javafx.scene.control.TextField" static="false">
        <getter abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="placeholder" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.SingleSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SingleSelectionModel&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.SingleSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.SingleSelectionModel&lt;T&gt;" name="arg0" type="javafx.scene.control.SingleSelectionModel"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="visibleRowCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getVisibleRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setVisibleRowCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ComboBoxBase&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ComboBoxBase" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ComboBoxBase" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <field access="public" final="true" name="ON_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="arm" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="armedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="disarm" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPromptText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isArmed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHiddenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHidingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShowingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="promptTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPromptText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;T&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="armed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isArmed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHidden" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHiding" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShowing" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="promptText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getPromptText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setPromptText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ContextMenu" genericParam="" genericParamPrepend="" name="ContextMenu" package="javafx.scene.control" super="javafx.scene.control.PopupControl" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ContextMenu" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ContextMenu" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.MenuItem[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.MenuItem[]" name="arg0" type="javafx.scene.control.MenuItem[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="impl_showRelativeToWindowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isImpl_showRelativeToWindow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setImpl_showRelativeToWindow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Node arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="true" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Side arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Side" name="arg1" type="javafx.geometry.Side"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <property genericParam="" genericType="boolean" name="impl_showRelativeToWindow" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isImpl_showRelativeToWindow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setImpl_showRelativeToWindow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.MenuItem" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" static="false"/>
      </property>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Control" genericParam="" genericParamPrepend="" name="Control" package="javafx.scene.control" super="javafx.scene.layout.Region" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="contextMenuProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ContextMenu&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      <method abstract="false" access="public" final="true" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSkin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Skin&lt;?&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTooltip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Tooltip" static="false"/>
      <method abstract="false" access="public" final="false" name="isResizable" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContextMenu arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ContextMenu" name="arg0" type="javafx.scene.control.ContextMenu"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSkin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Skin&lt;?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Skin&lt;?&gt;" name="arg0" type="javafx.scene.control.Skin"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTooltip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Tooltip arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Tooltip" name="arg0" type="javafx.scene.control.Tooltip"/>
      </method>
      <method abstract="false" access="public" final="true" name="skinProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Skin&lt;?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tooltipProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Tooltip&gt;" static="false"/>
      <property genericParam="" genericType="double" name="baselineOffset" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContextMenu" name="contextMenu" override="false" rawType="javafx.scene.control.ContextMenu" static="false">
        <getter abstract="false" access="public" final="true" name="getContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ContextMenu" index="" name="setContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContextMenu arg0" public="true" rawType="javafx.scene.control.ContextMenu" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ContextMenu" name="arg0" type="javafx.scene.control.ContextMenu"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="true" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isResizable" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="?" genericType="javafx.scene.control.Skin&lt;?&gt;" name="skin" override="false" rawType="javafx.scene.control.Skin" static="false">
        <getter abstract="false" access="public" final="true" name="getSkin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Skin&lt;?&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="?" genericType="javafx.scene.control.Skin&lt;?&gt;" index="" name="setSkin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Skin&lt;?&gt; arg0" public="true" rawType="javafx.scene.control.Skin" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.Skin&lt;?&gt;" name="arg0" type="javafx.scene.control.Skin"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Tooltip" name="tooltip" override="false" rawType="javafx.scene.control.Tooltip" static="false">
        <getter abstract="false" access="public" final="true" name="getTooltip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Tooltip" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.Tooltip" index="" name="setTooltip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Tooltip arg0" public="true" rawType="javafx.scene.control.Tooltip" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.Tooltip" name="arg0" type="javafx.scene.control.Tooltip"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CustomMenuItem" genericParam="" genericParamPrepend="" name="CustomMenuItem" package="javafx.scene.control" super="javafx.scene.control.MenuItem" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.CustomMenuItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.CustomMenuItem" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.CustomMenuItem" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, boolean arg1" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="hideOnClickProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isHideOnClick" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHideOnClick" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="hideOnClick" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHideOnClick" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setHideOnClick" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DateCell" genericParam="" genericParamPrepend="" name="DateCell" package="javafx.scene.control" super="javafx.scene.control.Cell" superParam="java.time.LocalDate" superParamPrepend="java.time.LocalDate, ">
      <constructor access="public" name="javafx.scene.control.DateCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.time.LocalDate arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.time.LocalDate" name="arg0" type="java.time.LocalDate"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DatePicker" genericParam="" genericParamPrepend="" name="DatePicker" package="javafx.scene.control" super="javafx.scene.control.ComboBoxBase" superParam="java.time.LocalDate" superParamPrepend="java.time.LocalDate, ">
      <constructor access="public" name="javafx.scene.control.DatePicker" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.DatePicker" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.time.LocalDate arg0" public="true" static="false">
        <parameter genericType="java.time.LocalDate" name="arg0" type="java.time.LocalDate"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="chronologyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.time.chrono.Chronology&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;java.time.LocalDate&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="dayCellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="editorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TextField&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getChronology" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.time.chrono.Chronology" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getDayCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowWeekNumbers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setChronology" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.time.chrono.Chronology arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.time.chrono.Chronology" name="arg0" type="java.time.chrono.Chronology"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.time.LocalDate&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDayCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowWeekNumbers" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="showWeekNumbersProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="java.time.chrono.Chronology" name="chronology" override="false" rawType="java.time.chrono.Chronology" static="false">
        <getter abstract="false" access="public" final="true" name="getChronology" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.time.chrono.Chronology" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.time.chrono.Chronology" index="" name="setChronology" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.time.chrono.Chronology arg0" public="true" rawType="java.time.chrono.Chronology" returnType="void" static="false">
          <parameter genericType="java.time.chrono.Chronology" name="arg0" type="java.time.chrono.Chronology"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="java.time.LocalDate" genericType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.time.LocalDate" genericType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.time.LocalDate&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.DatePicker, javafx.scene.control.DateCell" genericType="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;" name="dayCellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getDayCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.DatePicker, javafx.scene.control.DateCell" genericType="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;" index="" name="setDayCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.DatePicker, javafx.scene.control.DateCell&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TextField" name="editor" override="false" rawType="javafx.scene.control.TextField" static="false">
        <getter abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="showWeekNumbers" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowWeekNumbers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowWeekNumbers" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="R extends java.lang.Object" genericDeclarationPrepend="R extends java.lang.Object, " genericName="Dialog&lt;R&gt;" genericParam="R" genericParamPrepend="R, " name="Dialog" package="javafx.scene.control" super="">
      <typeParameter name="R"/>
      <constructor access="public" name="javafx.scene.control.Dialog" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="close" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="contentTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="dialogPaneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.DialogPane&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getContentText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getDialogPane" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.DialogPane" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeaderText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getModality" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Modality" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnCloseRequest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOwner" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      <method abstract="false" access="public" final="true" name="getResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="R" static="false"/>
      <method abstract="false" access="public" final="true" name="getResultConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="headerTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="initModality" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Modality arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Modality" name="arg0" type="javafx.stage.Modality"/>
      </method>
      <method abstract="false" access="public" final="true" name="initOwner" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="true" name="initStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.StageStyle arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.StageStyle" name="arg0" type="javafx.stage.StageStyle"/>
      </method>
      <method abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onCloseRequestProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHiddenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHidingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShowingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="resizableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="resultConverterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="resultProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;R&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setContentText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDialogPane" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.DialogPane arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.DialogPane" name="arg0" type="javafx.scene.control.DialogPane"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeaderText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnCloseRequest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setResult" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="R arg0" public="true" returnType="void" static="false">
        <parameter genericType="R" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setResultConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="showAndWait" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;R&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="contentText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getContentText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setContentText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.DialogPane" name="dialogPane" override="false" rawType="javafx.scene.control.DialogPane" static="false">
        <getter abstract="false" access="public" final="true" name="getDialogPane" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.DialogPane" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.DialogPane" index="" name="setDialogPane" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.DialogPane arg0" public="true" rawType="javafx.scene.control.DialogPane" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.DialogPane" name="arg0" type="javafx.scene.control.DialogPane"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="headerText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getHeaderText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setHeaderText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.stage.Modality" name="modality" override="false" rawType="javafx.stage.Modality" static="false">
        <getter abstract="false" access="public" final="true" name="getModality" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Modality" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="onCloseRequest" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnCloseRequest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" index="" name="setOnCloseRequest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="onHidden" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" index="" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="onHiding" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" index="" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="onShowing" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" index="" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="onShown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" index="" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.DialogEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.stage.Window" name="owner" override="false" rawType="javafx.stage.Window" static="false">
        <getter abstract="false" access="public" final="true" name="getOwner" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="R" name="result" override="false" rawType="R" static="false">
        <getter abstract="false" access="public" final="true" name="getResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="R" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="R" index="" name="setResult" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="R arg0" public="true" rawType="R" returnType="void" static="false">
          <parameter genericType="R" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ButtonType, R" genericType="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;" name="resultConverter" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getResultConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ButtonType, R" genericType="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;" index="" name="setResultConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ButtonType, R&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DialogEvent" genericParam="" genericParamPrepend="" name="DialogEvent" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.DialogEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.Dialog&lt;?&gt; arg0, javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.scene.control.Dialog&lt;?&gt;" name="arg0" type="javafx.scene.control.Dialog"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg1" type="javafx.event.EventType"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DIALOG_CLOSE_REQUEST" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DIALOG_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DIALOG_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DIALOG_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DIALOG_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.control.DialogEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.control.DialogEvent&gt; arg2" public="true" returnType="javafx.scene.control.DialogEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.control.DialogEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.control.DialogEvent" genericType="javafx.event.EventType&lt;javafx.scene.control.DialogEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.DialogEvent&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DialogPane" genericParam="" genericParamPrepend="" name="DialogPane" package="javafx.scene.control" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.DialogPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="contentTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="expandableContentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="expandedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getButtonTypes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.ButtonType&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getContentText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getExpandableContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeaderText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="headerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="headerTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="lookupButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ButtonType arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="javafx.scene.control.ButtonType" name="arg0" type="javafx.scene.control.ButtonType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContentText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setExpandableContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setExpanded" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeaderText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="javafx.scene.control.ButtonType" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.ButtonType&gt;" name="buttonTypes" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getButtonTypes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.ButtonType&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="contentText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getContentText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setContentText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="expandableContent" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getExpandableContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setExpandableContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="expanded" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setExpanded" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="header" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="headerText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getHeaderText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setHeaderText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="FocusModel&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="FocusModel" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.FocusModel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="focus" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="focusNext" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusPrevious" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="focusedIndexProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="focusedItemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusedItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="isFocused" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <property genericParam="" genericType="int" name="focusedIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="focusedItem" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusedItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Hyperlink" genericParam="" genericParamPrepend="" name="Hyperlink" package="javafx.scene.control" super="javafx.scene.control.ButtonBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Hyperlink" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Hyperlink" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Hyperlink" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isVisited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="visitedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="visited" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVisited" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVisited" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="IndexRange" genericParam="" genericParamPrepend="" name="IndexRange" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.IndexRange" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.IndexRange arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.IndexRange" name="arg0" type="javafx.scene.control.IndexRange"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.IndexRange" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <field access="public" final="true" name="VALUE_DELIMITER" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="normalize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="javafx.scene.control.IndexRange" static="true">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="valueOf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.control.IndexRange" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="" genericType="int" name="end" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="length" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="start" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="IndexedCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="IndexedCell" package="javafx.scene.control" super="javafx.scene.control.Cell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.IndexedCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="indexProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="updateIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <property genericParam="" genericType="int" name="index" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Label" genericParam="" genericParamPrepend="" name="Label" package="javafx.scene.control" super="javafx.scene.control.Labeled" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Label" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Label" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Label" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getLabelFor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="labelForProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setLabelFor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Node" name="labelFor" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getLabelFor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setLabelFor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Labeled" genericParam="" genericParamPrepend="" name="Labeled" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Labeled" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Labeled" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Labeled" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="contentDisplayProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ContentDisplay&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="ellipsisStringProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fontProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.Font&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getContentDisplay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContentDisplay" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEllipsisString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphicTextGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLabelPadding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getLineSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextOverrun" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.OverrunStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicTextGapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isMnemonicParsing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isUnderline" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="labelPaddingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Insets&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="lineSpacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="mnemonicParsingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContentDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContentDisplay arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ContentDisplay" name="arg0" type="javafx.scene.control.ContentDisplay"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEllipsisString" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphicTextGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLineSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMnemonicParsing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextOverrun" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.OverrunStyle arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.OverrunStyle" name="arg0" type="javafx.scene.control.OverrunStyle"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUnderline" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="textAlignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.TextAlignment&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textFillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textOverrunProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.OverrunStyle&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="underlineProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="wrapTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContentDisplay" name="contentDisplay" override="false" rawType="javafx.scene.control.ContentDisplay" static="false">
        <getter abstract="false" access="public" final="true" name="getContentDisplay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContentDisplay" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ContentDisplay" index="" name="setContentDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContentDisplay arg0" public="true" rawType="javafx.scene.control.ContentDisplay" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ContentDisplay" name="arg0" type="javafx.scene.control.ContentDisplay"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="ellipsisString" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getEllipsisString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setEllipsisString" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.Font" name="font" override="false" rawType="javafx.scene.text.Font" static="false">
        <getter abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.Font" index="" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" rawType="javafx.scene.text.Font" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="graphicTextGap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphicTextGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setGraphicTextGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="labelPadding" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getLabelPadding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="lineSpacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLineSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLineSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="mnemonicParsing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMnemonicParsing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setMnemonicParsing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.TextAlignment" name="textAlignment" override="false" rawType="javafx.scene.text.TextAlignment" static="false">
        <getter abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.TextAlignment" index="" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" rawType="javafx.scene.text.TextAlignment" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="textFill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getTextFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setTextFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.OverrunStyle" name="textOverrun" override="false" rawType="javafx.scene.control.OverrunStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getTextOverrun" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.OverrunStyle" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.OverrunStyle" index="" name="setTextOverrun" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.OverrunStyle arg0" public="true" rawType="javafx.scene.control.OverrunStyle" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.OverrunStyle" name="arg0" type="javafx.scene.control.OverrunStyle"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="underline" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isUnderline" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setUnderline" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="wrapText" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ListCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ListCell" package="javafx.scene.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ListCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="commitEdit" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getListView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ListView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="listViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.ListView&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="updateListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ListView&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ListView&lt;T&gt;" name="arg0" type="javafx.scene.control.ListView"/>
      </method>
      <property genericParam="T" genericType="javafx.scene.control.ListView&lt;T&gt;" name="listView" override="false" rawType="javafx.scene.control.ListView" static="false">
        <getter abstract="false" access="public" final="true" name="getListView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ListView&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ListView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ListView" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ListView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ListView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="edit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="editAnyEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCancelEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCommitEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editStartEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="editingIndexProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fixedCellSizeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="focusModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.FocusModel&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditingIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.FocusModel&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.MultipleSelectionModel&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="itemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCancelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCommitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditStartProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onScrollToProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="placeholderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="refresh" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="scrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.MultipleSelectionModel&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.FocusModel&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.FocusModel&lt;T&gt;" name="arg0" type="javafx.scene.control.FocusModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.MultipleSelectionModel&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.MultipleSelectionModel&lt;T&gt;" name="arg0" type="javafx.scene.control.MultipleSelectionModel"/>
      </method>
      <property genericParam="javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="editingIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getEditingIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fixedCellSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.FocusModel&lt;T&gt;" name="focusModel" override="false" rawType="javafx.scene.control.FocusModel" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.FocusModel&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.FocusModel&lt;T&gt;" index="" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.FocusModel&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.FocusModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.FocusModel&lt;T&gt;" name="arg0" type="javafx.scene.control.FocusModel"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ListView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="onEditCancel" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ListView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" index="" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ListView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="onEditCommit" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ListView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" index="" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ListView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="onEditStart" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ListView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" index="" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="onScrollTo" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" index="" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="placeholder" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.MultipleSelectionModel&lt;T&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.MultipleSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.MultipleSelectionModel&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.MultipleSelectionModel&lt;T&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.MultipleSelectionModel&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.MultipleSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.MultipleSelectionModel&lt;T&gt;" name="arg0" type="javafx.scene.control.MultipleSelectionModel"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ListView.EditEvent&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ListView.EditEvent" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ListView$EditEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.control.ListView&lt;T&gt; arg0, javafx.event.EventType&lt;? extends javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt; arg1, T arg2, int arg3" public="true" static="false">
        <parameter genericType="javafx.scene.control.ListView&lt;T&gt;" name="arg0" type="javafx.scene.control.ListView"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.control.ListView.EditEvent&lt;T&gt;&gt;" name="arg1" type="javafx.event.EventType"/>
        <parameter genericType="T" name="arg2" type="java.lang.Object"/>
        <parameter genericType="int" name="arg3" type="int"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ListView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="int" name="index" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="newValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="source" override="true" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Menu" genericParam="" genericParamPrepend="" name="Menu" package="javafx.scene.control" super="javafx.scene.control.MenuItem" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Menu" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Menu" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Menu" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Menu" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1, javafx.scene.control.MenuItem[] arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.control.MenuItem[]" name="arg2" type="javafx.scene.control.MenuItem[]"/>
      </constructor>
      <field access="public" final="true" name="ON_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onHiddenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHidingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShowingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <property genericParam="javafx.scene.control.MenuItem" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" static="false"/>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHidden" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHiding" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShowing" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MenuBar" genericParam="" genericParamPrepend="" name="MenuBar" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.MenuBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.MenuBar" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Menu[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.Menu[]" name="arg0" type="javafx.scene.control.Menu[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getMenus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.Menu&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isUseSystemMenuBar" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setUseSystemMenuBar" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="useSystemMenuBarProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.Menu" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.Menu&gt;" name="menus" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getMenus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.Menu&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="useSystemMenuBar" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isUseSystemMenuBar" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setUseSystemMenuBar" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MenuButton" genericParam="" genericParamPrepend="" name="MenuButton" package="javafx.scene.control" super="javafx.scene.control.ButtonBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.MenuButton" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.MenuButton" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.MenuButton" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.MenuButton" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1, javafx.scene.control.MenuItem[] arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.control.MenuItem[]" name="arg2" type="javafx.scene.control.MenuItem[]"/>
      </constructor>
      <field access="public" final="true" name="ON_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPopupSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="popupSideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setPopupSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <property genericParam="javafx.scene.control.MenuItem" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.MenuItem&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="popupSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getPopupSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setPopupSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MenuItem" genericParam="" genericParamPrepend="" name="MenuItem" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.MenuItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.MenuItem" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.MenuItem" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <field access="public" final="true" name="MENU_VALIDATION_EVENT" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="true" name="acceleratorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.input.KeyCombination&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="disableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getAccelerator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMenuValidation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getParentMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Menu" static="false"/>
      <method abstract="false" access="public" final="true" name="getParentPopup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      <method abstract="false" access="public" final="false" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="idProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isDisable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMnemonicParsing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="mnemonicParsingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onMenuValidationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="parentMenuProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.Menu&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="parentPopupProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.ContextMenu&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAccelerator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDisable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMnemonicParsing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMenuValidation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="visibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination" name="accelerator" override="false" rawType="javafx.scene.input.KeyCombination" static="false">
        <getter abstract="false" access="public" final="true" name="getAccelerator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.input.KeyCombination" index="" name="setAccelerator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" rawType="javafx.scene.input.KeyCombination" returnType="void" static="false">
          <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="disable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDisable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDisable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="id" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="mnemonicParsing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMnemonicParsing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setMnemonicParsing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onMenuValidation" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMenuValidation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnMenuValidation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Menu" name="parentMenu" override="false" rawType="javafx.scene.control.Menu" static="false">
        <getter abstract="false" access="public" final="true" name="getParentMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Menu" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContextMenu" name="parentPopup" override="false" rawType="javafx.scene.control.ContextMenu" static="false">
        <getter abstract="false" access="public" final="true" name="getParentPopup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="false" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.PseudoClass" genericType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" name="pseudoClassStates" override="false" rawType="javafx.collections.ObservableSet" static="false">
        <getter abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="false" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="typeSelector" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="visible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="MultipleSelectionModel&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="MultipleSelectionModel" package="javafx.scene.control" super="javafx.scene.control.SelectionModel" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.MultipleSelectionModel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="true" access="public" final="false" name="getSelectedIndices" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Integer&gt;" static="false"/>
      <method abstract="true" access="public" final="false" name="getSelectedItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SelectionMode" static="false"/>
      <method abstract="true" access="public" final="false" name="selectAll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectFirst" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectIndices" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int[]" name="arg1" type="int[]"/>
      </method>
      <method abstract="true" access="public" final="false" name="selectLast" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectRange" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.SelectionMode&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setSelectionMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SelectionMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.SelectionMode" name="arg0" type="javafx.scene.control.SelectionMode"/>
      </method>
      <property genericParam="java.lang.Integer" genericType="javafx.collections.ObservableList&lt;java.lang.Integer&gt;" name="selectedIndices" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="true" access="public" final="false" name="getSelectedIndices" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Integer&gt;" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="selectedItems" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="true" access="public" final="false" name="getSelectedItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.SelectionMode" name="selectionMode" override="false" rawType="javafx.scene.control.SelectionMode" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SelectionMode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.SelectionMode" index="" name="setSelectionMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SelectionMode arg0" public="true" rawType="javafx.scene.control.SelectionMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.SelectionMode" name="arg0" type="javafx.scene.control.SelectionMode"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Pagination" genericParam="" genericParamPrepend="" name="Pagination" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Pagination" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Pagination" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Pagination" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <field access="public" final="true" name="INDETERMINATE" public="true" static="true" type="int"/>
      <field access="public" final="true" name="STYLE_CLASS_BULLET" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="true" name="currentPageIndexProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCurrentPageIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxPageIndicatorCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPageCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPageFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="maxPageIndicatorCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pageCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pageFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCurrentPageIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxPageIndicatorCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPageCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPageFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="currentPageIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getCurrentPageIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setCurrentPageIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="maxPageIndicatorCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxPageIndicatorCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMaxPageIndicatorCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="pageCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPageCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setPageCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="java.lang.Integer, javafx.scene.Node" genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;" name="pageFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getPageFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.Integer, javafx.scene.Node" genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;" index="" name="setPageFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.scene.Node&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PasswordField" genericParam="" genericParamPrepend="" name="PasswordField" package="javafx.scene.control" super="javafx.scene.control.TextField" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.PasswordField" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="copy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="cut" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PopupControl" genericParam="" genericParamPrepend="" name="PopupControl" package="javafx.scene.control" super="javafx.stage.PopupWindow" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.PopupControl" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <field access="public" final="true" name="USE_COMPUTED_SIZE" public="true" static="true" type="double"/>
      <field access="public" final="true" name="USE_PREF_SIZE" public="true" static="true" type="double"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSkin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Skin&lt;?&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="idProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="minHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="minWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="prefHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="prefWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pseudoClassStateChanged" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.css.PseudoClass arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.css.PseudoClass" name="arg0" type="javafx.css.PseudoClass"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMaxSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMinSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setPrefSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSkin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Skin&lt;?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Skin&lt;?&gt;" name="arg0" type="javafx.scene.control.Skin"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="skinProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Skin&lt;?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="id" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.css.PseudoClass" genericType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" name="pseudoClassStates" override="false" rawType="javafx.collections.ObservableSet" static="false">
        <getter abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      </property>
      <property genericParam="?" genericType="javafx.scene.control.Skin&lt;?&gt;" name="skin" override="false" rawType="javafx.scene.control.Skin" static="false">
        <getter abstract="false" access="public" final="true" name="getSkin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Skin&lt;?&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="?" genericType="javafx.scene.control.Skin&lt;?&gt;" index="" name="setSkin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Skin&lt;?&gt; arg0" public="true" rawType="javafx.scene.control.Skin" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.Skin&lt;?&gt;" name="arg0" type="javafx.scene.control.Skin"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="false" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="typeSelector" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ProgressBar" genericParam="" genericParamPrepend="" name="ProgressBar" package="javafx.scene.control" super="javafx.scene.control.ProgressIndicator" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ProgressBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ProgressBar" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ProgressIndicator" genericParam="" genericParamPrepend="" name="ProgressIndicator" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ProgressIndicator" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ProgressIndicator" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <field access="public" final="true" name="INDETERMINATE_PROGRESS" public="true" static="true" type="double"/>
      <method abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="indeterminateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="progressProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setProgress" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="boolean" name="indeterminate" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isIndeterminate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="progress" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setProgress" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="RadioButton" genericParam="" genericParamPrepend="" name="RadioButton" package="javafx.scene.control" super="javafx.scene.control.ToggleButton" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.RadioButton" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.RadioButton" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="fire" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="RadioMenuItem" genericParam="" genericParamPrepend="" name="RadioMenuItem" package="javafx.scene.control" super="javafx.scene.control.MenuItem" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.RadioMenuItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.RadioMenuItem" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.RadioMenuItem" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getToggleGroup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ToggleGroup" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setToggleGroup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleGroup arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ToggleGroup" name="arg0" type="javafx.scene.control.ToggleGroup"/>
      </method>
      <method abstract="false" access="public" final="true" name="toggleGroupProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ToggleGroup&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ToggleGroup" name="toggleGroup" override="false" rawType="javafx.scene.control.ToggleGroup" static="false">
        <getter abstract="false" access="public" final="true" name="getToggleGroup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ToggleGroup" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ToggleGroup" index="" name="setToggleGroup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleGroup arg0" public="true" rawType="javafx.scene.control.ToggleGroup" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ToggleGroup" name="arg0" type="javafx.scene.control.ToggleGroup"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="ResizeFeaturesBase&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="ResizeFeaturesBase" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.ResizeFeaturesBase" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg0, java.lang.Double arg1" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TableColumnBase"/>
        <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getDelta" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Double" static="false"/>
      <property genericParam="S, ?" genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="column" override="false" rawType="javafx.scene.control.TableColumnBase" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Double" name="delta" override="false" rawType="java.lang.Double" static="false">
        <getter abstract="false" access="public" final="false" name="getDelta" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ScrollBar" genericParam="" genericParamPrepend="" name="ScrollBar" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ScrollBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="adjustValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="blockIncrementProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBlockIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getUnitIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getVisibleAmount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="maxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBlockIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUnitIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisibleAmount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="unitIncrementProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="visibleAmountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="blockIncrement" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBlockIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBlockIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="max" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="min" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="unitIncrement" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getUnitIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setUnitIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="value" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="visibleAmount" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVisibleAmount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVisibleAmount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ScrollPane" genericParam="" genericParamPrepend="" name="ScrollPane" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ScrollPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ScrollPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fitToHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fitToWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHbarPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ScrollPane.ScrollBarPolicy" static="false"/>
      <method abstract="false" access="public" final="true" name="getHmax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getHmin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getHvalue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinViewportHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinViewportWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefViewportHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefViewportWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getVbarPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ScrollPane.ScrollBarPolicy" static="false"/>
      <method abstract="false" access="public" final="true" name="getViewportBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
      <method abstract="false" access="public" final="true" name="getVmax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getVmin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getVvalue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="hbarPolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ScrollPane.ScrollBarPolicy&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="hmaxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="hminProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="hvalueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isFitToHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isFitToWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isPannable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="minViewportHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minViewportWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pannableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefViewportHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefViewportWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFitToHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFitToWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHbarPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ScrollPane.ScrollBarPolicy arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" name="arg0" type="javafx.scene.control.ScrollPane.ScrollBarPolicy"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHmax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHmin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHvalue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinViewportHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinViewportWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPannable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefViewportHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefViewportWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVbarPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ScrollPane.ScrollBarPolicy arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" name="arg0" type="javafx.scene.control.ScrollPane.ScrollBarPolicy"/>
      </method>
      <method abstract="false" access="public" final="true" name="setViewportBounds" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVmax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVmin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVvalue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="vbarPolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ScrollPane.ScrollBarPolicy&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="viewportBoundsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Bounds&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="vmaxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="vminProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="vvalueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="fitToHeight" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFitToHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFitToHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="fitToWidth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFitToWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFitToWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" name="hbarPolicy" override="false" rawType="javafx.scene.control.ScrollPane.ScrollBarPolicy" static="false">
        <getter abstract="false" access="public" final="true" name="getHbarPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ScrollPane.ScrollBarPolicy" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" index="" name="setHbarPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ScrollPane.ScrollBarPolicy arg0" public="true" rawType="javafx.scene.control.ScrollPane.ScrollBarPolicy" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" name="arg0" type="javafx.scene.control.ScrollPane.ScrollBarPolicy"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="hmax" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHmax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHmax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="hmin" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHmin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHmin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="hvalue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHvalue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHvalue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minViewportHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinViewportHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinViewportHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minViewportWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinViewportWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinViewportWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="pannable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPannable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setPannable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefViewportHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefViewportHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefViewportHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefViewportWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefViewportWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefViewportWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" name="vbarPolicy" override="false" rawType="javafx.scene.control.ScrollPane.ScrollBarPolicy" static="false">
        <getter abstract="false" access="public" final="true" name="getVbarPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ScrollPane.ScrollBarPolicy" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" index="" name="setVbarPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ScrollPane.ScrollBarPolicy arg0" public="true" rawType="javafx.scene.control.ScrollPane.ScrollBarPolicy" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ScrollPane.ScrollBarPolicy" name="arg0" type="javafx.scene.control.ScrollPane.ScrollBarPolicy"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Bounds" name="viewportBounds" override="false" rawType="javafx.geometry.Bounds" static="false">
        <getter abstract="false" access="public" final="true" name="getViewportBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Bounds" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Bounds" index="" name="setViewportBounds" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" rawType="javafx.geometry.Bounds" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="vmax" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVmax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVmax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="vmin" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVmin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVmin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="vvalue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVvalue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVvalue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ScrollToEvent&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ScrollToEvent" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.ScrollToEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.control.ScrollToEvent&lt;T&gt;&gt; arg2, T arg3" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.control.ScrollToEvent&lt;T&gt;&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="T" name="arg3" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getScrollTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="scrollToColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.ScrollToEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="scrollToTopIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="true"/>
      <property genericParam="" genericType="T" name="scrollTarget" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getScrollTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="SelectionModel&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="SelectionModel" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.SelectionModel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="true" access="public" final="false" name="clearAndSelect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="clearSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="clearSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getSelectedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="true" access="public" final="false" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="true" access="public" final="false" name="isSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="select" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="select" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="selectFirst" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectLast" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectNext" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectPrevious" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedIndexProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedItemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;T&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="empty" override="false" rawType="boolean" static="false">
        <getter abstract="true" access="public" final="false" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="selectedIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="selectedItem" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Separator" genericParam="" genericParamPrepend="" name="Separator" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Separator" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Separator" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getHalignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.HPos" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getValignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
      <method abstract="false" access="public" final="true" name="halignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.HPos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.HPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.HPos" name="arg0" type="javafx.geometry.HPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="valignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.VPos&gt;" static="false"/>
      <property genericParam="" genericType="javafx.geometry.HPos" name="halignment" override="false" rawType="javafx.geometry.HPos" static="false">
        <getter abstract="false" access="public" final="true" name="getHalignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.HPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.HPos" index="" name="setHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.HPos arg0" public="true" rawType="javafx.geometry.HPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.HPos" name="arg0" type="javafx.geometry.HPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.VPos" name="valignment" override="false" rawType="javafx.geometry.VPos" static="false">
        <getter abstract="false" access="public" final="true" name="getValignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.VPos" index="" name="setValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" rawType="javafx.geometry.VPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SeparatorMenuItem" genericParam="" genericParamPrepend="" name="SeparatorMenuItem" package="javafx.scene.control" super="javafx.scene.control.CustomMenuItem" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.SeparatorMenuItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="SingleSelectionModel&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="SingleSelectionModel" package="javafx.scene.control" super="javafx.scene.control.SelectionModel" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.SingleSelectionModel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="clearAndSelect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="clearSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="select" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="select" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectFirst" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectLast" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectNext" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectPrevious" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <property genericParam="" genericType="boolean" name="empty" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="C extends javafx.scene.control.Control" genericDeclarationPrepend="C extends javafx.scene.control.Control, " genericName="SkinBase&lt;C&gt;" genericParam="C" genericParamPrepend="C, " name="SkinBase" package="javafx.scene.control" super="">
      <typeParameter name="C"/>
      <method abstract="false" access="public" final="false" name="dispose" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getSkinnable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="C" static="false"/>
      <method abstract="false" access="public" final="false" name="getSkinnable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Skinnable" static="false"/>
      <method abstract="false" access="public" final="true" name="pseudoClassStateChanged" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.css.PseudoClass arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.css.PseudoClass" name="arg0" type="javafx.css.PseudoClass"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="children" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="node" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="C" name="skinnable" override="false" rawType="C" static="false">
        <getter abstract="false" access="public" final="true" name="getSkinnable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="C" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Slider" genericParam="" genericParamPrepend="" name="Slider" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Slider" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Slider" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="adjustValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="blockIncrementProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBlockIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getLabelFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;java.lang.Double&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getMajorTickUnit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinorTickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowTickLabels" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowTickMarks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSnapToTicks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isValueChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="labelFormatterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;java.lang.Double&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="majorTickUnitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minorTickCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBlockIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLabelFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.lang.Double&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;java.lang.Double&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMajorTickUnit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinorTickCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowTickLabels" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowTickMarks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSnapToTicks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValueChanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="showTickLabelsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="showTickMarksProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="snapToTicksProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="valueChangingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="blockIncrement" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBlockIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBlockIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="java.lang.Double" genericType="javafx.util.StringConverter&lt;java.lang.Double&gt;" name="labelFormatter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getLabelFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;java.lang.Double&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.Double" genericType="javafx.util.StringConverter&lt;java.lang.Double&gt;" index="" name="setLabelFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.lang.Double&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;java.lang.Double&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="majorTickUnit" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMajorTickUnit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMajorTickUnit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="max" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="min" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="minorTickCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMinorTickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMinorTickCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showTickLabels" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowTickLabels" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowTickLabels" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showTickMarks" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowTickMarks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowTickMarks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="snapToTicks" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSnapToTicks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSnapToTicks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="value" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="valueChanging" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isValueChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setValueChanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="C extends java.lang.Object" genericDeclarationPrepend="C extends java.lang.Object, " genericName="SortEvent&lt;C&gt;" genericParam="C" genericParamPrepend="C, " name="SortEvent" package="javafx.scene.control" super="">
      <typeParameter name="C"/>
      <constructor access="public" name="javafx.scene.control.SortEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="C arg0, javafx.event.EventTarget arg1" public="true" static="false">
        <parameter genericType="C" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="C" static="false"/>
      <method abstract="false" access="public" final="false" name="sortEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.SortEvent&lt;C&gt;&gt;" static="true"/>
      <property genericParam="" genericType="C" name="source" override="true" rawType="C" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="C" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="Spinner&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="Spinner" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SpinnerValueFactory&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" name="arg0" type="javafx.scene.control.SpinnerValueFactory"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, int arg2" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Spinner" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, int arg2, int arg3" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
      </constructor>
      <field access="public" final="true" name="STYLE_CLASS_ARROWS_ON_LEFT_HORIZONTAL" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_CLASS_ARROWS_ON_LEFT_VERTICAL" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_CLASS_ARROWS_ON_RIGHT_HORIZONTAL" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_CLASS_SPLIT_ARROWS_HORIZONTAL" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_CLASS_SPLIT_ARROWS_VERTICAL" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="editorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TextField&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="true" name="getValueFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValueFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SpinnerValueFactory&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" name="arg0" type="javafx.scene.control.SpinnerValueFactory"/>
      </method>
      <method abstract="false" access="public" final="true" name="valueFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.SpinnerValueFactory&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;T&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TextField" name="editor" override="false" rawType="javafx.scene.control.TextField" static="false">
        <getter abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" name="valueFactory" override="false" rawType="javafx.scene.control.SpinnerValueFactory" static="false">
        <getter abstract="false" access="public" final="true" name="getValueFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" index="" name="setValueFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SpinnerValueFactory&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.SpinnerValueFactory" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.SpinnerValueFactory&lt;T&gt;" name="arg0" type="javafx.scene.control.SpinnerValueFactory"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="SpinnerValueFactory&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="SpinnerValueFactory" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="true" access="public" final="false" name="decrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="true" access="public" final="false" name="increment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="isWrapAround" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWrapAround" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="wrapAroundProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="wrapAround" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isWrapAround" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setWrapAround" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpinnerValueFactory.DoubleSpinnerValueFactory" genericParam="" genericParamPrepend="" name="SpinnerValueFactory.DoubleSpinnerValueFactory" package="javafx.scene.control" super="javafx.scene.control.SpinnerValueFactory" superParam="java.lang.Double" superParamPrepend="java.lang.Double, ">
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$DoubleSpinnerValueFactory" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$DoubleSpinnerValueFactory" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$DoubleSpinnerValueFactory" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="amountToStepByProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAmountToStepBy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAmountToStepBy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="amountToStepBy" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAmountToStepBy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAmountToStepBy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="max" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="min" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpinnerValueFactory.IntegerSpinnerValueFactory" genericParam="" genericParamPrepend="" name="SpinnerValueFactory.IntegerSpinnerValueFactory" package="javafx.scene.control" super="javafx.scene.control.SpinnerValueFactory" superParam="java.lang.Integer" superParamPrepend="java.lang.Integer, ">
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$IntegerSpinnerValueFactory" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$IntegerSpinnerValueFactory" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, int arg2" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$IntegerSpinnerValueFactory" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, int arg2, int arg3" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="amountToStepByProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAmountToStepBy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAmountToStepBy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <property genericParam="" genericType="int" name="amountToStepBy" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getAmountToStepBy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setAmountToStepBy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="max" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="min" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="SpinnerValueFactory.ListSpinnerValueFactory&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="SpinnerValueFactory.ListSpinnerValueFactory" package="javafx.scene.control" super="javafx.scene.control.SpinnerValueFactory" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.SpinnerValueFactory$ListSpinnerValueFactory" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="decrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="increment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="itemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SplitMenuButton" genericParam="" genericParamPrepend="" name="SplitMenuButton" package="javafx.scene.control" super="javafx.scene.control.MenuButton" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.SplitMenuButton" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.SplitMenuButton" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.MenuItem[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.MenuItem[]" name="arg0" type="javafx.scene.control.MenuItem[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="fire" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SplitPane" genericParam="" genericParamPrepend="" name="SplitPane" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.SplitPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.SplitPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getDividerPositions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double[]" static="false"/>
      <method abstract="false" access="public" final="false" name="getDividers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.SplitPane.Divider&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="isResizableWithParent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Boolean" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="setDividerPosition" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setDividerPositions" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double[] arg0" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="false" name="setResizableWithParent" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Boolean arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Boolean" name="arg1" type="java.lang.Boolean"/>
      </method>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double[]" name="dividerPositions" override="false" rawType="double[]" static="false">
        <getter abstract="false" access="public" final="false" name="getDividerPositions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double[]" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double[]" index="" name="setDividerPositions" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double[] arg0" public="true" rawType="double[]" returnType="void" static="false">
          <parameter genericType="double[]" name="arg0" type="double[]"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.SplitPane.Divider" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.SplitPane.Divider&gt;" name="dividers" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getDividers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.SplitPane.Divider&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SplitPane.Divider" genericParam="" genericParamPrepend="" name="SplitPane.Divider" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.SplitPane$Divider" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="positionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="position" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Tab" genericParam="" genericParamPrepend="" name="Tab" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.Tab" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Tab" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.Tab" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <field access="public" final="true" name="CLOSED_EVENT" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SELECTION_CHANGED_EVENT" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="TAB_CLOSE_REQUEST_EVENT" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="closableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="contextMenuProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ContextMenu&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="disableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="disabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnCloseRequest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnClosed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnSelectionChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabPane" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TabPane" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTooltip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Tooltip" static="false"/>
      <method abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="idProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isClosable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDisable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDisabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onCloseRequestProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onClosedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onSelectionChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setClosable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContextMenu arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ContextMenu" name="arg0" type="javafx.scene.control.ContextMenu"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDisable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnCloseRequest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnClosed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnSelectionChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTooltip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Tooltip arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Tooltip" name="arg0" type="javafx.scene.control.Tooltip"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tabPaneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TabPane&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tooltipProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.Tooltip&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="closable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isClosable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setClosable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContextMenu" name="contextMenu" override="false" rawType="javafx.scene.control.ContextMenu" static="false">
        <getter abstract="false" access="public" final="true" name="getContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ContextMenu" index="" name="setContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContextMenu arg0" public="true" rawType="javafx.scene.control.ContextMenu" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ContextMenu" name="arg0" type="javafx.scene.control.ContextMenu"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="disable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDisable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDisable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="disabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDisabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="id" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onCloseRequest" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnCloseRequest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnCloseRequest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onClosed" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnClosed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnClosed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onSelectionChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnSelectionChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnSelectionChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.PseudoClass" genericType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" name="pseudoClassStates" override="false" rawType="javafx.collections.ObservableSet" static="false">
        <getter abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="false" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TabPane" name="tabPane" override="false" rawType="javafx.scene.control.TabPane" static="false">
        <getter abstract="false" access="public" final="true" name="getTabPane" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TabPane" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Tooltip" name="tooltip" override="false" rawType="javafx.scene.control.Tooltip" static="false">
        <getter abstract="false" access="public" final="true" name="getTooltip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Tooltip" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.Tooltip" index="" name="setTooltip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Tooltip arg0" public="true" rawType="javafx.scene.control.Tooltip" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.Tooltip" name="arg0" type="javafx.scene.control.Tooltip"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="typeSelector" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TabPane" genericParam="" genericParamPrepend="" name="TabPane" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.TabPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TabPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Tab[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.Tab[]" name="arg0" type="javafx.scene.control.Tab[]"/>
      </constructor>
      <field access="public" final="true" name="STYLE_CLASS_FLOATING" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabClosingPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TabPane.TabClosingPolicy" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTabs" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.Tab&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isRotateGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="lookup" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="lookupAll" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.util.Set&lt;javafx.scene.Node&gt;" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="rotateGraphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setRotateGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;" name="arg0" type="javafx.scene.control.SingleSelectionModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTabClosingPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TabPane.TabClosingPolicy arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TabPane.TabClosingPolicy" name="arg0" type="javafx.scene.control.TabPane.TabClosingPolicy"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTabMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTabMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTabMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTabMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="sideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tabClosingPolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TabPane.TabClosingPolicy&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tabMaxHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tabMaxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tabMinHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tabMinWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="rotateGraphic" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isRotateGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setRotateGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.Tab" genericType="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.SingleSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.Tab" genericType="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt; arg0" public="true" rawType="javafx.scene.control.SingleSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.SingleSelectionModel&lt;javafx.scene.control.Tab&gt;" name="arg0" type="javafx.scene.control.SingleSelectionModel"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="side" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TabPane.TabClosingPolicy" name="tabClosingPolicy" override="false" rawType="javafx.scene.control.TabPane.TabClosingPolicy" static="false">
        <getter abstract="false" access="public" final="true" name="getTabClosingPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TabPane.TabClosingPolicy" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.TabPane.TabClosingPolicy" index="" name="setTabClosingPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TabPane.TabClosingPolicy arg0" public="true" rawType="javafx.scene.control.TabPane.TabClosingPolicy" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TabPane.TabClosingPolicy" name="arg0" type="javafx.scene.control.TabPane.TabClosingPolicy"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tabMaxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTabMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTabMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tabMaxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTabMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTabMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tabMinHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTabMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTabMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tabMinWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTabMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTabMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.Tab" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.Tab&gt;" name="tabs" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getTabs" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.Tab&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TableCell" package="javafx.scene.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="commitEdit" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableRow" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="tableColumnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TableColumn&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tableRowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TableRow&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tableViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TableView&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="updateSelected" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableColumn" name="arg0" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTableRow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableRow arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableRow" name="arg0" type="javafx.scene.control.TableRow"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTableView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableView" name="arg0" type="javafx.scene.control.TableView"/>
      </method>
      <property genericParam="S, T" genericType="javafx.scene.control.TableColumn&lt;S, T&gt;" name="tableColumn" override="false" rawType="javafx.scene.control.TableColumn" static="false">
        <getter abstract="false" access="public" final="true" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TableRow" name="tableRow" override="false" rawType="javafx.scene.control.TableRow" static="false">
        <getter abstract="false" access="public" final="true" name="getTableRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableRow" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TableColumn&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TableColumn" package="javafx.scene.control" super="javafx.scene.control.TableColumnBase" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TableColumn" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TableColumn" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_CELL_FACTORY" public="true" static="true" type="javafx.util.Callback"/>
      <method abstract="false" access="public" final="true" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cellValueFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="editAnyEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCancelEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCommitEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editStartEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="S arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="S" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCellValueFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn.SortType" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCancelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCommitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditStartProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCellValueFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn.SortType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableColumn.SortType" name="arg0" type="javafx.scene.control.TableColumn.SortType"/>
      </method>
      <method abstract="false" access="public" final="true" name="sortTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TableColumn.SortType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tableViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TableView&lt;S&gt;&gt;" static="false"/>
      <property genericParam="javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" name="cellValueFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellValueFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" index="" name="setCellValueFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" name="columns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="onEditCancel" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" index="" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="onEditCommit" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" index="" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="onEditStart" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" index="" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TableColumn.SortType" name="sortType" override="false" rawType="javafx.scene.control.TableColumn.SortType" static="false">
        <getter abstract="false" access="public" final="true" name="getSortType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn.SortType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.TableColumn.SortType" index="" name="setSortType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn.SortType arg0" public="true" rawType="javafx.scene.control.TableColumn.SortType" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TableColumn.SortType" name="arg0" type="javafx.scene.control.TableColumn.SortType"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="false" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="typeSelector" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TableColumn.CellDataFeatures&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TableColumn.CellDataFeatures" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TableColumn$CellDataFeatures" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TableView&lt;S&gt; arg0, javafx.scene.control.TableColumn&lt;S, T&gt; arg1, S arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, T&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
        <parameter genericType="S" name="arg2" type="java.lang.Object"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      <property genericParam="S, T" genericType="javafx.scene.control.TableColumn&lt;S, T&gt;" name="tableColumn" override="false" rawType="javafx.scene.control.TableColumn" static="false">
        <getter abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="S" name="value" override="false" rawType="S" static="false">
        <getter abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TableColumn.CellEditEvent&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TableColumn.CellEditEvent" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TableColumn$CellEditEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.control.TableView&lt;S&gt; arg0, javafx.scene.control.TablePosition&lt;S, T&gt; arg1, javafx.event.EventType&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt; arg2, T arg3" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView"/>
        <parameter genericType="javafx.scene.control.TablePosition&lt;S, T&gt;" name="arg1" type="javafx.scene.control.TablePosition"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.control.TableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="T" name="arg3" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTablePosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <property genericParam="" genericType="T" name="newValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="oldValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="" genericType="S" name="rowValue" override="false" rawType="S" static="false">
        <getter abstract="false" access="public" final="false" name="getRowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      </property>
      <property genericParam="S, T" genericType="javafx.scene.control.TableColumn&lt;S, T&gt;" name="tableColumn" override="false" rawType="javafx.scene.control.TableColumn" static="false">
        <getter abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S, T" genericType="javafx.scene.control.TablePosition&lt;S, T&gt;" name="tablePosition" override="false" rawType="javafx.scene.control.TablePosition" static="false">
        <getter abstract="false" access="public" final="false" name="getTablePosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TableColumnBase&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TableColumnBase" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <field access="public" final="true" name="DEFAULT_COMPARATOR" public="true" static="true" type="java.util.Comparator"/>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="true" name="comparatorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.util.Comparator&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="contextMenuProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ContextMenu&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="S arg0" public="true" returnType="T" static="false">
        <parameter genericType="S" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCellData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="T" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="S arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="S" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;? extends javafx.scene.control.TableColumnBase&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getComparator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Comparator&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getParentColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="idProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSortable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="maxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="parentColumnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TableColumnBase&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="prefWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="resizableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setComparator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Comparator&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.Comparator&lt;T&gt;" name="arg0" type="java.util.Comparator"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContextMenu arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ContextMenu" name="arg0" type="javafx.scene.control.ContextMenu"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="sortNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="sortableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="visibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="? extends javafx.scene.control.TableColumnBase&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;? extends javafx.scene.control.TableColumnBase&lt;S, ?&gt;&gt;" name="columns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="true" access="public" final="false" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;? extends javafx.scene.control.TableColumnBase&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="T" genericType="java.util.Comparator&lt;T&gt;" name="comparator" override="false" rawType="java.util.Comparator" static="false">
        <getter abstract="false" access="public" final="true" name="getComparator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Comparator&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="java.util.Comparator&lt;T&gt;" index="" name="setComparator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Comparator&lt;T&gt; arg0" public="true" rawType="java.util.Comparator" returnType="void" static="false">
          <parameter genericType="java.util.Comparator&lt;T&gt;" name="arg0" type="java.util.Comparator"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContextMenu" name="contextMenu" override="false" rawType="javafx.scene.control.ContextMenu" static="false">
        <getter abstract="false" access="public" final="true" name="getContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ContextMenu" index="" name="setContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContextMenu arg0" public="true" rawType="javafx.scene.control.ContextMenu" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ContextMenu" name="arg0" type="javafx.scene.control.ContextMenu"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="id" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setId" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="S, ?" genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="parentColumn" override="false" rawType="javafx.scene.control.TableColumnBase" static="false">
        <getter abstract="false" access="public" final="true" name="getParentColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="prefWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.PseudoClass" genericType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" name="pseudoClassStates" override="false" rawType="javafx.collections.ObservableSet" static="false">
        <getter abstract="false" access="public" final="true" name="getPseudoClassStates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;javafx.css.PseudoClass&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="sortNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getSortNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setSortNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="sortable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSortable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSortable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="visible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object, TC extends javafx.scene.control.TableColumnBase&lt;T, ?&gt;" genericDeclarationPrepend="T extends java.lang.Object, TC extends javafx.scene.control.TableColumnBase&lt;T, ?&gt;, " genericName="TableFocusModel&lt;T, TC&gt;" genericParam="T, TC" genericParamPrepend="T, TC, " name="TableFocusModel" package="javafx.scene.control" super="javafx.scene.control.FocusModel" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <typeParameter name="TC"/>
      <constructor access="public" name="javafx.scene.control.TableFocusModel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="true" access="public" final="false" name="focus" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, TC arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="TC" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="true" access="public" final="false" name="focusAboveCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="focusBelowCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="focusLeftCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="focusRightCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="isFocused" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, TC arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="TC" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TablePosition&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TablePosition" package="javafx.scene.control" super="javafx.scene.control.TablePositionBase" superParam="javafx.scene.control.TableColumn&lt;S, T&gt;" superParamPrepend="javafx.scene.control.TableColumn&lt;S, T&gt;, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TablePosition" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TableView&lt;S&gt; arg0, int arg1, javafx.scene.control.TableColumn&lt;S, T&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, T&gt;" name="arg2" type="javafx.scene.control.TableColumn"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="int" name="column" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="S, T" genericType="javafx.scene.control.TableColumn&lt;S, T&gt;" name="tableColumn" override="true" rawType="javafx.scene.control.TableColumn" static="false">
        <getter abstract="false" access="public" final="true" name="getTableColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="TC extends javafx.scene.control.TableColumnBase" genericDeclarationPrepend="TC extends javafx.scene.control.TableColumnBase, " genericName="TablePositionBase&lt;TC&gt;" genericParam="TC" genericParamPrepend="TC, " name="TablePositionBase" package="javafx.scene.control" super="">
      <typeParameter name="TC"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="TC" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <property genericParam="" genericType="int" name="column" override="false" rawType="int" static="false">
        <getter abstract="true" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="row" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="TC" name="tableColumn" override="false" rawType="TC" static="false">
        <getter abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="TC" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TableRow&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TableRow" package="javafx.scene.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TableRow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="tableViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TableView&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="updateTableView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;T&gt;" name="arg0" type="javafx.scene.control.TableView"/>
      </method>
      <property genericParam="T" genericType="javafx.scene.control.TableView&lt;T&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TableSelectionModel&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TableSelectionModel" package="javafx.scene.control" super="javafx.scene.control.MultipleSelectionModel" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TableSelectionModel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="cellSelectionEnabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="true" access="public" final="false" name="clearAndSelect" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;T, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;T, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearAndSelect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="clearSelection" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;T, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;T, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="clearSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getSelectedIndices" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList" static="false"/>
      <method abstract="false" access="public" final="false" name="getSelectedItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList" static="false"/>
      <method abstract="false" access="public" final="true" name="isCellSelectionEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="true" access="public" final="false" name="isSelected" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;T, ?&gt; arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;T, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="isSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="select" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;T, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;T, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="select" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="select" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="selectAboveCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectAll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectBelowCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectFirst" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectIndices" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int[]" name="arg1" type="int[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectLast" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectLeftCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectNext" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectPrevious" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="true" access="public" final="false" name="selectRange" override="true" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;T, ?&gt; arg1, int arg2, javafx.scene.control.TableColumnBase&lt;T, ?&gt; arg3" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;T, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;T, ?&gt;" name="arg3" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="true" access="public" final="false" name="selectRightCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellSelectionEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="cellSelectionEnabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCellSelectionEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCellSelectionEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="empty" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.collections.ObservableList" name="selectedIndices" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getSelectedIndices" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.collections.ObservableList" name="selectedItems" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getSelectedItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TableView&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TableView" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TableView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TableView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;S&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;S&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <field access="public" final="true" name="CONSTRAINED_RESIZE_POLICY" public="true" static="true" type="javafx.util.Callback"/>
      <field access="public" final="true" name="DEFAULT_SORT_POLICY" public="true" static="true" type="javafx.util.Callback"/>
      <field access="public" final="true" name="UNCONSTRAINED_RESIZE_POLICY" public="true" static="true" type="javafx.util.Callback"/>
      <method abstract="false" access="public" final="true" name="columnResizePolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="comparatorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;java.util.Comparator&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="edit" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="editingCellProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TablePosition&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fixedCellSizeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="focusModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getColumnResizePolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getComparator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Comparator&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditingCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnScrollToColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnSort" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getRowFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortOrder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getVisibleLeafColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.scene.control.TableColumn&lt;S, ?&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getVisibleLeafColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getVisibleLeafIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn&lt;S, ?&gt; arg0" public="true" returnType="int" static="false">
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTableMenuButtonVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="itemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onScrollToColumnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onScrollToProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onSortProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="placeholderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="refresh" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="resizeColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.TableColumn&lt;S, ?&gt; arg0, double arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TableColumn"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="rowFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="scrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="S arg0" public="true" returnType="void" static="false">
        <parameter genericType="S" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn&lt;S, ?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollToColumnIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setColumnResizePolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView.TableViewFocusModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;S&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnScrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnSort" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRowFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView.TableViewSelectionModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTableMenuButtonVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="sort" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="sortPolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tableMenuButtonVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;" name="columnResizePolicy" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getColumnResizePolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;" index="" name="setColumnResizePolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableView.ResizeFeatures, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" name="columns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="java.util.Comparator&lt;S&gt;" name="comparator" override="false" rawType="java.util.Comparator" static="false">
        <getter abstract="false" access="public" final="true" name="getComparator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Comparator&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="S, ?" genericType="javafx.scene.control.TablePosition&lt;S, ?&gt;" name="editingCell" override="false" rawType="javafx.scene.control.TablePosition" static="false">
        <getter abstract="false" access="public" final="true" name="getEditingCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition&lt;S, ?&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fixedCellSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;" name="focusModel" override="false" rawType="javafx.scene.control.TableView.TableViewFocusModel" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S" genericType="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;" index="" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt; arg0" public="true" rawType="javafx.scene.control.TableView.TableViewFocusModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TableView.TableViewFocusModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView.TableViewFocusModel"/>
        </setter>
      </property>
      <property genericParam="S" genericType="javafx.collections.ObservableList&lt;S&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;S&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S" genericType="javafx.collections.ObservableList&lt;S&gt;" index="" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;S&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;S&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="onScrollTo" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" index="" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;" name="onScrollToColumn" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnScrollToColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;" index="" name="setOnScrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;" name="onSort" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnSort" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;" index="" name="setOnSort" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TableView&lt;S&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="placeholder" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;" name="rowFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getRowFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;" index="" name="setRowFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, javafx.scene.control.TableRow&lt;S&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.TableView.TableViewSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S" genericType="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt; arg0" public="true" rawType="javafx.scene.control.TableView.TableViewSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TableView.TableViewSelectionModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView.TableViewSelectionModel"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" name="sortOrder" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getSortOrder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;" name="sortPolicy" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getSortPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;" index="" name="setSortPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TableView&lt;S&gt;, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="tableMenuButtonVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTableMenuButtonVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setTableMenuButtonVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" name="visibleLeafColumns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getVisibleLeafColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TableView.ResizeFeatures&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TableView.ResizeFeatures" package="javafx.scene.control" super="javafx.scene.control.ResizeFeaturesBase" superParam="S" superParamPrepend="S, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TableView$ResizeFeatures" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TableView&lt;S&gt; arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1, java.lang.Double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
        <parameter genericType="java.lang.Double" name="arg2" type="java.lang.Double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase" static="false"/>
      <method abstract="false" access="public" final="false" name="getTable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <property genericParam="S, ?" genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="column" override="true" rawType="javafx.scene.control.TableColumn" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumn&lt;S, ?&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="table" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TableView.TableViewFocusModel&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TableView.TableViewFocusModel" package="javafx.scene.control" super="javafx.scene.control.TableFocusModel" superParam="S, javafx.scene.control.TableColumn&lt;S, ?&gt;" superParamPrepend="S, javafx.scene.control.TableColumn&lt;S, ?&gt;, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TableView$TableViewFocusModel" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView&lt;S&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TablePosition arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TablePosition" name="arg0" type="javafx.scene.control.TablePosition"/>
      </method>
      <method abstract="false" access="public" final="false" name="focusAboveCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusBelowCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusLeftCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusNext" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusPrevious" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusRightCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="focusedCellProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TablePosition&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusedCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition" static="false"/>
      <method abstract="false" access="public" final="false" name="isFocused" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="isFocused" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <property genericParam="" genericType="javafx.scene.control.TablePosition" name="focusedCell" override="false" rawType="javafx.scene.control.TablePosition" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusedCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TableView.TableViewSelectionModel&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TableView.TableViewSelectionModel" package="javafx.scene.control" super="javafx.scene.control.TableSelectionModel" superParam="S" superParamPrepend="S, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TableView$TableViewSelectionModel" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView&lt;S&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TableView"/>
      </constructor>
      <method abstract="true" access="public" final="false" name="clearAndSelect" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearAndSelect" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="true" access="public" final="false" name="clearSelection" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearSelection" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getFocusedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="true" access="public" final="false" name="getSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TablePosition&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      <method abstract="true" access="public" final="false" name="isSelected" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="isSelected" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="true" access="public" final="false" name="select" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="select" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectRange" override="true" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg1, int arg2, javafx.scene.control.TableColumnBase&lt;S, ?&gt; arg3" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;S, ?&gt;" name="arg3" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <property genericParam="" genericType="int" name="focusedIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getFocusedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TablePosition" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TablePosition&gt;" name="selectedCells" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="true" access="public" final="false" name="getSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TablePosition&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TableView&lt;S&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TextArea" genericParam="" genericParamPrepend="" name="TextArea" package="javafx.scene.control" super="javafx.scene.control.TextInputControl" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.TextArea" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TextArea" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_PARAGRAPH_CAPACITY" public="true" static="true" type="int"/>
      <field access="public" final="true" name="DEFAULT_PREF_COLUMN_COUNT" public="true" static="true" type="int"/>
      <field access="public" final="true" name="DEFAULT_PREF_ROW_COUNT" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getParagraphs" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.CharSequence&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefColumnCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getScrollLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScrollTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="prefColumnCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefRowCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scrollLeftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scrollTopProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setPrefColumnCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefRowCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScrollLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScrollTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="wrapTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="java.lang.CharSequence" genericType="javafx.collections.ObservableList&lt;java.lang.CharSequence&gt;" name="paragraphs" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getParagraphs" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.CharSequence&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="prefColumnCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefColumnCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setPrefColumnCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="prefRowCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setPrefRowCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scrollLeft" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScrollLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScrollLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scrollTop" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScrollTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScrollTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="wrapText" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TextField" genericParam="" genericParamPrepend="" name="TextField" package="javafx.scene.control" super="javafx.scene.control.TextInputControl" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.TextField" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TextField" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_PREF_COLUMN_COUNT" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getCharacters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.CharSequence" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefColumnCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="prefColumnCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefColumnCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.CharSequence" name="characters" override="false" rawType="java.lang.CharSequence" static="false">
        <getter abstract="false" access="public" final="false" name="getCharacters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.CharSequence" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="prefColumnCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefColumnCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setPrefColumnCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="V extends java.lang.Object" genericDeclarationPrepend="V extends java.lang.Object, " genericName="TextFormatter&lt;V&gt;" genericParam="V" genericParamPrepend="V, " name="TextFormatter" package="javafx.scene.control" super="">
      <typeParameter name="V"/>
      <constructor access="public" name="javafx.scene.control.TextFormatter" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt;" name="arg0" type="java.util.function.UnaryOperator"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TextFormatter" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;V&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;V&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TextFormatter" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;V&gt; arg0, V arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;V&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="V" name="arg1" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TextFormatter" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.util.StringConverter&lt;V&gt; arg0, V arg1, java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;V&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="V" name="arg1" type="java.lang.Object"/>
        <parameter genericType="java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt;" name="arg2" type="java.util.function.UnaryOperator"/>
      </constructor>
      <field access="public" final="true" name="IDENTITY_STRING_CONVERTER" public="true" static="true" type="javafx.util.StringConverter"/>
      <method abstract="false" access="public" final="true" name="getFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="V" static="false"/>
      <method abstract="false" access="public" final="true" name="getValueConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;V&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="V arg0" public="true" returnType="void" static="false">
        <parameter genericType="V" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;V&gt;" static="false"/>
      <property genericParam="javafx.scene.control.TextFormatter.Change" genericType="java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt;" name="filter" override="false" rawType="java.util.function.UnaryOperator" static="false">
        <getter abstract="false" access="public" final="true" name="getFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.function.UnaryOperator&lt;javafx.scene.control.TextFormatter.Change&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="V" name="value" override="false" rawType="V" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="V" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="V" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="V arg0" public="true" rawType="V" returnType="void" static="false">
          <parameter genericType="V" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="V" genericType="javafx.util.StringConverter&lt;V&gt;" name="valueConverter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getValueConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;V&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TextFormatter.Change" genericParam="" genericParamPrepend="" name="TextFormatter.Change" package="javafx.scene.control" super="">
      <method abstract="false" access="public" final="false" name="clone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextFormatter.Change" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnchor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getControl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlAnchor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlNewText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getRangeEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getRangeStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.IndexRange" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isAdded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isContentChange" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDeleted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isReplaced" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="selectRange" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCaretPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRange" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="boolean" name="added" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAdded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="anchor" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getAnchor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="caretPosition" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setCaretPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="contentChange" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isContentChange" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="control" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="true" name="getControl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="controlAnchor" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getControlAnchor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="controlCaretPosition" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getControlCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="controlNewText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getControlNewText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="controlText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getControlText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="deleted" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDeleted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="rangeEnd" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getRangeEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="rangeStart" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getRangeStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="replaced" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isReplaced" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.IndexRange" name="selection" override="false" rawType="javafx.scene.control.IndexRange" static="false">
        <getter abstract="false" access="public" final="true" name="getSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.IndexRange" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="TextInputControl" genericParam="" genericParamPrepend="" name="TextInputControl" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="anchorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="appendText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="backward" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="cancelEdit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="caretPositionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="clear" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="commitValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="copy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="cut" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="deleteNextChar" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="deletePreviousChar" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="deleteText" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="deleteText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.IndexRange arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.IndexRange" name="arg0" type="javafx.scene.control.IndexRange"/>
      </method>
      <method abstract="false" access="public" final="false" name="deselect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="endOfNextWord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="extendSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="fontProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.Font&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forward" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnchor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
      <method abstract="false" access="public" final="true" name="getLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPromptText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.IndexRange" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getText" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getTextFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextFormatter&lt;?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="home" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="insertText" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, java.lang.String arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isRedoable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isUndoable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="lengthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="nextWord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="paste" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="positionCaret" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="previousWord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="promptTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="redo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="redoableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="replaceSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="replaceText" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, java.lang.String arg2" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="replaceText" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.IndexRange arg0, java.lang.String arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.IndexRange" name="arg0" type="javafx.scene.control.IndexRange"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectAll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectBackward" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectEnd" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectEndOfNextWord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectForward" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectHome" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectNextWord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectPositionCaret" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectPreviousWord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectRange" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectedTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyStringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.IndexRange&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPromptText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TextFormatter&lt;?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TextFormatter&lt;?&gt;" name="arg0" type="javafx.scene.control.TextFormatter"/>
      </method>
      <method abstract="false" access="public" final="true" name="textFormatterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TextFormatter&lt;?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="undo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="undoableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <property genericParam="" genericType="int" name="anchor" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getAnchor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="caretPosition" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.Font" name="font" override="false" rawType="javafx.scene.text.Font" static="false">
        <getter abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.Font" index="" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" rawType="javafx.scene.text.Font" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="length" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="promptText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getPromptText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setPromptText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="redoable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isRedoable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="selectedText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.IndexRange" name="selection" override="false" rawType="javafx.scene.control.IndexRange" static="false">
        <getter abstract="false" access="public" final="true" name="getSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.IndexRange" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="?" genericType="javafx.scene.control.TextFormatter&lt;?&gt;" name="textFormatter" override="false" rawType="javafx.scene.control.TextFormatter" static="false">
        <getter abstract="false" access="public" final="true" name="getTextFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextFormatter&lt;?&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="?" genericType="javafx.scene.control.TextFormatter&lt;?&gt;" index="" name="setTextFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TextFormatter&lt;?&gt; arg0" public="true" rawType="javafx.scene.control.TextFormatter" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TextFormatter&lt;?&gt;" name="arg0" type="javafx.scene.control.TextFormatter"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="undoable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isUndoable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TextInputDialog" genericParam="" genericParamPrepend="" name="TextInputDialog" package="javafx.scene.control" super="javafx.scene.control.Dialog" superParam="java.lang.String" superParamPrepend="java.lang.String, ">
      <constructor access="public" name="javafx.scene.control.TextInputDialog" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TextInputDialog" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getDefaultValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="defaultValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getDefaultValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TextField" name="editor" override="false" rawType="javafx.scene.control.TextField" static="false">
        <getter abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TitledPane" genericParam="" genericParamPrepend="" name="TitledPane" package="javafx.scene.control" super="javafx.scene.control.Labeled" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.TitledPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TitledPane" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="animatedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="collapsibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="expandedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isCollapsible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCollapsible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setExpanded" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="animated" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="collapsible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCollapsible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCollapsible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="expanded" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setExpanded" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ToggleButton" genericParam="" genericParamPrepend="" name="ToggleButton" package="javafx.scene.control" super="javafx.scene.control.ButtonBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ToggleButton" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ToggleButton" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.ToggleButton" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getToggleGroup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ToggleGroup" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setToggleGroup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleGroup arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ToggleGroup" name="arg0" type="javafx.scene.control.ToggleGroup"/>
      </method>
      <method abstract="false" access="public" final="true" name="toggleGroupProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ToggleGroup&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ToggleGroup" name="toggleGroup" override="false" rawType="javafx.scene.control.ToggleGroup" static="false">
        <getter abstract="false" access="public" final="true" name="getToggleGroup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ToggleGroup" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ToggleGroup" index="" name="setToggleGroup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleGroup arg0" public="true" rawType="javafx.scene.control.ToggleGroup" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ToggleGroup" name="arg0" type="javafx.scene.control.ToggleGroup"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ToggleGroup" genericParam="" genericParamPrepend="" name="ToggleGroup" package="javafx.scene.control" super="">
      <constructor access="public" name="javafx.scene.control.ToggleGroup" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedToggle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Toggle" static="false"/>
      <method abstract="false" access="public" final="true" name="getToggles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.Toggle&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="selectToggle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Toggle arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Toggle" name="arg0" type="javafx.scene.control.Toggle"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectedToggleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.Toggle&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Toggle" name="selectedToggle" override="false" rawType="javafx.scene.control.Toggle" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedToggle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Toggle" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.Toggle" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.Toggle&gt;" name="toggles" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getToggles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.Toggle&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ToolBar" genericParam="" genericParamPrepend="" name="ToolBar" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.ToolBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.ToolBar" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Tooltip" genericParam="" genericParamPrepend="" name="Tooltip" package="javafx.scene.control" super="javafx.scene.control.PopupControl" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.control.Tooltip" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.Tooltip" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="activatedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="contentDisplayProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ContentDisplay&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fontProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.Font&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getContentDisplay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContentDisplay" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphicTextGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextOverrun" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.OverrunStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicTextGapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="install" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.control.Tooltip arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.control.Tooltip" name="arg1" type="javafx.scene.control.Tooltip"/>
      </method>
      <method abstract="false" access="public" final="true" name="isActivated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setContentDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContentDisplay arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ContentDisplay" name="arg0" type="javafx.scene.control.ContentDisplay"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphicTextGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextOverrun" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.OverrunStyle arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.OverrunStyle" name="arg0" type="javafx.scene.control.OverrunStyle"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="textAlignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.TextAlignment&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textOverrunProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.OverrunStyle&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="uninstall" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.control.Tooltip arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.control.Tooltip" name="arg1" type="javafx.scene.control.Tooltip"/>
      </method>
      <method abstract="false" access="public" final="true" name="wrapTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="activated" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isActivated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContentDisplay" name="contentDisplay" override="false" rawType="javafx.scene.control.ContentDisplay" static="false">
        <getter abstract="false" access="public" final="true" name="getContentDisplay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContentDisplay" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.ContentDisplay" index="" name="setContentDisplay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ContentDisplay arg0" public="true" rawType="javafx.scene.control.ContentDisplay" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ContentDisplay" name="arg0" type="javafx.scene.control.ContentDisplay"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.text.Font" name="font" override="false" rawType="javafx.scene.text.Font" static="false">
        <getter abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.Font" index="" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" rawType="javafx.scene.text.Font" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="graphicTextGap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphicTextGap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setGraphicTextGap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="true" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.TextAlignment" name="textAlignment" override="false" rawType="javafx.scene.text.TextAlignment" static="false">
        <getter abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.TextAlignment" index="" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" rawType="javafx.scene.text.TextAlignment" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.OverrunStyle" name="textOverrun" override="false" rawType="javafx.scene.control.OverrunStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getTextOverrun" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.OverrunStyle" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.OverrunStyle" index="" name="setTextOverrun" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.OverrunStyle arg0" public="true" rawType="javafx.scene.control.OverrunStyle" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.OverrunStyle" name="arg0" type="javafx.scene.control.OverrunStyle"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="wrapText" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TreeCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TreeCell" package="javafx.scene.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="commitEdit" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="disclosureNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getDisclosureNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDisclosureNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="treeItemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="treeViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeView&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="updateTreeItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeView&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeView&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeView"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Node" name="disclosureNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getDisclosureNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setDisclosureNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="treeItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeView&lt;T&gt;" name="treeView" override="false" rawType="javafx.scene.control.TreeView" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeView&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TreeItem&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TreeItem" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeItem" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TreeItem" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TreeItem" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, javafx.scene.Node arg1" public="true" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="branchCollapsedEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="branchExpandedEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="false" name="childrenModificationEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="expandedItemCountChangeEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="expandedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="graphicChangedEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isLeaf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="leafProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="nextSibling" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="nextSibling" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="parentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="previousSibling" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="previousSibling" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setExpanded" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="treeNotificationEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="valueChangedEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeItem.TreeModificationEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;T&gt;" static="false"/>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="children" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="expanded" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setExpanded" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="leaf" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isLeaf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="parent" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="T" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" rawType="T" returnType="void" static="false">
          <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TreeItem.TreeModificationEvent&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TreeItem.TreeModificationEvent" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeItem$TreeModificationEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg0, javafx.scene.control.TreeItem&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg1" type="javafx.scene.control.TreeItem"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TreeItem$TreeModificationEvent" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg0, javafx.scene.control.TreeItem&lt;T&gt; arg1, T arg2" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg1" type="javafx.scene.control.TreeItem"/>
        <parameter genericType="T" name="arg2" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TreeItem$TreeModificationEvent" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg0, javafx.scene.control.TreeItem&lt;T&gt; arg1, boolean arg2" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg1" type="javafx.scene.control.TreeItem"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.TreeItem$TreeModificationEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg0, javafx.scene.control.TreeItem&lt;T&gt; arg1, java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt; arg2, java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt; arg3" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg1" type="javafx.scene.control.TreeItem"/>
        <parameter genericType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg2" type="java.util.List"/>
        <parameter genericType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg3" type="java.util.List"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getAddedChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getAddedSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getRemovedChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getRemovedSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="wasAdded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="wasCollapsed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="wasExpanded" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="wasPermutated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="wasRemoved" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="? extends javafx.scene.control.TreeItem&lt;T&gt;" genericType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="addedChildren" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getAddedChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="addedSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getAddedSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="newValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="? extends javafx.scene.control.TreeItem&lt;T&gt;" genericType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="removedChildren" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getRemovedChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;? extends javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="removedSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getRemovedSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="source" override="true" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="treeItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TreeTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TreeTableCell" package="javafx.scene.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="commitEdit" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeTableRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableRow&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="tableColumnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tableRowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="treeTableViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="updateSelected" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTreeTableRow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableRow&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableRow&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableRow"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTreeTableView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
      </method>
      <property genericParam="S, T" genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="tableColumn" override="false" rawType="javafx.scene.control.TreeTableColumn" static="false">
        <getter abstract="false" access="public" final="true" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableRow&lt;S&gt;" name="treeTableRow" override="false" rawType="javafx.scene.control.TreeTableRow" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeTableRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableRow&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TreeTableColumn&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TreeTableColumn" package="javafx.scene.control" super="javafx.scene.control.TableColumnBase" superParam="javafx.scene.control.TreeItem&lt;S&gt;, T" superParamPrepend="javafx.scene.control.TreeItem&lt;S&gt;, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeTableColumn" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TreeTableColumn" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_CELL_FACTORY" public="true" static="true" type="javafx.util.Callback"/>
      <method abstract="false" access="public" final="true" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cellValueFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="editAnyEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCancelEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCommitEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editStartEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;S&gt; arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="false" name="getCellObservableValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="javafx.beans.value.ObservableValue" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCellValueFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn.SortType" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCancelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCommitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditStartProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCellValueFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn.SortType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn.SortType" name="arg0" type="javafx.scene.control.TreeTableColumn.SortType"/>
      </method>
      <method abstract="false" access="public" final="true" name="sortTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeTableColumn.SortType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="treeTableViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;" static="false"/>
      <property genericParam="javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" name="cellValueFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellValueFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" index="" name="setCellValueFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;, javafx.beans.value.ObservableValue&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" name="columns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="onEditCancel" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" index="" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="onEditCommit" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" index="" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="onEditStart" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" index="" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TreeTableColumn.SortType" name="sortType" override="false" rawType="javafx.scene.control.TreeTableColumn.SortType" static="false">
        <getter abstract="false" access="public" final="true" name="getSortType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn.SortType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.TreeTableColumn.SortType" index="" name="setSortType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn.SortType arg0" public="true" rawType="javafx.scene.control.TreeTableColumn.SortType" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeTableColumn.SortType" name="arg0" type="javafx.scene.control.TreeTableColumn.SortType"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.css.Styleable" name="styleableParent" override="false" rawType="javafx.css.Styleable" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleableParent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.css.Styleable" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="typeSelector" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getTypeSelector" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TreeTableColumn.CellDataFeatures&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TreeTableColumn.CellDataFeatures" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeTableColumn$CellDataFeatures" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0, javafx.scene.control.TreeTableColumn&lt;S, T&gt; arg1, javafx.scene.control.TreeItem&lt;S&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="arg1" type="javafx.scene.control.TreeTableColumn"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg2" type="javafx.scene.control.TreeItem"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getTreeTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      <property genericParam="S, T" genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="treeTableColumn" override="false" rawType="javafx.scene.control.TreeTableColumn" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="value" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TreeTableColumn.CellEditEvent&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TreeTableColumn.CellEditEvent" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeTableColumn$CellEditEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0, javafx.scene.control.TreeTablePosition&lt;S, T&gt; arg1, javafx.event.EventType&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt; arg2, T arg3" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
        <parameter genericType="javafx.scene.control.TreeTablePosition&lt;S, T&gt;" name="arg1" type="javafx.scene.control.TreeTablePosition"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.control.TreeTableColumn.CellEditEvent&lt;S, T&gt;&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="T" name="arg3" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeTablePosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTablePosition&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <property genericParam="" genericType="T" name="newValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="oldValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="rowValue" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getRowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="S, T" genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="tableColumn" override="false" rawType="javafx.scene.control.TreeTableColumn" static="false">
        <getter abstract="false" access="public" final="false" name="getTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S, T" genericType="javafx.scene.control.TreeTablePosition&lt;S, T&gt;" name="treeTablePosition" override="false" rawType="javafx.scene.control.TreeTablePosition" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeTablePosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTablePosition&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TreeTablePosition&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TreeTablePosition" package="javafx.scene.control" super="javafx.scene.control.TablePositionBase" superParam="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" superParamPrepend="javafx.scene.control.TreeTableColumn&lt;S, T&gt;, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeTablePosition" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0, int arg1, javafx.scene.control.TreeTableColumn&lt;S, T&gt; arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="arg2" type="javafx.scene.control.TreeTableColumn"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getTableColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <property genericParam="" genericType="int" name="column" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="S, T" genericType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" name="tableColumn" override="true" rawType="javafx.scene.control.TreeTableColumn" static="false">
        <getter abstract="false" access="public" final="true" name="getTableColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, T&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="treeItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TreeTableRow&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TreeTableRow" package="javafx.scene.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeTableRow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="commitEdit" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="disclosureNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeAccessibleAction" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAction arg0, java.lang.Object[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.AccessibleAction" name="arg0" type="javafx.scene.AccessibleAction"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="getDisclosureNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDisclosureNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="treeItemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="treeTableViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTableView&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="updateTreeItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateTreeTableView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Node" name="disclosureNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getDisclosureNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setDisclosureNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="treeItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeTableView&lt;T&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TreeTableView&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TreeTableView" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TreeTableView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TreeTableView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;S&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </constructor>
      <field access="public" final="true" name="CONSTRAINED_RESIZE_POLICY" public="true" static="true" type="javafx.util.Callback"/>
      <field access="public" final="true" name="DEFAULT_SORT_POLICY" public="true" static="true" type="javafx.util.Callback"/>
      <field access="public" final="true" name="UNCONSTRAINED_RESIZE_POLICY" public="true" static="true" type="javafx.util.Callback"/>
      <method abstract="false" access="public" final="true" name="columnResizePolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="comparatorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;java.util.Comparator&lt;javafx.scene.control.TreeItem&lt;S&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="edit" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="editAnyEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableView.EditEvent&lt;S&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCancelEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableView.EditEvent&lt;S&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCommitEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableView.EditEvent&lt;S&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editStartEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeTableView.EditEvent&lt;S&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="editingCellProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTablePosition&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="expandedItemCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fixedCellSizeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="focusModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getColumnResizePolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getComparator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Comparator&lt;javafx.scene.control.TreeItem&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditingCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getExpandedItemCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnScrollToColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnSort" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;S&gt; arg0" public="true" returnType="int" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="getRowFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeSortMode" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortOrder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSortPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTreeColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getTreeItemLevel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;?&gt; arg0" public="true" returnType="int" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;?&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="false" name="getVisibleLeafColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getVisibleLeafColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getVisibleLeafIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg0" public="true" returnType="int" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTableMenuButtonVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="onScrollToColumnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onScrollToProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onSortProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="placeholderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="refresh" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="resizeColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg0, double arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="rootProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeItem&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="rowFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="scrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollToColumnIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setColumnResizePolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView.TreeTableViewFocusModel"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnScrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnSort" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRowFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeSortMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeSortMode" name="arg0" type="javafx.scene.control.TreeSortMode"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSortPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTableMenuButtonVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTreeColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="showRootProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="sort" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="sortModeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeSortMode&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="sortPolicyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tableMenuButtonVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="treeColumnProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      <property genericParam="javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;" name="columnResizePolicy" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getColumnResizePolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;" index="" name="setColumnResizePolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView.ResizeFeatures, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" name="columns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TreeItem&lt;S&gt;" genericType="java.util.Comparator&lt;javafx.scene.control.TreeItem&lt;S&gt;&gt;" name="comparator" override="false" rawType="java.util.Comparator" static="false">
        <getter abstract="false" access="public" final="true" name="getComparator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Comparator&lt;javafx.scene.control.TreeItem&lt;S&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="S, ?" genericType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" name="editingCell" override="false" rawType="javafx.scene.control.TreeTablePosition" static="false">
        <getter abstract="false" access="public" final="true" name="getEditingCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="expandedItemCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getExpandedItemCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fixedCellSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;" name="focusModel" override="false" rawType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S" genericType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;" index="" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt; arg0" public="true" rawType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeTableView.TreeTableViewFocusModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView.TreeTableViewFocusModel"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="onScrollTo" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" index="" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;" name="onScrollToColumn" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnScrollToColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;" index="" name="setOnScrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;" name="onSort" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnSort" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;" index="" name="setOnSort" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.SortEvent&lt;javafx.scene.control.TreeTableView&lt;S&gt;&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="placeholder" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getPlaceholder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setPlaceholder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="root" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S" genericType="javafx.scene.control.TreeItem&lt;S&gt;" index="" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;S&gt; arg0" public="true" rawType="javafx.scene.control.TreeItem" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" name="rowFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getRowFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" index="" name="setRowFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, javafx.scene.control.TreeTableRow&lt;S&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S" genericType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt; arg0" public="true" rawType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView.TreeTableViewSelectionModel"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showRoot" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.TreeSortMode" name="sortMode" override="false" rawType="javafx.scene.control.TreeSortMode" static="false">
        <getter abstract="false" access="public" final="true" name="getSortMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeSortMode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.TreeSortMode" index="" name="setSortMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeSortMode arg0" public="true" rawType="javafx.scene.control.TreeSortMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeSortMode" name="arg0" type="javafx.scene.control.TreeSortMode"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" name="sortOrder" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getSortOrder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;" name="sortPolicy" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getSortPolicy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;" index="" name="setSortPolicy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeTableView&lt;S&gt;, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="tableMenuButtonVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTableMenuButtonVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setTableMenuButtonVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="S, ?" genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="treeColumn" override="false" rawType="javafx.scene.control.TreeTableColumn" static="false">
        <getter abstract="false" access="public" final="true" name="getTreeColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="S, ?" genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" index="" name="setTreeColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg0" public="true" rawType="javafx.scene.control.TreeTableColumn" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" name="visibleLeafColumns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getVisibleLeafColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTableColumn&lt;S, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TreeTableView.EditEvent&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TreeTableView.EditEvent" package="javafx.scene.control" super="">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TreeTableView$EditEvent" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0, javafx.event.EventType&lt;? extends javafx.scene.control.TreeTableView.EditEvent&gt; arg1, javafx.scene.control.TreeItem&lt;S&gt; arg2, S arg3, S arg4" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.control.TreeTableView.EditEvent&gt;" name="arg1" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="arg2" type="javafx.scene.control.TreeItem"/>
        <parameter genericType="S" name="arg3" type="java.lang.Object"/>
        <parameter genericType="S" name="arg4" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      <method abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      <property genericParam="" genericType="S" name="newValue" override="false" rawType="S" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      </property>
      <property genericParam="" genericType="S" name="oldValue" override="false" rawType="S" static="false">
        <getter abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="S" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="source" override="true" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeItem&lt;S&gt;" name="treeItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TreeTableView.ResizeFeatures&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TreeTableView.ResizeFeatures" package="javafx.scene.control" super="javafx.scene.control.ResizeFeaturesBase" superParam="javafx.scene.control.TreeItem&lt;S&gt;" superParamPrepend="javafx.scene.control.TreeItem&lt;S&gt;, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TreeTableView$ResizeFeatures" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0, javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg1, java.lang.Double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TreeTableColumn"/>
        <parameter genericType="java.lang.Double" name="arg2" type="java.lang.Double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase" static="false"/>
      <method abstract="false" access="public" final="false" name="getColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <property genericParam="" genericType="javafx.scene.control.TableColumnBase" name="column" override="true" rawType="javafx.scene.control.TableColumnBase" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableColumnBase" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="table" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TreeTableView.TreeTableViewFocusModel&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TreeTableView.TreeTableViewFocusModel" package="javafx.scene.control" super="javafx.scene.control.TableFocusModel" superParam="javafx.scene.control.TreeItem&lt;S&gt;, javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" superParamPrepend="javafx.scene.control.TreeItem&lt;S&gt;, javafx.scene.control.TreeTableColumn&lt;S, ?&gt;, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TreeTableView$TreeTableViewFocusModel" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="focus" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTablePosition&lt;S, ?&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" name="arg0" type="javafx.scene.control.TreeTablePosition"/>
      </method>
      <method abstract="false" access="public" final="false" name="focusAboveCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusBelowCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusLeftCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusNext" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusPrevious" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="focusRightCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="focusedCellProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeTablePosition&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusedCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="isFocused" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase" name="arg1" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="isFocused" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.control.TreeTableColumn&lt;S, ?&gt; arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, ?&gt;" name="arg1" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <property genericParam="S, ?" genericType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" name="focusedCell" override="false" rawType="javafx.scene.control.TreeTablePosition" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusedCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="TreeTableView.TreeTableViewSelectionModel&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="TreeTableView.TreeTableViewSelectionModel" package="javafx.scene.control" super="javafx.scene.control.TableSelectionModel" superParam="javafx.scene.control.TreeItem&lt;S&gt;" superParamPrepend="javafx.scene.control.TreeItem&lt;S&gt;, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.TreeTableView$TreeTableViewSelectionModel" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableView&lt;S&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="arg0" type="javafx.scene.control.TreeTableView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="focus" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getFocusedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getModelItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getModelItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.scene.control.TreeItem&lt;S&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="true" access="public" final="false" name="getSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTablePosition&lt;S, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="selectRange" override="true" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, javafx.scene.control.TableColumnBase&lt;javafx.scene.control.TreeItem&lt;S&gt;, ?&gt; arg1, int arg2, javafx.scene.control.TableColumnBase&lt;javafx.scene.control.TreeItem&lt;S&gt;, ?&gt; arg3" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;javafx.scene.control.TreeItem&lt;S&gt;, ?&gt;" name="arg1" type="javafx.scene.control.TableColumnBase"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="javafx.scene.control.TableColumnBase&lt;javafx.scene.control.TreeItem&lt;S&gt;, ?&gt;" name="arg3" type="javafx.scene.control.TableColumnBase"/>
      </method>
      <property genericParam="" genericType="int" name="focusedIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getFocusedIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TreeTablePosition&lt;S, ?&gt;" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTablePosition&lt;S, ?&gt;&gt;" name="selectedCells" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="true" access="public" final="false" name="getSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TreeTablePosition&lt;S, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="S" genericType="javafx.scene.control.TreeTableView&lt;S&gt;" name="treeTableView" override="false" rawType="javafx.scene.control.TreeTableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeTableView&lt;S&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TreeView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TreeView" package="javafx.scene.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.TreeView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="edit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="false" name="editAnyEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCancelEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editCommitEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="editStartEvent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="editingItemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="expandedItemCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fixedCellSizeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="focusModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditingItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getExpandedItemCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="int" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getTreeItemLevel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;?&gt; arg0" public="true" returnType="int" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;?&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCancelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditCommitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onEditStartProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onScrollToProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="refresh" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="rootProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="scrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectionModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="javafx.scene.control.FocusModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="javafx.scene.control.MultipleSelectionModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="showRootProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="editingItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getEditingItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="expandedItemCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getExpandedItemCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fixedCellSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFixedCellSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFixedCellSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="focusModel" override="false" rawType="javafx.scene.control.FocusModel" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" index="" name="setFocusModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" rawType="javafx.scene.control.FocusModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.FocusModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="javafx.scene.control.FocusModel"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="onEditCancel" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" index="" name="setOnEditCancel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="onEditCommit" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditCommit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" index="" name="setOnEditCommit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="onEditStart" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEditStart" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeView.EditEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" index="" name="setOnEditStart" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.TreeView.EditEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="onScrollTo" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="false" name="getOnScrollTo" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" index="" name="setOnScrollTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.control.ScrollToEvent&lt;java.lang.Integer&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="root" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" index="" name="setRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.TreeItem" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="selectionModel" override="false" rawType="javafx.scene.control.MultipleSelectionModel" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" index="" name="setSelectionModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" rawType="javafx.scene.control.MultipleSelectionModel" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.MultipleSelectionModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="javafx.scene.control.MultipleSelectionModel"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showRoot" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowRoot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TreeView.EditEvent&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TreeView.EditEvent" package="javafx.scene.control" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.TreeView$EditEvent" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.control.TreeView&lt;T&gt; arg0, javafx.event.EventType&lt;? extends javafx.scene.control.TreeView.EditEvent&gt; arg1, javafx.scene.control.TreeItem&lt;T&gt; arg2, T arg3, T arg4" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeView&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeView"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.control.TreeView.EditEvent&gt;" name="arg1" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg2" type="javafx.scene.control.TreeItem"/>
        <parameter genericType="T" name="arg3" type="java.lang.Object"/>
        <parameter genericType="T" name="arg4" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <property genericParam="" genericType="T" name="newValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="oldValue" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="source" override="true" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="treeItem" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getTreeItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckBoxListCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckBoxListCell" package="javafx.scene.control.cell" super="javafx.scene.control.ListCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxListCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxListCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxListCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedStateCallbackProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="selectedStateCallback" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" index="" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;T, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="CheckBoxTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="CheckBoxTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, boolean arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn&lt;S, java.lang.Boolean&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, java.lang.Boolean&gt;, javafx.scene.control.TableCell&lt;S, java.lang.Boolean&gt;&gt;" static="true">
        <parameter genericType="javafx.scene.control.TableColumn&lt;S, java.lang.Boolean&gt;" name="arg0" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedStateCallbackProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="selectedStateCallback" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" index="" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckBoxTreeCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckBoxTreeCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTreeCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTreeCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTreeCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedStateCallbackProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="selectedStateCallback" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" index="" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="CheckBoxTreeTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="CheckBoxTreeTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeTableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTreeTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTreeTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.CheckBoxTreeTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, boolean arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0, javafx.util.StringConverter&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn&lt;S, java.lang.Boolean&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, java.lang.Boolean&gt;, javafx.scene.control.TreeTableCell&lt;S, java.lang.Boolean&gt;&gt;" static="true">
        <parameter genericType="javafx.scene.control.TreeTableColumn&lt;S, java.lang.Boolean&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedStateCallbackProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="selectedStateCallback" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedStateCallback" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;" genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" index="" name="setSelectedStateCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, javafx.beans.value.ObservableValue&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ChoiceBoxListCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ChoiceBoxListCell" package="javafx.scene.control.cell" super="javafx.scene.control.ListCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxListCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxListCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxListCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxListCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxListCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="ChoiceBoxTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="ChoiceBoxTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ChoiceBoxTreeCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ChoiceBoxTreeCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="ChoiceBoxTreeTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="ChoiceBoxTreeTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeTableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ChoiceBoxTreeTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ComboBoxListCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ComboBoxListCell" package="javafx.scene.control.cell" super="javafx.scene.control.ListCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxListCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxListCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxListCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxListCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxListCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="comboBoxEditableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="comboBoxEditable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="ComboBoxTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="ComboBoxTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="comboBoxEditableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="comboBoxEditable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ComboBoxTreeCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ComboBoxTreeCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="comboBoxEditableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="comboBoxEditable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="ComboBoxTreeTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="ComboBoxTreeTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeTableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" static="false">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.control.cell.ComboBoxTreeTableCell" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="comboBoxEditableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, T[] arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0, javafx.collections.ObservableList&lt;T&gt; arg1" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg1" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="comboBoxEditable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isComboBoxEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setComboBoxEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="MapValueFactory&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="MapValueFactory" package="javafx.scene.control.cell" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.MapValueFactory" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn.CellDataFeatures&lt;java.util.Map, T&gt; arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="javafx.scene.control.TableColumn.CellDataFeatures&lt;java.util.Map, T&gt;" name="arg0" type="javafx.scene.control.TableColumn.CellDataFeatures"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="ProgressBarTableCell&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="ProgressBarTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TableCell" superParam="S, java.lang.Double" superParamPrepend="S, java.lang.Double, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.cell.ProgressBarTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, java.lang.Double&gt;, javafx.scene.control.TableCell&lt;S, java.lang.Double&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Double arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Double" name="arg0" type="java.lang.Double"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, " genericName="ProgressBarTreeTableCell&lt;S&gt;" genericParam="S" genericParamPrepend="S, " name="ProgressBarTreeTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeTableCell" superParam="S, java.lang.Double" superParamPrepend="S, java.lang.Double, ">
      <typeParameter name="S"/>
      <constructor access="public" name="javafx.scene.control.cell.ProgressBarTreeTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, java.lang.Double&gt;, javafx.scene.control.TreeTableCell&lt;S, java.lang.Double&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Double arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Double" name="arg0" type="java.lang.Double"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="PropertyValueFactory&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="PropertyValueFactory" package="javafx.scene.control.cell" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.PropertyValueFactory" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt; arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="javafx.scene.control.TableColumn.CellDataFeatures&lt;S, T&gt;" name="arg0" type="javafx.scene.control.TableColumn.CellDataFeatures"/>
      </method>
      <method abstract="false" access="public" final="true" name="getProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="property" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TextFieldListCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TextFieldListCell" package="javafx.scene.control.cell" super="javafx.scene.control.ListCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldListCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldListCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="forListView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;java.lang.String&gt;, javafx.scene.control.ListCell&lt;java.lang.String&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TextFieldTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TextFieldTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, T&gt;, javafx.scene.control.TableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TableColumn&lt;S, java.lang.String&gt;, javafx.scene.control.TableCell&lt;S, java.lang.String&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TextFieldTreeCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TextFieldTreeCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldTreeCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldTreeCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;T&gt;, javafx.scene.control.TreeCell&lt;T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeView&lt;java.lang.String&gt;, javafx.scene.control.TreeCell&lt;java.lang.String&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TextFieldTreeTableCell&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TextFieldTreeTableCell" package="javafx.scene.control.cell" super="javafx.scene.control.TreeTableCell" superParam="S, T" superParamPrepend="S, T, ">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldTreeTableCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.control.cell.TextFieldTreeTableCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancelEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, T&gt;, javafx.scene.control.TreeTableCell&lt;S, T&gt;&gt;" static="true">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="forTreeTableColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeTableColumn&lt;S, java.lang.String&gt;, javafx.scene.control.TreeTableCell&lt;S, java.lang.String&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="startEdit" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="updateItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, boolean arg1" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="S extends java.lang.Object, T extends java.lang.Object" genericDeclarationPrepend="S extends java.lang.Object, T extends java.lang.Object, " genericName="TreeItemPropertyValueFactory&lt;S, T&gt;" genericParam="S, T" genericParamPrepend="S, T, " name="TreeItemPropertyValueFactory" package="javafx.scene.control.cell" super="">
      <typeParameter name="S"/>
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.control.cell.TreeItemPropertyValueFactory" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt; arg0" public="true" returnType="javafx.beans.value.ObservableValue&lt;T&gt;" static="false">
        <parameter genericType="javafx.scene.control.TreeTableColumn.CellDataFeatures&lt;S, T&gt;" name="arg0" type="javafx.scene.control.TreeTableColumn.CellDataFeatures"/>
      </method>
      <method abstract="false" access="public" final="true" name="getProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="property" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Blend" genericParam="" genericParamPrepend="" name="Blend" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Blend" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Blend" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" static="false">
        <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.Blend" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.effect.BlendMode arg0, javafx.scene.effect.Effect arg1, javafx.scene.effect.Effect arg2" public="true" static="false">
        <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
        <parameter genericType="javafx.scene.effect.Effect" name="arg1" type="javafx.scene.effect.Effect"/>
        <parameter genericType="javafx.scene.effect.Effect" name="arg2" type="javafx.scene.effect.Effect"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="bottomInputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottomInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlendMode" static="false"/>
      <method abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="modeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.BlendMode&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="opacityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setBottomInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTopInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="topInputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="bottomInput" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setBottomInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.BlendMode" name="mode" override="false" rawType="javafx.scene.effect.BlendMode" static="false">
        <getter abstract="false" access="public" final="true" name="getMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlendMode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.BlendMode" index="" name="setMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlendMode arg0" public="true" rawType="javafx.scene.effect.BlendMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.BlendMode" name="arg0" type="javafx.scene.effect.BlendMode"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="opacity" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="topInput" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getTopInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setTopInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Bloom" genericParam="" genericParamPrepend="" name="Bloom" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Bloom" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Bloom" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getThreshold" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setThreshold" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="thresholdProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="threshold" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getThreshold" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setThreshold" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BoxBlur" genericParam="" genericParamPrepend="" name="BoxBlur" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.BoxBlur" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.BoxBlur" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, int arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getIterations" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="iterationsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setIterations" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="iterations" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getIterations" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setIterations" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ColorAdjust" genericParam="" genericParamPrepend="" name="ColorAdjust" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.ColorAdjust" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.ColorAdjust" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="brightnessProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="contrastProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBrightness" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getContrast" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getHue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getSaturation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="hueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="saturationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setBrightness" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContrast" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSaturation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="brightness" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBrightness" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBrightness" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="contrast" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getContrast" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setContrast" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="hue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="saturation" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSaturation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSaturation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ColorInput" genericParam="" genericParamPrepend="" name="ColorInput" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.ColorInput" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.ColorInput" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, javafx.scene.paint.Paint arg4" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg4" type="javafx.scene.paint.Paint"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPaint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="paintProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPaint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="paint" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getPaint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setPaint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DisplacementMap" genericParam="" genericParamPrepend="" name="DisplacementMap" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.DisplacementMap" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.DisplacementMap" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.FloatMap arg0" public="true" static="false">
        <parameter genericType="javafx.scene.effect.FloatMap" name="arg0" type="javafx.scene.effect.FloatMap"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.DisplacementMap" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.effect.FloatMap arg0, double arg1, double arg2, double arg3, double arg4" public="true" static="false">
        <parameter genericType="javafx.scene.effect.FloatMap" name="arg0" type="javafx.scene.effect.FloatMap"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getMapData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.FloatMap" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScaleX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScaleY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isWrap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="mapDataProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.FloatMap&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="offsetXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="offsetYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scaleXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="scaleYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMapData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.FloatMap arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.FloatMap" name="arg0" type="javafx.scene.effect.FloatMap"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScaleX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScaleY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWrap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="wrapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.FloatMap" name="mapData" override="false" rawType="javafx.scene.effect.FloatMap" static="false">
        <getter abstract="false" access="public" final="true" name="getMapData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.FloatMap" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.FloatMap" index="" name="setMapData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.FloatMap arg0" public="true" rawType="javafx.scene.effect.FloatMap" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.FloatMap" name="arg0" type="javafx.scene.effect.FloatMap"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="offsetX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="offsetY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scaleX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScaleX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScaleX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="scaleY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScaleY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setScaleY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="wrap" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isWrap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setWrap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DropShadow" genericParam="" genericParamPrepend="" name="DropShadow" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.DropShadow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.DropShadow" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.paint.Color arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.DropShadow" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, javafx.scene.paint.Color arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg3" type="javafx.scene.paint.Color"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.DropShadow" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.effect.BlurType arg0, javafx.scene.paint.Color arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="blurTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.BlurType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="colorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getBlurType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlurType" static="false"/>
      <method abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpread" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="offsetXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="offsetYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setBlurType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlurType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpread" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="spreadProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.BlurType" name="blurType" override="false" rawType="javafx.scene.effect.BlurType" static="false">
        <getter abstract="false" access="public" final="true" name="getBlurType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlurType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.BlurType" index="" name="setBlurType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlurType arg0" public="true" rawType="javafx.scene.effect.BlurType" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="offsetX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="offsetY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="spread" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpread" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpread" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Effect" genericParam="" genericParamPrepend="" name="Effect" package="javafx.scene.effect" super=""/>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="FloatMap" genericParam="" genericParamPrepend="" name="FloatMap" package="javafx.scene.effect" super="">
      <constructor access="public" name="javafx.scene.effect.FloatMap" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.FloatMap" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setSample" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, int arg2, float arg3" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="float" name="arg3" type="float"/>
      </method>
      <method abstract="false" access="public" final="false" name="setSamples" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, float arg2" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="float" name="arg2" type="float"/>
      </method>
      <method abstract="false" access="public" final="false" name="setSamples" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, float arg2, float arg3" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="float" name="arg2" type="float"/>
        <parameter genericType="float" name="arg3" type="float"/>
      </method>
      <method abstract="false" access="public" final="false" name="setSamples" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, float arg2, float arg3, float arg4" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="float" name="arg2" type="float"/>
        <parameter genericType="float" name="arg3" type="float"/>
        <parameter genericType="float" name="arg4" type="float"/>
      </method>
      <method abstract="false" access="public" final="false" name="setSamples" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="int arg0, int arg1, float arg2, float arg3, float arg4, float arg5" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="float" name="arg2" type="float"/>
        <parameter genericType="float" name="arg3" type="float"/>
        <parameter genericType="float" name="arg4" type="float"/>
        <parameter genericType="float" name="arg5" type="float"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <property genericParam="" genericType="int" name="height" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="width" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GaussianBlur" genericParam="" genericParamPrepend="" name="GaussianBlur" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.GaussianBlur" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.GaussianBlur" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Glow" genericParam="" genericParamPrepend="" name="Glow" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Glow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Glow" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getLevel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="levelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLevel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="level" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLevel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLevel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ImageInput" genericParam="" genericParamPrepend="" name="ImageInput" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.ImageInput" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.ImageInput" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.ImageInput" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setSource" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="sourceProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.image.Image" name="source" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.image.Image" index="" name="setSource" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="InnerShadow" genericParam="" genericParamPrepend="" name="InnerShadow" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.InnerShadow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.InnerShadow" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.paint.Color arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.InnerShadow" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, javafx.scene.paint.Color arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg3" type="javafx.scene.paint.Color"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.InnerShadow" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.effect.BlurType arg0, javafx.scene.paint.Color arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="blurTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.BlurType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="chokeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="colorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getBlurType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlurType" static="false"/>
      <method abstract="false" access="public" final="true" name="getChoke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="offsetXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="offsetYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setBlurType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlurType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setChoke" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.BlurType" name="blurType" override="false" rawType="javafx.scene.effect.BlurType" static="false">
        <getter abstract="false" access="public" final="true" name="getBlurType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlurType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.BlurType" index="" name="setBlurType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlurType arg0" public="true" rawType="javafx.scene.effect.BlurType" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="choke" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getChoke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setChoke" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="offsetX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="offsetY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Light" genericParam="" genericParamPrepend="" name="Light" package="javafx.scene.effect" super="">
      <method abstract="false" access="public" final="true" name="colorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Light.Distant" genericParam="" genericParamPrepend="" name="Light.Distant" package="javafx.scene.effect" super="javafx.scene.effect.Light" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Light$Distant" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Light$Distant" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.scene.paint.Color arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg2" type="javafx.scene.paint.Color"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="azimuthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="elevationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAzimuth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getElevation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setAzimuth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setElevation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="azimuth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAzimuth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAzimuth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="elevation" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getElevation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setElevation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Light.Point" genericParam="" genericParamPrepend="" name="Light.Point" package="javafx.scene.effect" super="javafx.scene.effect.Light" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Light$Point" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Light$Point" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, javafx.scene.paint.Color arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg3" type="javafx.scene.paint.Color"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="zProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Light.Spot" genericParam="" genericParamPrepend="" name="Light.Spot" package="javafx.scene.effect" super="javafx.scene.effect.Light.Point" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Light$Spot" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Light$Spot" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, javafx.scene.paint.Color arg4" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg4" type="javafx.scene.paint.Color"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getPointsAtX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPointsAtY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPointsAtZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpecularExponent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="pointsAtXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pointsAtYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pointsAtZProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setPointsAtX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPointsAtY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPointsAtZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpecularExponent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="specularExponentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="pointsAtX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPointsAtX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPointsAtX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pointsAtY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPointsAtY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPointsAtY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pointsAtZ" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPointsAtZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPointsAtZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="specularExponent" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpecularExponent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpecularExponent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Lighting" genericParam="" genericParamPrepend="" name="Lighting" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Lighting" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Lighting" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Light arg0" public="true" static="false">
        <parameter genericType="javafx.scene.effect.Light" name="arg0" type="javafx.scene.effect.Light"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="bumpInputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="contentInputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="diffuseConstantProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBumpInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getContentInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getDiffuseConstant" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Light" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpecularConstant" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpecularExponent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSurfaceScale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="lightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Light&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setBumpInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContentInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDiffuseConstant" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Light arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Light" name="arg0" type="javafx.scene.effect.Light"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpecularConstant" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpecularExponent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSurfaceScale" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="specularConstantProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="specularExponentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="surfaceScaleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="bumpInput" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getBumpInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setBumpInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="contentInput" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getContentInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setContentInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="diffuseConstant" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getDiffuseConstant" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setDiffuseConstant" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Light" name="light" override="false" rawType="javafx.scene.effect.Light" static="false">
        <getter abstract="false" access="public" final="true" name="getLight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Light" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Light" index="" name="setLight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Light arg0" public="true" rawType="javafx.scene.effect.Light" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Light" name="arg0" type="javafx.scene.effect.Light"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="specularConstant" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpecularConstant" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpecularConstant" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="specularExponent" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpecularExponent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpecularExponent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="surfaceScale" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSurfaceScale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSurfaceScale" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MotionBlur" genericParam="" genericParamPrepend="" name="MotionBlur" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.MotionBlur" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.MotionBlur" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="angleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="angle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PerspectiveTransform" genericParam="" genericParamPrepend="" name="PerspectiveTransform" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.PerspectiveTransform" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.PerspectiveTransform" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getLlx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLly" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLrx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLry" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getUlx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getUly" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getUrx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getUry" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="llxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="llyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="lrxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="lryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLlx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLly" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLrx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLry" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUlx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUly" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUrx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUry" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="ulxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="ulyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="urxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="uryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="llx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLlx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLlx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lly" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLly" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLly" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lrx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLrx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLrx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lry" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLry" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLry" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="ulx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getUlx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setUlx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="uly" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getUly" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setUly" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="urx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getUrx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setUrx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="ury" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getUry" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setUry" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Reflection" genericParam="" genericParamPrepend="" name="Reflection" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Reflection" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Reflection" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="bottomOpacityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fractionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottomOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFraction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setBottomOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFraction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTopOffset" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTopOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="topOffsetProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="topOpacityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="bottomOpacity" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBottomOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="fraction" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFraction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFraction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="topOffset" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTopOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTopOffset" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="topOpacity" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTopOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTopOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SepiaTone" genericParam="" genericParamPrepend="" name="SepiaTone" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.SepiaTone" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.SepiaTone" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getLevel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="levelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLevel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="level" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLevel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLevel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Shadow" genericParam="" genericParamPrepend="" name="Shadow" package="javafx.scene.effect" super="javafx.scene.effect.Effect" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.effect.Shadow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.effect.Shadow" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.paint.Color arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
      </constructor>
      <constructor access="public" name="javafx.scene.effect.Shadow" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.effect.BlurType arg0, javafx.scene.paint.Color arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="blurTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.BlurType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="colorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getBlurType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlurType" static="false"/>
      <method abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="inputProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.effect.Effect&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setBlurType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlurType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.effect.BlurType" name="blurType" override="false" rawType="javafx.scene.effect.BlurType" static="false">
        <getter abstract="false" access="public" final="true" name="getBlurType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.BlurType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.BlurType" index="" name="setBlurType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.BlurType arg0" public="true" rawType="javafx.scene.effect.BlurType" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.BlurType" name="arg0" type="javafx.scene.effect.BlurType"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.effect.Effect" name="input" override="false" rawType="javafx.scene.effect.Effect" static="false">
        <getter abstract="false" access="public" final="true" name="getInput" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.effect.Effect" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.effect.Effect" index="" name="setInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.effect.Effect arg0" public="true" rawType="javafx.scene.effect.Effect" returnType="void" static="false">
          <parameter genericType="javafx.scene.effect.Effect" name="arg0" type="javafx.scene.effect.Effect"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Image" genericParam="" genericParamPrepend="" name="Image" package="javafx.scene.image" super="">
      <constructor access="public" name="javafx.scene.image.Image" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.InputStream arg0" public="true" static="false">
        <parameter genericType="java.io.InputStream" name="arg0" type="java.io.InputStream"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.Image" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.Image" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, boolean arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.Image" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="java.io.InputStream arg0, double arg1, double arg2, boolean arg3, boolean arg4" public="true" static="false">
        <parameter genericType="java.io.InputStream" name="arg0" type="java.io.InputStream"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.Image" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="java.lang.String arg0, double arg1, double arg2, boolean arg3, boolean arg4" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.Image" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="java.lang.String arg0, double arg1, double arg2, boolean arg3, boolean arg4, boolean arg5" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="cancel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="errorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="exceptionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;java.lang.Exception&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getException" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Exception" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPixelReader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelReader" static="false"/>
      <method abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRequestedHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRequestedWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isBackgroundLoading" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isPreserveRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="progressProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="backgroundLoading" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isBackgroundLoading" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="error" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Exception" name="exception" override="false" rawType="java.lang.Exception" static="false">
        <getter abstract="false" access="public" final="true" name="getException" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Exception" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.PixelReader" name="pixelReader" override="false" rawType="javafx.scene.image.PixelReader" static="false">
        <getter abstract="false" access="public" final="true" name="getPixelReader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelReader" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="preserveRatio" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPreserveRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="progress" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="requestedHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRequestedHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="requestedWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRequestedWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="smooth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ImageView" genericParam="" genericParamPrepend="" name="ImageView" package="javafx.scene.image" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.image.ImageView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.image.ImageView" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.ImageView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </constructor>
      <field access="public" final="true" name="SMOOTH_DEFAULT" public="true" static="true" type="boolean"/>
      <method abstract="false" access="public" final="true" name="fitHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fitWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFitHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFitWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getViewport" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="imageProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isPreserveRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="preserveRatioProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setFitHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFitWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setImage" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPreserveRatio" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSmooth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setViewport" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="smoothProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="viewportProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Rectangle2D&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fitHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFitHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFitHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="fitWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFitWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFitWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.image.Image" index="" name="setImage" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="preserveRatio" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPreserveRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setPreserveRatio" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="smooth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSmooth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Rectangle2D" name="viewport" override="false" rawType="javafx.geometry.Rectangle2D" static="false">
        <getter abstract="false" access="public" final="true" name="getViewport" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Rectangle2D" index="" name="setViewport" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" rawType="javafx.geometry.Rectangle2D" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.nio.Buffer" genericDeclarationPrepend="T extends java.nio.Buffer, " genericName="PixelFormat&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="PixelFormat" package="javafx.scene.image" super="">
      <typeParameter name="T"/>
      <method abstract="false" access="public" final="false" name="createByteIndexedInstance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int[] arg0" public="true" returnType="javafx.scene.image.PixelFormat&lt;java.nio.ByteBuffer&gt;" static="true">
        <parameter genericType="int[]" name="arg0" type="int[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="createByteIndexedPremultipliedInstance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int[] arg0" public="true" returnType="javafx.scene.image.PixelFormat&lt;java.nio.ByteBuffer&gt;" static="true">
        <parameter genericType="int[]" name="arg0" type="int[]"/>
      </method>
      <method abstract="true" access="public" final="false" name="getArgb" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="T arg0, int arg1, int arg2, int arg3" public="true" returnType="int" static="false">
        <parameter genericType="T" name="arg0" type="java.nio.Buffer"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getByteBgraInstance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritablePixelFormat&lt;java.nio.ByteBuffer&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getByteBgraPreInstance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritablePixelFormat&lt;java.nio.ByteBuffer&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getByteRgbInstance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelFormat&lt;java.nio.ByteBuffer&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getIntArgbInstance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritablePixelFormat&lt;java.nio.IntBuffer&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getIntArgbPreInstance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritablePixelFormat&lt;java.nio.IntBuffer&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelFormat.Type" static="false"/>
      <method abstract="true" access="public" final="false" name="isPremultiplied" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="true" access="public" final="false" name="isWritable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="premultiplied" override="false" rawType="boolean" static="false">
        <getter abstract="true" access="public" final="false" name="isPremultiplied" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.PixelFormat.Type" name="type" override="false" rawType="javafx.scene.image.PixelFormat.Type" static="false">
        <getter abstract="false" access="public" final="false" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelFormat.Type" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="writable" override="false" rawType="boolean" static="false">
        <getter abstract="true" access="public" final="false" name="isWritable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WritableImage" genericParam="" genericParamPrepend="" name="WritableImage" package="javafx.scene.image" super="javafx.scene.image.Image" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.image.WritableImage" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.WritableImage" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.image.PixelReader arg0, int arg1, int arg2" public="true" static="false">
        <parameter genericType="javafx.scene.image.PixelReader" name="arg0" type="javafx.scene.image.PixelReader"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.image.WritableImage" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.image.PixelReader arg0, int arg1, int arg2, int arg3, int arg4" public="true" static="false">
        <parameter genericType="javafx.scene.image.PixelReader" name="arg0" type="javafx.scene.image.PixelReader"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getPixelWriter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelWriter" static="false"/>
      <property genericParam="" genericType="javafx.scene.image.PixelWriter" name="pixelWriter" override="false" rawType="javafx.scene.image.PixelWriter" static="false">
        <getter abstract="false" access="public" final="true" name="getPixelWriter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.PixelWriter" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.nio.Buffer" genericDeclarationPrepend="T extends java.nio.Buffer, " genericName="WritablePixelFormat&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="WritablePixelFormat" package="javafx.scene.image" super="javafx.scene.image.PixelFormat" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <method abstract="false" access="public" final="false" name="isWritable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="true" access="public" final="false" name="setArgb" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="T arg0, int arg1, int arg2, int arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="T" name="arg0" type="java.nio.Buffer"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <property genericParam="" genericType="boolean" name="writable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isWritable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Clipboard" genericParam="" genericParamPrepend="" name="Clipboard" package="javafx.scene.input" super="">
      <method abstract="false" access="public" final="true" name="clear" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.DataFormat arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.input.DataFormat" name="arg0" type="javafx.scene.input.DataFormat"/>
      </method>
      <method abstract="false" access="public" final="true" name="getContentTypes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;javafx.scene.input.DataFormat&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFiles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.io.File&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHtml" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getRtf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getSystemClipboard" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.Clipboard" static="true"/>
      <method abstract="false" access="public" final="true" name="getUrl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="hasContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.DataFormat arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.input.DataFormat" name="arg0" type="javafx.scene.input.DataFormat"/>
      </method>
      <method abstract="false" access="public" final="true" name="hasFiles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasHtml" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasRtf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasUrl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Map&lt;javafx.scene.input.DataFormat, java.lang.Object&gt; arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.util.Map&lt;javafx.scene.input.DataFormat, java.lang.Object&gt;" name="arg0" type="java.util.Map"/>
      </method>
      <property genericParam="javafx.scene.input.DataFormat, java.lang.Object" genericType="java.util.Map&lt;javafx.scene.input.DataFormat, java.lang.Object&gt;" name="content" override="false" rawType="java.util.Map" static="false">
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.input.DataFormat, java.lang.Object" genericType="java.util.Map&lt;javafx.scene.input.DataFormat, java.lang.Object&gt;" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Map&lt;javafx.scene.input.DataFormat, java.lang.Object&gt; arg0" public="true" rawType="java.util.Map" returnType="boolean" static="false">
          <parameter genericType="java.util.Map&lt;javafx.scene.input.DataFormat, java.lang.Object&gt;" name="arg0" type="java.util.Map"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.input.DataFormat" genericType="java.util.Set&lt;javafx.scene.input.DataFormat&gt;" name="contentTypes" override="false" rawType="java.util.Set" static="false">
        <getter abstract="false" access="public" final="true" name="getContentTypes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;javafx.scene.input.DataFormat&gt;" static="false"/>
      </property>
      <property genericParam="java.io.File" genericType="java.util.List&lt;java.io.File&gt;" name="files" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getFiles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.io.File&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="html" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getHtml" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="rtf" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getRtf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="string" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="url" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getUrl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ClipboardContent" genericParam="" genericParamPrepend="" name="ClipboardContent" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.ClipboardContent" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getFiles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.io.File&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHtml" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getRtf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getUrl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="hasFiles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasHtml" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasRtf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasUrl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="putFiles" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;java.io.File&gt; arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.util.List&lt;java.io.File&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="true" name="putFilesByPath" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;java.lang.String&gt; arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.util.List&lt;java.lang.String&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="true" name="putHtml" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="putImage" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="putRtf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="putString" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="putUrl" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="java.io.File" genericType="java.util.List&lt;java.io.File&gt;" name="files" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getFiles" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.io.File&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="html" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getHtml" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="rtf" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getRtf" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="string" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getString" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="url" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getUrl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ContextMenuEvent" genericParam="" genericParamPrepend="" name="ContextMenuEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.ContextMenuEvent" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, javafx.scene.input.PickResult arg6" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg6" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.ContextMenuEvent" parameterCount="9" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, boolean arg7, javafx.scene.input.PickResult arg8" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg8" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="CONTEXT_MENU_REQUESTED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.ContextMenuEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="isKeyboardTrigger" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.input.ContextMenuEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.ContextMenuEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="keyboardTrigger" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isKeyboardTrigger" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.PickResult" name="pickResult" override="false" rawType="javafx.scene.input.PickResult" static="false">
        <getter abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DataFormat" genericParam="" genericParamPrepend="" name="DataFormat" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.DataFormat" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String[] arg0" public="true" static="false">
        <parameter genericType="java.lang.String[]" name="arg0" type="java.lang.String[]"/>
      </constructor>
      <field access="public" final="true" name="FILES" public="true" static="true" type="javafx.scene.input.DataFormat"/>
      <field access="public" final="true" name="HTML" public="true" static="true" type="javafx.scene.input.DataFormat"/>
      <field access="public" final="true" name="IMAGE" public="true" static="true" type="javafx.scene.input.DataFormat"/>
      <field access="public" final="true" name="PLAIN_TEXT" public="true" static="true" type="javafx.scene.input.DataFormat"/>
      <field access="public" final="true" name="RTF" public="true" static="true" type="javafx.scene.input.DataFormat"/>
      <field access="public" final="true" name="URL" public="true" static="true" type="javafx.scene.input.DataFormat"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getIdentifiers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="lookupMimeType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.input.DataFormat" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="java.lang.String" genericType="java.util.Set&lt;java.lang.String&gt;" name="identifiers" override="false" rawType="java.util.Set" static="false">
        <getter abstract="false" access="public" final="true" name="getIdentifiers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;java.lang.String&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DragEvent" genericParam="" genericParamPrepend="" name="DragEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.DragEvent" parameterCount="10" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt; arg0, javafx.scene.input.Dragboard arg1, double arg2, double arg3, double arg4, double arg5, javafx.scene.input.TransferMode arg6, java.lang.Object arg7, java.lang.Object arg8, javafx.scene.input.PickResult arg9" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.input.Dragboard" name="arg1" type="javafx.scene.input.Dragboard"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="javafx.scene.input.TransferMode" name="arg6" type="javafx.scene.input.TransferMode"/>
        <parameter genericType="java.lang.Object" name="arg7" type="java.lang.Object"/>
        <parameter genericType="java.lang.Object" name="arg8" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg9" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.DragEvent" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt; arg2, javafx.scene.input.Dragboard arg3, double arg4, double arg5, double arg6, double arg7, javafx.scene.input.TransferMode arg8, java.lang.Object arg9, java.lang.Object arg10, javafx.scene.input.PickResult arg11" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.input.Dragboard" name="arg3" type="javafx.scene.input.Dragboard"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="javafx.scene.input.TransferMode" name="arg8" type="javafx.scene.input.TransferMode"/>
        <parameter genericType="java.lang.Object" name="arg9" type="java.lang.Object"/>
        <parameter genericType="java.lang.Object" name="arg10" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg11" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_DONE" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_DROPPED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_ENTERED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_ENTERED_TARGET" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_EXITED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_EXITED_TARGET" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_OVER" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="acceptTransferModes" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.TransferMode[] arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.TransferMode[]" name="arg0" type="javafx.scene.input.TransferMode[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.DragEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, java.lang.Object arg2, java.lang.Object arg3, javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt; arg4" public="true" returnType="javafx.scene.input.DragEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="java.lang.Object" name="arg2" type="java.lang.Object"/>
        <parameter genericType="java.lang.Object" name="arg3" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" name="arg4" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt; arg2" public="true" returnType="javafx.scene.input.DragEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAcceptedTransferMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TransferMode" static="false"/>
      <method abstract="false" access="public" final="true" name="getAcceptingObject" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getDragboard" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.Dragboard" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getGestureSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getGestureTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTransferMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TransferMode" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isAccepted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isDropCompleted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="setDropCompleted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="accepted" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAccepted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.TransferMode" name="acceptedTransferMode" override="false" rawType="javafx.scene.input.TransferMode" static="false">
        <getter abstract="false" access="public" final="true" name="getAcceptedTransferMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TransferMode" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="acceptingObject" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="true" name="getAcceptingObject" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.Dragboard" name="dragboard" override="false" rawType="javafx.scene.input.Dragboard" static="false">
        <getter abstract="false" access="public" final="true" name="getDragboard" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.Dragboard" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="dropCompleted" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isDropCompleted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setDropCompleted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.input.DragEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.DragEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="gestureSource" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="true" name="getGestureSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="gestureTarget" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="true" name="getGestureTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.PickResult" name="pickResult" override="false" rawType="javafx.scene.input.PickResult" static="false">
        <getter abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.TransferMode" name="transferMode" override="false" rawType="javafx.scene.input.TransferMode" static="false">
        <getter abstract="false" access="public" final="true" name="getTransferMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TransferMode" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Dragboard" genericParam="" genericParamPrepend="" name="Dragboard" package="javafx.scene.input" super="javafx.scene.input.Clipboard" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="false" name="getDragView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="false" name="getDragViewOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getDragViewOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTransferModes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;javafx.scene.input.TransferMode&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="setDragView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="false" name="setDragView" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setDragViewOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setDragViewOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="javafx.scene.image.Image" name="dragView" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="false" name="getDragView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.image.Image" index="" name="setDragView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="dragViewOffsetX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getDragViewOffsetX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setDragViewOffsetX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="dragViewOffsetY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getDragViewOffsetY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setDragViewOffsetY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.input.TransferMode" genericType="java.util.Set&lt;javafx.scene.input.TransferMode&gt;" name="transferModes" override="false" rawType="java.util.Set" static="false">
        <getter abstract="false" access="public" final="true" name="getTransferModes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;javafx.scene.input.TransferMode&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GestureEvent" genericParam="" genericParamPrepend="" name="GestureEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.GestureEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;? extends javafx.scene.input.GestureEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDirect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isInertia" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShortcutDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="boolean" name="altDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="controlDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="direct" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDirect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="? extends javafx.scene.input.GestureEvent" genericType="javafx.event.EventType&lt;? extends javafx.scene.input.GestureEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;? extends javafx.scene.input.GestureEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="inertia" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isInertia" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="metaDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.PickResult" name="pickResult" override="false" rawType="javafx.scene.input.PickResult" static="false">
        <getter abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shiftDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shortcutDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShortcutDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="InputEvent" genericParam="" genericParamPrepend="" name="InputEvent" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.InputEvent" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt;" name="arg0" type="javafx.event.EventType"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.InputEvent" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt; arg2" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt;" static="false"/>
      <property genericParam="? extends javafx.scene.input.InputEvent" genericType="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="InputMethodEvent" genericParam="" genericParamPrepend="" name="InputMethodEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.InputMethodEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt; arg0, java.util.List&lt;javafx.scene.input.InputMethodTextRun&gt; arg1, java.lang.String arg2, int arg3" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="java.util.List&lt;javafx.scene.input.InputMethodTextRun&gt;" name="arg1" type="java.util.List"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
        <parameter genericType="int" name="arg3" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.InputMethodEvent" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt; arg2, java.util.List&lt;javafx.scene.input.InputMethodTextRun&gt; arg3, java.lang.String arg4, int arg5" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="java.util.List&lt;javafx.scene.input.InputMethodTextRun&gt;" name="arg3" type="java.util.List"/>
        <parameter genericType="java.lang.String" name="arg4" type="java.lang.String"/>
        <parameter genericType="int" name="arg5" type="int"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="INPUT_METHOD_TEXT_CHANGED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.InputMethodEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getCommitted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getComposed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.input.InputMethodTextRun&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="int" name="caretPosition" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getCaretPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="committed" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getCommitted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.InputMethodTextRun" genericType="javafx.collections.ObservableList&lt;javafx.scene.input.InputMethodTextRun&gt;" name="composed" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getComposed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.input.InputMethodTextRun&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.InputMethodEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.InputMethodEvent&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="InputMethodTextRun" genericParam="" genericParamPrepend="" name="InputMethodTextRun" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.InputMethodTextRun" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.input.InputMethodHighlight arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.input.InputMethodHighlight" name="arg1" type="javafx.scene.input.InputMethodHighlight"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getHighlight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.InputMethodHighlight" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.input.InputMethodHighlight" name="highlight" override="false" rawType="javafx.scene.input.InputMethodHighlight" static="false">
        <getter abstract="false" access="public" final="true" name="getHighlight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.InputMethodHighlight" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="KeyCharacterCombination" genericParam="" genericParamPrepend="" name="KeyCharacterCombination" package="javafx.scene.input" super="javafx.scene.input.KeyCombination" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.KeyCharacterCombination" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.input.KeyCombination.Modifier[] arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.input.KeyCombination.Modifier[]" name="arg1" type="javafx.scene.input.KeyCombination.Modifier[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.KeyCharacterCombination" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="java.lang.String arg0, javafx.scene.input.KeyCombination.ModifierValue arg1, javafx.scene.input.KeyCombination.ModifierValue arg2, javafx.scene.input.KeyCombination.ModifierValue arg3, javafx.scene.input.KeyCombination.ModifierValue arg4, javafx.scene.input.KeyCombination.ModifierValue arg5" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg1" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg2" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg3" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg4" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg5" type="javafx.scene.input.KeyCombination.ModifierValue"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCharacter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getDisplayText" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getName" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="match" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyEvent arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.input.KeyEvent" name="arg0" type="javafx.scene.input.KeyEvent"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="character" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getCharacter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="displayText" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getDisplayText" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getName" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="KeyCodeCombination" genericParam="" genericParamPrepend="" name="KeyCodeCombination" package="javafx.scene.input" super="javafx.scene.input.KeyCombination" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.KeyCodeCombination" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.input.KeyCode arg0, javafx.scene.input.KeyCombination.Modifier[] arg1" public="true" static="false">
        <parameter genericType="javafx.scene.input.KeyCode" name="arg0" type="javafx.scene.input.KeyCode"/>
        <parameter genericType="javafx.scene.input.KeyCombination.Modifier[]" name="arg1" type="javafx.scene.input.KeyCombination.Modifier[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.KeyCodeCombination" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.input.KeyCode arg0, javafx.scene.input.KeyCombination.ModifierValue arg1, javafx.scene.input.KeyCombination.ModifierValue arg2, javafx.scene.input.KeyCombination.ModifierValue arg3, javafx.scene.input.KeyCombination.ModifierValue arg4, javafx.scene.input.KeyCombination.ModifierValue arg5" public="true" static="false">
        <parameter genericType="javafx.scene.input.KeyCode" name="arg0" type="javafx.scene.input.KeyCode"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg1" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg2" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg3" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg4" type="javafx.scene.input.KeyCombination.ModifierValue"/>
        <parameter genericType="javafx.scene.input.KeyCombination.ModifierValue" name="arg5" type="javafx.scene.input.KeyCombination.ModifierValue"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCode" static="false"/>
      <method abstract="false" access="public" final="false" name="getDisplayText" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getName" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="match" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyEvent arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.input.KeyEvent" name="arg0" type="javafx.scene.input.KeyEvent"/>
      </method>
      <property genericParam="" genericType="javafx.scene.input.KeyCode" name="code" override="false" rawType="javafx.scene.input.KeyCode" static="false">
        <getter abstract="false" access="public" final="true" name="getCode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCode" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="displayText" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getDisplayText" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getName" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="KeyCombination" genericParam="" genericParamPrepend="" name="KeyCombination" package="javafx.scene.input" super="">
      <field access="public" final="true" name="ALT_ANY" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="ALT_DOWN" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="CONTROL_ANY" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="CONTROL_DOWN" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="META_ANY" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="META_DOWN" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="NO_MATCH" public="true" static="true" type="javafx.scene.input.KeyCombination"/>
      <field access="public" final="true" name="SHIFT_ANY" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="SHIFT_DOWN" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="SHORTCUT_ANY" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <field access="public" final="true" name="SHORTCUT_DOWN" public="true" static="true" type="javafx.scene.input.KeyCombination.Modifier"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAlt" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      <method abstract="false" access="public" final="true" name="getControl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      <method abstract="false" access="public" final="false" name="getDisplayText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getMeta" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      <method abstract="false" access="public" final="false" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getShift" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      <method abstract="false" access="public" final="true" name="getShortcut" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="keyCombination" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.input.KeyCombination" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyEvent arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.input.KeyEvent" name="arg0" type="javafx.scene.input.KeyEvent"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="valueOf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.input.KeyCombination" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination.ModifierValue" name="alt" override="false" rawType="javafx.scene.input.KeyCombination.ModifierValue" static="false">
        <getter abstract="false" access="public" final="true" name="getAlt" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination.ModifierValue" name="control" override="false" rawType="javafx.scene.input.KeyCombination.ModifierValue" static="false">
        <getter abstract="false" access="public" final="true" name="getControl" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="displayText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getDisplayText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination.ModifierValue" name="meta" override="false" rawType="javafx.scene.input.KeyCombination.ModifierValue" static="false">
        <getter abstract="false" access="public" final="true" name="getMeta" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination.ModifierValue" name="shift" override="false" rawType="javafx.scene.input.KeyCombination.ModifierValue" static="false">
        <getter abstract="false" access="public" final="true" name="getShift" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination.ModifierValue" name="shortcut" override="false" rawType="javafx.scene.input.KeyCombination.ModifierValue" static="false">
        <getter abstract="false" access="public" final="true" name="getShortcut" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="KeyCombination.Modifier" genericParam="" genericParamPrepend="" name="KeyCombination.Modifier" package="javafx.scene.input" super="">
      <method abstract="false" access="public" final="false" name="getKey" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCode" static="false"/>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.input.KeyCode" name="key" override="false" rawType="javafx.scene.input.KeyCode" static="false">
        <getter abstract="false" access="public" final="false" name="getKey" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCode" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination.ModifierValue" name="value" override="false" rawType="javafx.scene.input.KeyCombination.ModifierValue" static="false">
        <getter abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination.ModifierValue" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="KeyEvent" genericParam="" genericParamPrepend="" name="KeyEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.KeyEvent" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt; arg0, java.lang.String arg1, java.lang.String arg2, javafx.scene.input.KeyCode arg3, boolean arg4, boolean arg5, boolean arg6, boolean arg7" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
        <parameter genericType="javafx.scene.input.KeyCode" name="arg3" type="javafx.scene.input.KeyCode"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.KeyEvent" parameterCount="10" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt; arg2, java.lang.String arg3, java.lang.String arg4, javafx.scene.input.KeyCode arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="java.lang.String" name="arg3" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg4" type="java.lang.String"/>
        <parameter genericType="javafx.scene.input.KeyCode" name="arg5" type="javafx.scene.input.KeyCode"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="CHAR_UNDEFINED" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="KEY_PRESSED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="KEY_RELEASED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="KEY_TYPED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.KeyEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt; arg2" public="true" returnType="javafx.scene.input.KeyEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCharacter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getCode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCode" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShortcutDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="boolean" name="altDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="character" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getCharacter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCode" name="code" override="false" rawType="javafx.scene.input.KeyCode" static="false">
        <getter abstract="false" access="public" final="true" name="getCode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCode" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="controlDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.KeyEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.KeyEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="metaDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shiftDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shortcutDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShortcutDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Mnemonic" genericParam="" genericParamPrepend="" name="Mnemonic" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.Mnemonic" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.input.KeyCombination arg1" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.input.KeyCombination" name="arg1" type="javafx.scene.input.KeyCombination"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getKeyCombination" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
      <method abstract="false" access="public" final="false" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="setKeyCombination" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
      </method>
      <method abstract="false" access="public" final="false" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination" name="keyCombination" override="false" rawType="javafx.scene.input.KeyCombination" static="false">
        <getter abstract="false" access="public" final="false" name="getKeyCombination" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.input.KeyCombination" index="" name="setKeyCombination" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" rawType="javafx.scene.input.KeyCombination" returnType="void" static="false">
          <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="node" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="false" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.Node" index="" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MouseDragEvent" genericParam="" genericParamPrepend="" name="MouseDragEvent" package="javafx.scene.input" super="javafx.scene.input.MouseEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.MouseDragEvent" parameterCount="18" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, javafx.scene.input.MouseButton arg5, int arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, boolean arg13, boolean arg14, boolean arg15, javafx.scene.input.PickResult arg16, java.lang.Object arg17" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="javafx.scene.input.MouseButton" name="arg5" type="javafx.scene.input.MouseButton"/>
        <parameter genericType="int" name="arg6" type="int"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="boolean" name="arg13" type="boolean"/>
        <parameter genericType="boolean" name="arg14" type="boolean"/>
        <parameter genericType="boolean" name="arg15" type="boolean"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg16" type="javafx.scene.input.PickResult"/>
        <parameter genericType="java.lang.Object" name="arg17" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.MouseDragEvent" parameterCount="20" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, javafx.scene.input.MouseButton arg7, int arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, boolean arg13, boolean arg14, boolean arg15, boolean arg16, boolean arg17, javafx.scene.input.PickResult arg18, java.lang.Object arg19" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="javafx.scene.input.MouseButton" name="arg7" type="javafx.scene.input.MouseButton"/>
        <parameter genericType="int" name="arg8" type="int"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="boolean" name="arg13" type="boolean"/>
        <parameter genericType="boolean" name="arg14" type="boolean"/>
        <parameter genericType="boolean" name="arg15" type="boolean"/>
        <parameter genericType="boolean" name="arg16" type="boolean"/>
        <parameter genericType="boolean" name="arg17" type="boolean"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg18" type="javafx.scene.input.PickResult"/>
        <parameter genericType="java.lang.Object" name="arg19" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAG_ENTERED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAG_ENTERED_TARGET" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAG_EXITED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAG_EXITED_TARGET" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAG_OVER" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAG_RELEASED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.MouseDragEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt; arg2" public="true" returnType="javafx.scene.input.MouseDragEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.MouseEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType arg2" public="true" returnType="javafx.scene.input.MouseEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getGestureSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.input.MouseDragEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="gestureSource" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getGestureSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MouseEvent" genericParam="" genericParamPrepend="" name="MouseEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.MouseEvent" parameterCount="18" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17" parametersDeclaration="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, javafx.scene.input.MouseButton arg5, int arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, boolean arg13, boolean arg14, boolean arg15, boolean arg16, javafx.scene.input.PickResult arg17" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="javafx.scene.input.MouseButton" name="arg5" type="javafx.scene.input.MouseButton"/>
        <parameter genericType="int" name="arg6" type="int"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="boolean" name="arg13" type="boolean"/>
        <parameter genericType="boolean" name="arg14" type="boolean"/>
        <parameter genericType="boolean" name="arg15" type="boolean"/>
        <parameter genericType="boolean" name="arg16" type="boolean"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg17" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.MouseEvent" parameterCount="20" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, javafx.scene.input.MouseButton arg7, int arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, boolean arg13, boolean arg14, boolean arg15, boolean arg16, boolean arg17, boolean arg18, javafx.scene.input.PickResult arg19" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="javafx.scene.input.MouseButton" name="arg7" type="javafx.scene.input.MouseButton"/>
        <parameter genericType="int" name="arg8" type="int"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="boolean" name="arg13" type="boolean"/>
        <parameter genericType="boolean" name="arg14" type="boolean"/>
        <parameter genericType="boolean" name="arg15" type="boolean"/>
        <parameter genericType="boolean" name="arg16" type="boolean"/>
        <parameter genericType="boolean" name="arg17" type="boolean"/>
        <parameter genericType="boolean" name="arg18" type="boolean"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg19" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="DRAG_DETECTED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_CLICKED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_DRAGGED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_ENTERED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_ENTERED_TARGET" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_EXITED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_EXITED_TARGET" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_MOVED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_PRESSED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="MOUSE_RELEASED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.MouseEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt; arg2" public="true" returnType="javafx.scene.input.MouseEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyForMouseDragEvent" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.input.MouseEvent arg0, java.lang.Object arg1, javafx.event.EventTarget arg2, javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt; arg3, java.lang.Object arg4, javafx.scene.input.PickResult arg5" public="true" returnType="javafx.scene.input.MouseDragEvent" static="true">
        <parameter genericType="javafx.scene.input.MouseEvent" name="arg0" type="javafx.scene.input.MouseEvent"/>
        <parameter genericType="java.lang.Object" name="arg1" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg2" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.MouseDragEvent&gt;" name="arg3" type="javafx.event.EventType"/>
        <parameter genericType="java.lang.Object" name="arg4" type="java.lang.Object"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg5" type="javafx.scene.input.PickResult"/>
      </method>
      <method abstract="false" access="public" final="true" name="getButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.MouseButton" static="false"/>
      <method abstract="false" access="public" final="true" name="getClickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isDragDetect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMiddleButtonDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isPopupTrigger" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isPrimaryButtonDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSecondaryButtonDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShortcutDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isStillSincePress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isSynthesized" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="setDragDetect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="boolean" name="altDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.MouseButton" name="button" override="false" rawType="javafx.scene.input.MouseButton" static="false">
        <getter abstract="false" access="public" final="true" name="getButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.MouseButton" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="clickCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getClickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="controlDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="dragDetect" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isDragDetect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setDragDetect" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="? extends javafx.scene.input.MouseEvent" genericType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;? extends javafx.scene.input.MouseEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="metaDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="middleButtonDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMiddleButtonDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.PickResult" name="pickResult" override="false" rawType="javafx.scene.input.PickResult" static="false">
        <getter abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="popupTrigger" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPopupTrigger" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="primaryButtonDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPrimaryButtonDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="secondaryButtonDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSecondaryButtonDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shiftDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shortcutDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShortcutDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="stillSincePress" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isStillSincePress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="synthesized" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isSynthesized" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PickResult" genericParam="" genericParamPrepend="" name="PickResult" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.PickResult" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.event.EventTarget arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.event.EventTarget" name="arg0" type="javafx.event.EventTarget"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.PickResult" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Point3D arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg1" type="javafx.geometry.Point3D"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.PickResult" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Point3D arg1, double arg2, int arg3, javafx.geometry.Point2D arg4" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg1" type="javafx.geometry.Point3D"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg4" type="javafx.geometry.Point2D"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.PickResult" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Point3D arg1, double arg2, int arg3, javafx.geometry.Point3D arg4, javafx.geometry.Point2D arg5" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg1" type="javafx.geometry.Point3D"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg4" type="javafx.geometry.Point3D"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg5" type="javafx.geometry.Point2D"/>
      </constructor>
      <field access="public" final="true" name="FACE_UNDEFINED" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="true" name="getIntersectedDistance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getIntersectedFace" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getIntersectedNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getIntersectedNormal" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
      <method abstract="false" access="public" final="true" name="getIntersectedPoint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
      <method abstract="false" access="public" final="true" name="getIntersectedTexCoord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point2D" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="intersectedDistance" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getIntersectedDistance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="intersectedFace" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getIntersectedFace" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="intersectedNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getIntersectedNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Point3D" name="intersectedNormal" override="false" rawType="javafx.geometry.Point3D" static="false">
        <getter abstract="false" access="public" final="true" name="getIntersectedNormal" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Point3D" name="intersectedPoint" override="false" rawType="javafx.geometry.Point3D" static="false">
        <getter abstract="false" access="public" final="true" name="getIntersectedPoint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Point2D" name="intersectedTexCoord" override="false" rawType="javafx.geometry.Point2D" static="false">
        <getter abstract="false" access="public" final="true" name="getIntersectedTexCoord" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point2D" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="RotateEvent" genericParam="" genericParamPrepend="" name="RotateEvent" package="javafx.scene.input" super="javafx.scene.input.GestureEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.RotateEvent" parameterCount="14" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, double arg11, double arg12, javafx.scene.input.PickResult arg13" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="double" name="arg11" type="double"/>
        <parameter genericType="double" name="arg12" type="double"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg13" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.RotateEvent" parameterCount="16" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, double arg13, double arg14, javafx.scene.input.PickResult arg15" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="double" name="arg13" type="double"/>
        <parameter genericType="double" name="arg14" type="double"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg15" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ROTATE" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ROTATION_FINISHED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ROTATION_STARTED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.GestureEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.RotateEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt; arg2" public="true" returnType="javafx.scene.input.RotateEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTotalAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="angle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.RotateEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.RotateEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="totalAngle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTotalAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ScrollEvent" genericParam="" genericParamPrepend="" name="ScrollEvent" package="javafx.scene.input" super="javafx.scene.input.GestureEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.ScrollEvent" parameterCount="21" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, double arg11, double arg12, double arg13, double arg14, javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits arg15, double arg16, javafx.scene.input.ScrollEvent.VerticalTextScrollUnits arg17, double arg18, int arg19, javafx.scene.input.PickResult arg20" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="double" name="arg11" type="double"/>
        <parameter genericType="double" name="arg12" type="double"/>
        <parameter genericType="double" name="arg13" type="double"/>
        <parameter genericType="double" name="arg14" type="double"/>
        <parameter genericType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" name="arg15" type="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits"/>
        <parameter genericType="double" name="arg16" type="double"/>
        <parameter genericType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" name="arg17" type="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits"/>
        <parameter genericType="double" name="arg18" type="double"/>
        <parameter genericType="int" name="arg19" type="int"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg20" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.ScrollEvent" parameterCount="23" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, double arg13, double arg14, double arg15, double arg16, javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits arg17, double arg18, javafx.scene.input.ScrollEvent.VerticalTextScrollUnits arg19, double arg20, int arg21, javafx.scene.input.PickResult arg22" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="double" name="arg13" type="double"/>
        <parameter genericType="double" name="arg14" type="double"/>
        <parameter genericType="double" name="arg15" type="double"/>
        <parameter genericType="double" name="arg16" type="double"/>
        <parameter genericType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" name="arg17" type="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits"/>
        <parameter genericType="double" name="arg18" type="double"/>
        <parameter genericType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" name="arg19" type="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits"/>
        <parameter genericType="double" name="arg20" type="double"/>
        <parameter genericType="int" name="arg21" type="int"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg22" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.ScrollEvent" parameterCount="23" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, double arg11, double arg12, double arg13, double arg14, double arg15, double arg16, javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits arg17, double arg18, javafx.scene.input.ScrollEvent.VerticalTextScrollUnits arg19, double arg20, int arg21, javafx.scene.input.PickResult arg22" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="double" name="arg11" type="double"/>
        <parameter genericType="double" name="arg12" type="double"/>
        <parameter genericType="double" name="arg13" type="double"/>
        <parameter genericType="double" name="arg14" type="double"/>
        <parameter genericType="double" name="arg15" type="double"/>
        <parameter genericType="double" name="arg16" type="double"/>
        <parameter genericType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" name="arg17" type="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits"/>
        <parameter genericType="double" name="arg18" type="double"/>
        <parameter genericType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" name="arg19" type="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits"/>
        <parameter genericType="double" name="arg20" type="double"/>
        <parameter genericType="int" name="arg21" type="int"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg22" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SCROLL" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SCROLL_FINISHED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SCROLL_STARTED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.GestureEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.ScrollEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt; arg2" public="true" returnType="javafx.scene.input.ScrollEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getDeltaX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getDeltaY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getMultiplierX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMultiplierY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTextDeltaX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTextDeltaXUnits" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" static="false"/>
      <method abstract="false" access="public" final="false" name="getTextDeltaY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTextDeltaYUnits" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" static="false"/>
      <method abstract="false" access="public" final="false" name="getTotalDeltaX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTotalDeltaY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTouchCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="deltaX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getDeltaX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="deltaY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getDeltaY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.ScrollEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.ScrollEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="multiplierX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMultiplierX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="multiplierY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMultiplierY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="textDeltaX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTextDeltaX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" name="textDeltaXUnits" override="false" rawType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" static="false">
        <getter abstract="false" access="public" final="false" name="getTextDeltaXUnits" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="textDeltaY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTextDeltaY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" name="textDeltaYUnits" override="false" rawType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" static="false">
        <getter abstract="false" access="public" final="false" name="getTextDeltaYUnits" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.ScrollEvent.VerticalTextScrollUnits" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="totalDeltaX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTotalDeltaX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="totalDeltaY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTotalDeltaY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="touchCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getTouchCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SwipeEvent" genericParam="" genericParamPrepend="" name="SwipeEvent" package="javafx.scene.input" super="javafx.scene.input.GestureEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.SwipeEvent" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9, int arg10, javafx.scene.input.PickResult arg11" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="int" name="arg10" type="int"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg11" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.SwipeEvent" parameterCount="14" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, int arg12, javafx.scene.input.PickResult arg13" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="int" name="arg12" type="int"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg13" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SWIPE_DOWN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SWIPE_LEFT" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SWIPE_RIGHT" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="SWIPE_UP" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.GestureEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.SwipeEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt; arg2" public="true" returnType="javafx.scene.input.SwipeEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTouchCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.input.SwipeEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.SwipeEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="touchCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getTouchCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TouchEvent" genericParam="" genericParamPrepend="" name="TouchEvent" package="javafx.scene.input" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.TouchEvent" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt; arg0, javafx.scene.input.TouchPoint arg1, java.util.List&lt;javafx.scene.input.TouchPoint&gt; arg2, int arg3, boolean arg4, boolean arg5, boolean arg6, boolean arg7" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.input.TouchPoint" name="arg1" type="javafx.scene.input.TouchPoint"/>
        <parameter genericType="java.util.List&lt;javafx.scene.input.TouchPoint&gt;" name="arg2" type="java.util.List"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.TouchEvent" parameterCount="10" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt; arg2, javafx.scene.input.TouchPoint arg3, java.util.List&lt;javafx.scene.input.TouchPoint&gt; arg4, int arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="javafx.scene.input.TouchPoint" name="arg3" type="javafx.scene.input.TouchPoint"/>
        <parameter genericType="java.util.List&lt;javafx.scene.input.TouchPoint&gt;" name="arg4" type="java.util.List"/>
        <parameter genericType="int" name="arg5" type="int"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="TOUCH_MOVED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="TOUCH_PRESSED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="TOUCH_RELEASED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="TOUCH_STATIONARY" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.TouchEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt; arg2" public="true" returnType="javafx.scene.input.TouchEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="true" name="getEventSetId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTouchCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getTouchPoint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TouchPoint" static="false"/>
      <method abstract="false" access="public" final="false" name="getTouchPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.input.TouchPoint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="boolean" name="altDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAltDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="controlDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isControlDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="eventSetId" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getEventSetId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.TouchEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.TouchEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="metaDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMetaDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="shiftDown" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShiftDown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="touchCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getTouchCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.TouchPoint" name="touchPoint" override="false" rawType="javafx.scene.input.TouchPoint" static="false">
        <getter abstract="false" access="public" final="false" name="getTouchPoint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TouchPoint" static="false"/>
      </property>
      <property genericParam="javafx.scene.input.TouchPoint" genericType="java.util.List&lt;javafx.scene.input.TouchPoint&gt;" name="touchPoints" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getTouchPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.input.TouchPoint&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TouchPoint" genericParam="" genericParamPrepend="" name="TouchPoint" package="javafx.scene.input" super="">
      <constructor access="public" name="javafx.scene.input.TouchPoint" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="int arg0, javafx.scene.input.TouchPoint.State arg1, double arg2, double arg3, double arg4, double arg5, javafx.event.EventTarget arg6, javafx.scene.input.PickResult arg7" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.input.TouchPoint.State" name="arg1" type="javafx.scene.input.TouchPoint.State"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="javafx.event.EventTarget" name="arg6" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg7" type="javafx.scene.input.PickResult"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="belongsTo" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventTarget arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.event.EventTarget" name="arg0" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="getGrabbed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventTarget" static="false"/>
      <method abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getState" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TouchPoint.State" static="false"/>
      <method abstract="false" access="public" final="false" name="getTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventTarget" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="grab" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="grab" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventTarget arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventTarget" name="arg0" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="ungrab" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <property genericParam="" genericType="javafx.event.EventTarget" name="grabbed" override="false" rawType="javafx.event.EventTarget" static="false">
        <getter abstract="false" access="public" final="false" name="getGrabbed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventTarget" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="id" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getId" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.PickResult" name="pickResult" override="false" rawType="javafx.scene.input.PickResult" static="false">
        <getter abstract="false" access="public" final="true" name="getPickResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.PickResult" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="sceneY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSceneY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="screenY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getScreenY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.input.TouchPoint.State" name="state" override="false" rawType="javafx.scene.input.TouchPoint.State" static="false">
        <getter abstract="false" access="public" final="true" name="getState" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.TouchPoint.State" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.event.EventTarget" name="target" override="false" rawType="javafx.event.EventTarget" static="false">
        <getter abstract="false" access="public" final="false" name="getTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventTarget" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ZoomEvent" genericParam="" genericParamPrepend="" name="ZoomEvent" package="javafx.scene.input" super="javafx.scene.input.GestureEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.input.ZoomEvent" parameterCount="14" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13" parametersDeclaration="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt; arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, boolean arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, double arg11, double arg12, javafx.scene.input.PickResult arg13" public="true" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="double" name="arg11" type="double"/>
        <parameter genericType="double" name="arg12" type="double"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg13" type="javafx.scene.input.PickResult"/>
      </constructor>
      <constructor access="public" name="javafx.scene.input.ZoomEvent" parameterCount="16" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt; arg2, double arg3, double arg4, double arg5, double arg6, boolean arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, double arg13, double arg14, javafx.scene.input.PickResult arg15" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="double" name="arg13" type="double"/>
        <parameter genericType="double" name="arg14" type="double"/>
        <parameter genericType="javafx.scene.input.PickResult" name="arg15" type="javafx.scene.input.PickResult"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ZOOM" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ZOOM_FINISHED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ZOOM_STARTED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.GestureEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.input.ZoomEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt; arg2" public="true" returnType="javafx.scene.input.ZoomEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTotalZoomFactor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getZoomFactor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.input.ZoomEvent" genericType="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.input.ZoomEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="totalZoomFactor" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTotalZoomFactor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="zoomFactor" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getZoomFactor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="AnchorPane" genericParam="" genericParamPrepend="" name="AnchorPane" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.AnchorPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.AnchorPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getBottomAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getLeftAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getRightAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getTopAnchor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Double" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="setBottomAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLeftAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRightAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTopAnchor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Double arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Double" name="arg1" type="java.lang.Double"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Background" genericParam="" genericParamPrepend="" name="Background" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.Background" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.BackgroundFill[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.layout.BackgroundFill[]" name="arg0" type="javafx.scene.layout.BackgroundFill[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.Background" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.BackgroundImage[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.layout.BackgroundImage[]" name="arg0" type="javafx.scene.layout.BackgroundImage[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.Background" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.util.List&lt;javafx.scene.layout.BackgroundFill&gt; arg0, java.util.List&lt;javafx.scene.layout.BackgroundImage&gt; arg1" public="true" static="false">
        <parameter genericType="java.util.List&lt;javafx.scene.layout.BackgroundFill&gt;" name="arg0" type="java.util.List"/>
        <parameter genericType="java.util.List&lt;javafx.scene.layout.BackgroundImage&gt;" name="arg1" type="java.util.List"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.Background" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.layout.BackgroundFill[] arg0, javafx.scene.layout.BackgroundImage[] arg1" public="true" static="false">
        <parameter genericType="javafx.scene.layout.BackgroundFill[]" name="arg0" type="javafx.scene.layout.BackgroundFill[]"/>
        <parameter genericType="javafx.scene.layout.BackgroundImage[]" name="arg1" type="javafx.scene.layout.BackgroundImage[]"/>
      </constructor>
      <field access="public" final="true" name="EMPTY" public="true" static="true" type="javafx.scene.layout.Background"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getFills" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BackgroundFill&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getImages" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BackgroundImage&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOutsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isFillPercentageBased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="empty" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="fillPercentageBased" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isFillPercentageBased" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="javafx.scene.layout.BackgroundFill" genericType="java.util.List&lt;javafx.scene.layout.BackgroundFill&gt;" name="fills" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getFills" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BackgroundFill&gt;" static="false"/>
      </property>
      <property genericParam="javafx.scene.layout.BackgroundImage" genericType="java.util.List&lt;javafx.scene.layout.BackgroundImage&gt;" name="images" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getImages" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BackgroundImage&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="outsets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getOutsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BackgroundFill" genericParam="" genericParamPrepend="" name="BackgroundFill" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BackgroundFill" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.paint.Paint arg0, javafx.scene.layout.CornerRadii arg1, javafx.geometry.Insets arg2" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.layout.CornerRadii" name="arg1" type="javafx.scene.layout.CornerRadii"/>
        <parameter genericType="javafx.geometry.Insets" name="arg2" type="javafx.geometry.Insets"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadii" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.CornerRadii" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="fill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="insets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.CornerRadii" name="radii" override="false" rawType="javafx.scene.layout.CornerRadii" static="false">
        <getter abstract="false" access="public" final="true" name="getRadii" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.CornerRadii" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BackgroundImage" genericParam="" genericParamPrepend="" name="BackgroundImage" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BackgroundImage" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.image.Image arg0, javafx.scene.layout.BackgroundRepeat arg1, javafx.scene.layout.BackgroundRepeat arg2, javafx.scene.layout.BackgroundPosition arg3, javafx.scene.layout.BackgroundSize arg4" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="javafx.scene.layout.BackgroundRepeat" name="arg1" type="javafx.scene.layout.BackgroundRepeat"/>
        <parameter genericType="javafx.scene.layout.BackgroundRepeat" name="arg2" type="javafx.scene.layout.BackgroundRepeat"/>
        <parameter genericType="javafx.scene.layout.BackgroundPosition" name="arg3" type="javafx.scene.layout.BackgroundPosition"/>
        <parameter genericType="javafx.scene.layout.BackgroundSize" name="arg4" type="javafx.scene.layout.BackgroundSize"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundPosition" static="false"/>
      <method abstract="false" access="public" final="true" name="getRepeatX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundRepeat" static="false"/>
      <method abstract="false" access="public" final="true" name="getRepeatY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundRepeat" static="false"/>
      <method abstract="false" access="public" final="true" name="getSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundSize" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BackgroundPosition" name="position" override="false" rawType="javafx.scene.layout.BackgroundPosition" static="false">
        <getter abstract="false" access="public" final="true" name="getPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundPosition" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BackgroundRepeat" name="repeatX" override="false" rawType="javafx.scene.layout.BackgroundRepeat" static="false">
        <getter abstract="false" access="public" final="true" name="getRepeatX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundRepeat" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BackgroundRepeat" name="repeatY" override="false" rawType="javafx.scene.layout.BackgroundRepeat" static="false">
        <getter abstract="false" access="public" final="true" name="getRepeatY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundRepeat" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BackgroundSize" name="size" override="false" rawType="javafx.scene.layout.BackgroundSize" static="false">
        <getter abstract="false" access="public" final="true" name="getSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BackgroundSize" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BackgroundPosition" genericParam="" genericParamPrepend="" name="BackgroundPosition" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BackgroundPosition" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.geometry.Side arg0, double arg1, boolean arg2, javafx.geometry.Side arg3, double arg4, boolean arg5" public="true" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
        <parameter genericType="javafx.geometry.Side" name="arg3" type="javafx.geometry.Side"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="CENTER" public="true" static="true" type="javafx.scene.layout.BackgroundPosition"/>
      <field access="public" final="true" name="DEFAULT" public="true" static="true" type="javafx.scene.layout.BackgroundPosition"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getHorizontalPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getHorizontalSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="getVerticalPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getVerticalSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isHorizontalAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isVerticalAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="horizontalAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHorizontalAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="horizontalPosition" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHorizontalPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="horizontalSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getHorizontalSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="verticalAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isVerticalAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="verticalPosition" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVerticalPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="verticalSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getVerticalSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BackgroundSize" genericParam="" genericParamPrepend="" name="BackgroundSize" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BackgroundSize" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, boolean arg2, boolean arg3, boolean arg4, boolean arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="AUTO" public="true" static="true" type="double"/>
      <field access="public" final="true" name="DEFAULT" public="true" static="true" type="javafx.scene.layout.BackgroundSize"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isContain" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isCover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isHeightAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isWidthAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="contain" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isContain" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="cover" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="heightAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHeightAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="widthAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isWidthAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Border" genericParam="" genericParamPrepend="" name="Border" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.Border" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.BorderImage[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.layout.BorderImage[]" name="arg0" type="javafx.scene.layout.BorderImage[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.Border" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.BorderStroke[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.layout.BorderStroke[]" name="arg0" type="javafx.scene.layout.BorderStroke[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.Border" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.util.List&lt;javafx.scene.layout.BorderStroke&gt; arg0, java.util.List&lt;javafx.scene.layout.BorderImage&gt; arg1" public="true" static="false">
        <parameter genericType="java.util.List&lt;javafx.scene.layout.BorderStroke&gt;" name="arg0" type="java.util.List"/>
        <parameter genericType="java.util.List&lt;javafx.scene.layout.BorderImage&gt;" name="arg1" type="java.util.List"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.Border" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.layout.BorderStroke[] arg0, javafx.scene.layout.BorderImage[] arg1" public="true" static="false">
        <parameter genericType="javafx.scene.layout.BorderStroke[]" name="arg0" type="javafx.scene.layout.BorderStroke[]"/>
        <parameter genericType="javafx.scene.layout.BorderImage[]" name="arg1" type="javafx.scene.layout.BorderImage[]"/>
      </constructor>
      <field access="public" final="true" name="EMPTY" public="true" static="true" type="javafx.scene.layout.Border"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getImages" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BorderImage&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getOutsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BorderStroke&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="empty" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEmpty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="javafx.scene.layout.BorderImage" genericType="java.util.List&lt;javafx.scene.layout.BorderImage&gt;" name="images" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getImages" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BorderImage&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="insets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="outsets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getOutsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="javafx.scene.layout.BorderStroke" genericType="java.util.List&lt;javafx.scene.layout.BorderStroke&gt;" name="strokes" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokes" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.layout.BorderStroke&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BorderImage" genericParam="" genericParamPrepend="" name="BorderImage" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BorderImage" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="javafx.scene.image.Image arg0, javafx.scene.layout.BorderWidths arg1, javafx.geometry.Insets arg2, javafx.scene.layout.BorderWidths arg3, boolean arg4, javafx.scene.layout.BorderRepeat arg5, javafx.scene.layout.BorderRepeat arg6" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="javafx.scene.layout.BorderWidths" name="arg1" type="javafx.scene.layout.BorderWidths"/>
        <parameter genericType="javafx.geometry.Insets" name="arg2" type="javafx.geometry.Insets"/>
        <parameter genericType="javafx.scene.layout.BorderWidths" name="arg3" type="javafx.scene.layout.BorderWidths"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="javafx.scene.layout.BorderRepeat" name="arg5" type="javafx.scene.layout.BorderRepeat"/>
        <parameter genericType="javafx.scene.layout.BorderRepeat" name="arg6" type="javafx.scene.layout.BorderRepeat"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getRepeatX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderRepeat" static="false"/>
      <method abstract="false" access="public" final="true" name="getRepeatY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderRepeat" static="false"/>
      <method abstract="false" access="public" final="true" name="getSlices" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderWidths" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidths" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderWidths" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isFilled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="filled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFilled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="insets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderRepeat" name="repeatX" override="false" rawType="javafx.scene.layout.BorderRepeat" static="false">
        <getter abstract="false" access="public" final="true" name="getRepeatX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderRepeat" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderRepeat" name="repeatY" override="false" rawType="javafx.scene.layout.BorderRepeat" static="false">
        <getter abstract="false" access="public" final="true" name="getRepeatY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderRepeat" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderWidths" name="slices" override="false" rawType="javafx.scene.layout.BorderWidths" static="false">
        <getter abstract="false" access="public" final="true" name="getSlices" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderWidths" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderWidths" name="widths" override="false" rawType="javafx.scene.layout.BorderWidths" static="false">
        <getter abstract="false" access="public" final="true" name="getWidths" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderWidths" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BorderPane" genericParam="" genericParamPrepend="" name="BorderPane" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.BorderPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.BorderPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.BorderPane" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.Node arg1, javafx.scene.Node arg2, javafx.scene.Node arg3, javafx.scene.Node arg4" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg2" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg3" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg4" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="bottomProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="centerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Pos" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBottom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="leftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="rightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="setAlignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBottom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCenter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="topProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <property genericParam="" genericType="javafx.scene.Node" name="bottom" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getBottom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setBottom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="center" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getCenter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setCenter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="left" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="right" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="top" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BorderStroke" genericParam="" genericParamPrepend="" name="BorderStroke" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BorderStroke" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.paint.Paint arg0, javafx.scene.layout.BorderStrokeStyle arg1, javafx.scene.layout.CornerRadii arg2, javafx.scene.layout.BorderWidths arg3" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.layout.BorderStrokeStyle" name="arg1" type="javafx.scene.layout.BorderStrokeStyle"/>
        <parameter genericType="javafx.scene.layout.CornerRadii" name="arg2" type="javafx.scene.layout.CornerRadii"/>
        <parameter genericType="javafx.scene.layout.BorderWidths" name="arg3" type="javafx.scene.layout.BorderWidths"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.BorderStroke" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.paint.Paint arg0, javafx.scene.layout.BorderStrokeStyle arg1, javafx.scene.layout.CornerRadii arg2, javafx.scene.layout.BorderWidths arg3, javafx.geometry.Insets arg4" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.layout.BorderStrokeStyle" name="arg1" type="javafx.scene.layout.BorderStrokeStyle"/>
        <parameter genericType="javafx.scene.layout.CornerRadii" name="arg2" type="javafx.scene.layout.CornerRadii"/>
        <parameter genericType="javafx.scene.layout.BorderWidths" name="arg3" type="javafx.scene.layout.BorderWidths"/>
        <parameter genericType="javafx.geometry.Insets" name="arg4" type="javafx.geometry.Insets"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.BorderStroke" parameterCount="11" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10" parametersDeclaration="javafx.scene.paint.Paint arg0, javafx.scene.paint.Paint arg1, javafx.scene.paint.Paint arg2, javafx.scene.paint.Paint arg3, javafx.scene.layout.BorderStrokeStyle arg4, javafx.scene.layout.BorderStrokeStyle arg5, javafx.scene.layout.BorderStrokeStyle arg6, javafx.scene.layout.BorderStrokeStyle arg7, javafx.scene.layout.CornerRadii arg8, javafx.scene.layout.BorderWidths arg9, javafx.geometry.Insets arg10" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg1" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg2" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg3" type="javafx.scene.paint.Paint"/>
        <parameter genericType="javafx.scene.layout.BorderStrokeStyle" name="arg4" type="javafx.scene.layout.BorderStrokeStyle"/>
        <parameter genericType="javafx.scene.layout.BorderStrokeStyle" name="arg5" type="javafx.scene.layout.BorderStrokeStyle"/>
        <parameter genericType="javafx.scene.layout.BorderStrokeStyle" name="arg6" type="javafx.scene.layout.BorderStrokeStyle"/>
        <parameter genericType="javafx.scene.layout.BorderStrokeStyle" name="arg7" type="javafx.scene.layout.BorderStrokeStyle"/>
        <parameter genericType="javafx.scene.layout.CornerRadii" name="arg8" type="javafx.scene.layout.CornerRadii"/>
        <parameter genericType="javafx.scene.layout.BorderWidths" name="arg9" type="javafx.scene.layout.BorderWidths"/>
        <parameter genericType="javafx.geometry.Insets" name="arg10" type="javafx.geometry.Insets"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_WIDTHS" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <field access="public" final="true" name="MEDIUM" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <field access="public" final="true" name="THICK" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <field access="public" final="true" name="THIN" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBottomStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottomStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeftStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeftStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadii" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.CornerRadii" static="false"/>
      <method abstract="false" access="public" final="true" name="getRightStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getRightStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidths" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderWidths" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isStrokeUniform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="bottomStroke" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderStrokeStyle" name="bottomStyle" override="false" rawType="javafx.scene.layout.BorderStrokeStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="insets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="leftStroke" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getLeftStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderStrokeStyle" name="leftStyle" override="false" rawType="javafx.scene.layout.BorderStrokeStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getLeftStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.CornerRadii" name="radii" override="false" rawType="javafx.scene.layout.CornerRadii" static="false">
        <getter abstract="false" access="public" final="true" name="getRadii" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.CornerRadii" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="rightStroke" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getRightStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderStrokeStyle" name="rightStyle" override="false" rawType="javafx.scene.layout.BorderStrokeStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getRightStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="strokeUniform" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isStrokeUniform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="topStroke" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getTopStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderStrokeStyle" name="topStyle" override="false" rawType="javafx.scene.layout.BorderStrokeStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getTopStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderStrokeStyle" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.BorderWidths" name="widths" override="false" rawType="javafx.scene.layout.BorderWidths" static="false">
        <getter abstract="false" access="public" final="true" name="getWidths" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.BorderWidths" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BorderStrokeStyle" genericParam="" genericParamPrepend="" name="BorderStrokeStyle" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BorderStrokeStyle" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.shape.StrokeType arg0, javafx.scene.shape.StrokeLineJoin arg1, javafx.scene.shape.StrokeLineCap arg2, double arg3, double arg4, java.util.List&lt;java.lang.Double&gt; arg5" public="true" static="false">
        <parameter genericType="javafx.scene.shape.StrokeType" name="arg0" type="javafx.scene.shape.StrokeType"/>
        <parameter genericType="javafx.scene.shape.StrokeLineJoin" name="arg1" type="javafx.scene.shape.StrokeLineJoin"/>
        <parameter genericType="javafx.scene.shape.StrokeLineCap" name="arg2" type="javafx.scene.shape.StrokeLineCap"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="java.util.List&lt;java.lang.Double&gt;" name="arg5" type="java.util.List"/>
      </constructor>
      <field access="public" final="true" name="DASHED" public="true" static="true" type="javafx.scene.layout.BorderStrokeStyle"/>
      <field access="public" final="true" name="DOTTED" public="true" static="true" type="javafx.scene.layout.BorderStrokeStyle"/>
      <field access="public" final="true" name="NONE" public="true" static="true" type="javafx.scene.layout.BorderStrokeStyle"/>
      <field access="public" final="true" name="SOLID" public="true" static="true" type="javafx.scene.layout.BorderStrokeStyle"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getDashArray" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.lang.Double&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getDashOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLineCap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineCap" static="false"/>
      <method abstract="false" access="public" final="true" name="getLineJoin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineJoin" static="false"/>
      <method abstract="false" access="public" final="true" name="getMiterLimit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeType" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="java.lang.Double" genericType="java.util.List&lt;java.lang.Double&gt;" name="dashArray" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getDashArray" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.lang.Double&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="dashOffset" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getDashOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeLineCap" name="lineCap" override="false" rawType="javafx.scene.shape.StrokeLineCap" static="false">
        <getter abstract="false" access="public" final="true" name="getLineCap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineCap" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeLineJoin" name="lineJoin" override="false" rawType="javafx.scene.shape.StrokeLineJoin" static="false">
        <getter abstract="false" access="public" final="true" name="getLineJoin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineJoin" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="miterLimit" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMiterLimit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeType" name="type" override="false" rawType="javafx.scene.shape.StrokeType" static="false">
        <getter abstract="false" access="public" final="true" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeType" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BorderWidths" genericParam="" genericParamPrepend="" name="BorderWidths" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.BorderWidths" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.BorderWidths" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.BorderWidths" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, boolean arg4, boolean arg5, boolean arg6, boolean arg7" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="AUTO" public="true" static="true" type="double"/>
      <field access="public" final="true" name="DEFAULT" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <field access="public" final="true" name="EMPTY" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <field access="public" final="true" name="FULL" public="true" static="true" type="javafx.scene.layout.BorderWidths"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBottom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isBottomAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isLeftAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isRightAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTopAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="double" name="bottom" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBottom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="bottomAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isBottomAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="left" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="leftAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isLeftAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="right" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="rightAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isRightAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="top" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="topAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTopAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ColumnConstraints" genericParam="" genericParamPrepend="" name="ColumnConstraints" package="javafx.scene.layout" super="javafx.scene.layout.ConstraintsBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.ColumnConstraints" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.ColumnConstraints" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.ColumnConstraints" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.ColumnConstraints" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, javafx.scene.layout.Priority arg3, javafx.geometry.HPos arg4, boolean arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg3" type="javafx.scene.layout.Priority"/>
        <parameter genericType="javafx.geometry.HPos" name="arg4" type="javafx.geometry.HPos"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="fillWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getHalignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.HPos" static="false"/>
      <method abstract="false" access="public" final="true" name="getHgrow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Priority" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPercentWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="halignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.HPos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="hgrowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.layout.Priority&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isFillWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="maxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="percentWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setFillWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.HPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.HPos" name="arg0" type="javafx.geometry.HPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Priority arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.layout.Priority" name="arg0" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPercentWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="boolean" name="fillWidth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFillWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFillWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.HPos" name="halignment" override="false" rawType="javafx.geometry.HPos" static="false">
        <getter abstract="false" access="public" final="true" name="getHalignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.HPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.HPos" index="" name="setHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.HPos arg0" public="true" rawType="javafx.geometry.HPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.HPos" name="arg0" type="javafx.geometry.HPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Priority" name="hgrow" override="false" rawType="javafx.scene.layout.Priority" static="false">
        <getter abstract="false" access="public" final="true" name="getHgrow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Priority" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.layout.Priority" index="" name="setHgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Priority arg0" public="true" rawType="javafx.scene.layout.Priority" returnType="void" static="false">
          <parameter genericType="javafx.scene.layout.Priority" name="arg0" type="javafx.scene.layout.Priority"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="percentWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPercentWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPercentWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="ConstraintsBase" genericParam="" genericParamPrepend="" name="ConstraintsBase" package="javafx.scene.layout" super="">
      <field access="public" final="true" name="CONSTRAIN_TO_PREF" public="true" static="true" type="double"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CornerRadii" genericParam="" genericParamPrepend="" name="CornerRadii" package="javafx.scene.layout" super="">
      <constructor access="public" name="javafx.scene.layout.CornerRadii" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.CornerRadii" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, boolean arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.CornerRadii" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, boolean arg4" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.CornerRadii" parameterCount="16" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, boolean arg8, boolean arg9, boolean arg10, boolean arg11, boolean arg12, boolean arg13, boolean arg14, boolean arg15" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
        <parameter genericType="boolean" name="arg10" type="boolean"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
        <parameter genericType="boolean" name="arg12" type="boolean"/>
        <parameter genericType="boolean" name="arg13" type="boolean"/>
        <parameter genericType="boolean" name="arg14" type="boolean"/>
        <parameter genericType="boolean" name="arg15" type="boolean"/>
      </constructor>
      <field access="public" final="true" name="EMPTY" public="true" static="true" type="javafx.scene.layout.CornerRadii"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBottomLeftHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottomLeftVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottomRightHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottomRightVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopLeftHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopLeftVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopRightHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTopRightVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isBottomLeftHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isBottomLeftVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isBottomRightHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isBottomRightVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTopLeftHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTopLeftVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTopRightHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isTopRightVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isUniform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="bottomLeftHorizontalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomLeftHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="bottomLeftHorizontalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isBottomLeftHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="bottomLeftVerticalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomLeftVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="bottomLeftVerticalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isBottomLeftVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="bottomRightHorizontalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomRightHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="bottomRightHorizontalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isBottomRightHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="bottomRightVerticalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBottomRightVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="bottomRightVerticalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isBottomRightVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="topLeftHorizontalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTopLeftHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="topLeftHorizontalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTopLeftHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="topLeftVerticalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTopLeftVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="topLeftVerticalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTopLeftVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="topRightHorizontalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTopRightHorizontalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="topRightHorizontalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTopRightHorizontalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="topRightVerticalRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTopRightVerticalRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="topRightVerticalRadiusAsPercentage" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isTopRightVerticalRadiusAsPercentage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="uniform" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isUniform" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="FlowPane" genericParam="" genericParamPrepend="" name="FlowPane" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Orientation arg0, javafx.scene.Node[] arg1" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        <parameter genericType="javafx.scene.Node[]" name="arg1" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.scene.Node[] arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.scene.Node[]" name="arg2" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.geometry.Orientation arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.FlowPane" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.geometry.Orientation arg0, double arg1, double arg2, javafx.scene.Node[] arg3" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.Node[]" name="arg3" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="columnHalignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.HPos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getColumnHalignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.HPos" static="false"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefWrapLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRowValignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
      <method abstract="false" access="public" final="true" name="getVgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="hgapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="prefWrapLengthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="rowValignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.VPos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setColumnHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.HPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.HPos" name="arg0" type="javafx.geometry.HPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefWrapLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRowValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="vgapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.HPos" name="columnHalignment" override="false" rawType="javafx.geometry.HPos" static="false">
        <getter abstract="false" access="public" final="true" name="getColumnHalignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.HPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.HPos" index="" name="setColumnHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.HPos arg0" public="true" rawType="javafx.geometry.HPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.HPos" name="arg0" type="javafx.geometry.HPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="hgap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefWrapLength" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefWrapLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefWrapLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.VPos" name="rowValignment" override="false" rawType="javafx.geometry.VPos" static="false">
        <getter abstract="false" access="public" final="true" name="getRowValignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.VPos" index="" name="setRowValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" rawType="javafx.geometry.VPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="vgap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GridPane" genericParam="" genericParamPrepend="" name="GridPane" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.GridPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <field access="public" final="true" name="REMAINING" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="false" name="add" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="add" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2, int arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="addColumn" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.Node[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.Node[]" name="arg1" type="javafx.scene.Node[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="addRow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, javafx.scene.Node[] arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="javafx.scene.Node[]" name="arg1" type="javafx.scene.Node[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getColumnConstraints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.layout.ColumnConstraints&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getColumnIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getColumnSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getHalignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.HPos" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getHgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getHgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getRowConstraints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.layout.RowConstraints&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getRowSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Integer" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.VPos" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getVgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getVgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="gridLinesVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="hgapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="isFillHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Boolean" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="isFillWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Boolean" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="isGridLinesVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="false" name="setColumnIndex" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="setColumnSpan" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="setConstraints" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setConstraints" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2, int arg3, int arg4" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setConstraints" override="false" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2, int arg3, int arg4, javafx.geometry.HPos arg5, javafx.geometry.VPos arg6" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
        <parameter genericType="javafx.geometry.HPos" name="arg5" type="javafx.geometry.HPos"/>
        <parameter genericType="javafx.geometry.VPos" name="arg6" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="false" name="setConstraints" override="false" parameterCount="9" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2, int arg3, int arg4, javafx.geometry.HPos arg5, javafx.geometry.VPos arg6, javafx.scene.layout.Priority arg7, javafx.scene.layout.Priority arg8" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
        <parameter genericType="javafx.geometry.HPos" name="arg5" type="javafx.geometry.HPos"/>
        <parameter genericType="javafx.geometry.VPos" name="arg6" type="javafx.geometry.VPos"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg7" type="javafx.scene.layout.Priority"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg8" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="false" name="setConstraints" override="false" parameterCount="10" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9" parametersDeclaration="javafx.scene.Node arg0, int arg1, int arg2, int arg3, int arg4, javafx.geometry.HPos arg5, javafx.geometry.VPos arg6, javafx.scene.layout.Priority arg7, javafx.scene.layout.Priority arg8, javafx.geometry.Insets arg9" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
        <parameter genericType="javafx.geometry.HPos" name="arg5" type="javafx.geometry.HPos"/>
        <parameter genericType="javafx.geometry.VPos" name="arg6" type="javafx.geometry.VPos"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg7" type="javafx.scene.layout.Priority"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg8" type="javafx.scene.layout.Priority"/>
        <parameter genericType="javafx.geometry.Insets" name="arg9" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFillHeight" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Boolean arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Boolean" name="arg1" type="java.lang.Boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFillWidth" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Boolean arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Boolean" name="arg1" type="java.lang.Boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGridLinesVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setHalignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.HPos arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.HPos" name="arg1" type="javafx.geometry.HPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setHgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRowIndex" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRowSpan" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.Integer arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.Integer" name="arg1" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="setValignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.VPos arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.VPos" name="arg1" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setVgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="vgapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.layout.ColumnConstraints" genericType="javafx.collections.ObservableList&lt;javafx.scene.layout.ColumnConstraints&gt;" name="columnConstraints" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getColumnConstraints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.layout.ColumnConstraints&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="gridLinesVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isGridLinesVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setGridLinesVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="hgap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.layout.RowConstraints" genericType="javafx.collections.ObservableList&lt;javafx.scene.layout.RowConstraints&gt;" name="rowConstraints" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getRowConstraints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.layout.RowConstraints&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="vgap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="HBox" genericParam="" genericParamPrepend="" name="HBox" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.HBox" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.HBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.HBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.HBox" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.Node[] arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.Node[]" name="arg1" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="fillHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getHgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isFillHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFillHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setHgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="spacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="baselineOffset" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="fillHeight" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFillHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFillHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="spacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Pane" genericParam="" genericParamPrepend="" name="Pane" package="javafx.scene.layout" super="javafx.scene.layout.Region" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.Pane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.Pane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="children" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getChildren" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Region" genericParam="" genericParamPrepend="" name="Region" package="javafx.scene.layout" super="javafx.scene.Parent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.Region" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <field access="public" final="true" name="USE_COMPUTED_SIZE" public="true" static="true" type="double"/>
      <field access="public" final="true" name="USE_PREF_SIZE" public="true" static="true" type="double"/>
      <method abstract="false" access="public" final="true" name="backgroundProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.layout.Background&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="borderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.layout.Border&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cacheShapeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="centerShapeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBackground" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Background" static="false"/>
      <method abstract="false" access="public" final="true" name="getBorder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Border" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOpaqueInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getPadding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.Shape" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="impl_createPeer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="com.sun.javafx.sg.prism.NGNode" static="false"/>
      <method abstract="false" access="public" final="false" name="impl_updatePeer" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="insetsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.geometry.Insets&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isCacheShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isCenterShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isResizable" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isScaleShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSnapToPixel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="layoutInArea" override="false" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="javafx.scene.Node arg0, double arg1, double arg2, double arg3, double arg4, double arg5, javafx.geometry.Insets arg6, boolean arg7, boolean arg8, javafx.geometry.HPos arg9, javafx.geometry.VPos arg10, boolean arg11" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="javafx.geometry.Insets" name="arg6" type="javafx.geometry.Insets"/>
        <parameter genericType="boolean" name="arg7" type="boolean"/>
        <parameter genericType="boolean" name="arg8" type="boolean"/>
        <parameter genericType="javafx.geometry.HPos" name="arg9" type="javafx.geometry.HPos"/>
        <parameter genericType="javafx.geometry.VPos" name="arg10" type="javafx.geometry.VPos"/>
        <parameter genericType="boolean" name="arg11" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="maxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="minHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="minWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="opaqueInsetsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Insets&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="paddingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Insets&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="positionInArea" override="false" parameterCount="10" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9" parametersDeclaration="javafx.scene.Node arg0, double arg1, double arg2, double arg3, double arg4, double arg5, javafx.geometry.Insets arg6, javafx.geometry.HPos arg7, javafx.geometry.VPos arg8, boolean arg9" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="javafx.geometry.Insets" name="arg6" type="javafx.geometry.Insets"/>
        <parameter genericType="javafx.geometry.HPos" name="arg7" type="javafx.geometry.HPos"/>
        <parameter genericType="javafx.geometry.VPos" name="arg8" type="javafx.geometry.VPos"/>
        <parameter genericType="boolean" name="arg9" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="prefHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="prefHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="prefWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="resize" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="scaleShapeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setBackground" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Background arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.layout.Background" name="arg0" type="javafx.scene.layout.Background"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBorder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Border arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.layout.Border" name="arg0" type="javafx.scene.layout.Border"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCacheShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCenterShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMaxSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMinSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOpaqueInsets" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Insets arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Insets" name="arg0" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPadding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Insets arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Insets" name="arg0" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setPrefSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScaleShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.Shape arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.Shape" name="arg0" type="javafx.scene.shape.Shape"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSnapToPixel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="shapeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.Shape&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="snapToPixelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="snappedBottomInset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="snappedLeftInset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="snappedRightInset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="snappedTopInset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.layout.Background" name="background" override="false" rawType="javafx.scene.layout.Background" static="false">
        <getter abstract="false" access="public" final="true" name="getBackground" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Background" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.layout.Background" index="" name="setBackground" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Background arg0" public="true" rawType="javafx.scene.layout.Background" returnType="void" static="false">
          <parameter genericType="javafx.scene.layout.Background" name="arg0" type="javafx.scene.layout.Background"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Border" name="border" override="false" rawType="javafx.scene.layout.Border" static="false">
        <getter abstract="false" access="public" final="true" name="getBorder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Border" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.layout.Border" index="" name="setBorder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Border arg0" public="true" rawType="javafx.scene.layout.Border" returnType="void" static="false">
          <parameter genericType="javafx.scene.layout.Border" name="arg0" type="javafx.scene.layout.Border"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="cacheShape" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCacheShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCacheShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="centerShape" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCenterShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCenterShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="insets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="opaqueInsets" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getOpaqueInsets" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Insets" index="" name="setOpaqueInsets" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Insets arg0" public="true" rawType="javafx.geometry.Insets" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Insets" name="arg0" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Insets" name="padding" override="false" rawType="javafx.geometry.Insets" static="false">
        <getter abstract="false" access="public" final="true" name="getPadding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Insets" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Insets" index="" name="setPadding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Insets arg0" public="true" rawType="javafx.geometry.Insets" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Insets" name="arg0" type="javafx.geometry.Insets"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="true" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isResizable" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="scaleShape" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isScaleShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setScaleShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.Shape" name="shape" override="false" rawType="javafx.scene.shape.Shape" static="false">
        <getter abstract="false" access="public" final="true" name="getShape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.Shape" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.Shape" index="" name="setShape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.Shape arg0" public="true" rawType="javafx.scene.shape.Shape" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.Shape" name="arg0" type="javafx.scene.shape.Shape"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="snapToPixel" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSnapToPixel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSnapToPixel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="RowConstraints" genericParam="" genericParamPrepend="" name="RowConstraints" package="javafx.scene.layout" super="javafx.scene.layout.ConstraintsBase" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.RowConstraints" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.RowConstraints" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.RowConstraints" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.RowConstraints" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, javafx.scene.layout.Priority arg3, javafx.geometry.VPos arg4, boolean arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg3" type="javafx.scene.layout.Priority"/>
        <parameter genericType="javafx.geometry.VPos" name="arg4" type="javafx.geometry.VPos"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="fillHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPercentHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getValignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
      <method abstract="false" access="public" final="true" name="getVgrow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Priority" static="false"/>
      <method abstract="false" access="public" final="true" name="isFillHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="maxHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="percentHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setFillHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPercentHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Priority arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.layout.Priority" name="arg0" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="valignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.VPos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="vgrowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.layout.Priority&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="fillHeight" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFillHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFillHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="percentHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPercentHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPercentHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.VPos" name="valignment" override="false" rawType="javafx.geometry.VPos" static="false">
        <getter abstract="false" access="public" final="true" name="getValignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.VPos" index="" name="setValignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" rawType="javafx.geometry.VPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.Priority" name="vgrow" override="false" rawType="javafx.scene.layout.Priority" static="false">
        <getter abstract="false" access="public" final="true" name="getVgrow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.Priority" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.layout.Priority" index="" name="setVgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.layout.Priority arg0" public="true" rawType="javafx.scene.layout.Priority" returnType="void" static="false">
          <parameter genericType="javafx.scene.layout.Priority" name="arg0" type="javafx.scene.layout.Priority"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="StackPane" genericParam="" genericParamPrepend="" name="StackPane" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.StackPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.StackPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Pos" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="false" name="setAlignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TilePane" genericParam="" genericParamPrepend="" name="TilePane" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Orientation arg0, javafx.scene.Node[] arg1" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        <parameter genericType="javafx.scene.Node[]" name="arg1" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.scene.Node[] arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.scene.Node[]" name="arg2" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.geometry.Orientation arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.TilePane" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.geometry.Orientation arg0, double arg1, double arg2, javafx.scene.Node[] arg3" public="true" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.Node[]" name="arg3" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Pos" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefRows" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefTileHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefTileWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTileAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="true" name="getTileHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTileWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getVgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="hgapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="prefColumnsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefRowsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefTileHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefTileWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="false" name="setAlignment" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefColumns" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefRows" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefTileHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefTileWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTileAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="tileAlignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="tileHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tileWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="vgapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="hgap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="prefColumns" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setPrefColumns" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="prefRows" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefRows" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setPrefRows" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefTileHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefTileHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefTileHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefTileWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefTileWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefTileWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Pos" name="tileAlignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getTileAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setTileAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tileHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTileHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="tileWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTileWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="vgap" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVgap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVgap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="VBox" genericParam="" genericParamPrepend="" name="VBox" package="javafx.scene.layout" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.layout.VBox" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.layout.VBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.VBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <constructor access="public" name="javafx.scene.layout.VBox" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.Node[] arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.Node[]" name="arg1" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Pos&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clearConstraints" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="fillWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getMargin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.geometry.Insets" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getVgrow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.layout.Priority" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="isFillWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFillWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMargin" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Insets arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Insets" name="arg1" type="javafx.geometry.Insets"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setVgrow" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.layout.Priority arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.layout.Priority" name="arg1" type="javafx.scene.layout.Priority"/>
      </method>
      <method abstract="false" access="public" final="true" name="spacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Pos" name="alignment" override="false" rawType="javafx.geometry.Pos" static="false">
        <getter abstract="false" access="public" final="true" name="getAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Pos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Pos" index="" name="setAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" rawType="javafx.geometry.Pos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="fillWidth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFillWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFillWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="spacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="AudioClip" genericParam="" genericParamPrepend="" name="AudioClip" package="javafx.scene.media" super="">
      <constructor access="public" name="javafx.scene.media.AudioClip" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <field access="public" final="true" name="INDEFINITE" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="false" name="balanceProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="cycleCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getBalance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getCycleCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getPan" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getPriority" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getRate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getVolume" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="isPlaying" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="panProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="play" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="play" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="play" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="priorityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="rateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="setBalance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setCycleCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setPan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setPriority" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVolume" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="stop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="volumeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="balance" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getBalance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setBalance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="cycleCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getCycleCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="int" index="" name="setCycleCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pan" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getPan" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setPan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="playing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isPlaying" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="priority" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getPriority" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="int" index="" name="setPriority" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="rate" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getRate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setRate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="source" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="volume" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVolume" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVolume" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="AudioEqualizer" genericParam="" genericParamPrepend="" name="AudioEqualizer" package="javafx.scene.media" super="">
      <field access="public" final="true" name="MAX_NUM_BANDS" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="false" name="enabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBands" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.media.EqualizerBand&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="isEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="javafx.scene.media.EqualizerBand" genericType="javafx.collections.ObservableList&lt;javafx.scene.media.EqualizerBand&gt;" name="bands" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getBands" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.media.EqualizerBand&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="enabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="AudioTrack" genericParam="" genericParamPrepend="" name="AudioTrack" package="javafx.scene.media" super="javafx.scene.media.Track" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="getLanguage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="language" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getLanguage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="EqualizerBand" genericParam="" genericParamPrepend="" name="EqualizerBand" package="javafx.scene.media" super="">
      <constructor access="public" name="javafx.scene.media.EqualizerBand" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.media.EqualizerBand" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <field access="public" final="true" name="MAX_GAIN" public="true" static="true" type="double"/>
      <field access="public" final="true" name="MIN_GAIN" public="true" static="true" type="double"/>
      <method abstract="false" access="public" final="false" name="bandwidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="centerFrequencyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="gainProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getBandwidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterFrequency" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getGain" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setBandwidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCenterFrequency" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="bandwidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBandwidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBandwidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="centerFrequency" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterFrequency" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterFrequency" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="gain" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getGain" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setGain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Media" genericParam="" genericParamPrepend="" name="Media" package="javafx.scene.media" super="">
      <constructor access="public" name="javafx.scene.media.Media" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="durationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="errorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.media.MediaException&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getMarkers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.String, javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getMetadata" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="false" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTracks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.media.Track&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="onErrorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="false" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <property genericParam="" genericType="javafx.util.Duration" name="duration" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.media.MediaException" name="error" override="false" rawType="javafx.scene.media.MediaException" static="false">
        <getter abstract="false" access="public" final="true" name="getError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="height" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="java.lang.String, javafx.util.Duration" genericType="javafx.collections.ObservableMap&lt;java.lang.String, javafx.util.Duration&gt;" name="markers" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getMarkers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.String, javafx.util.Duration&gt;" static="false"/>
      </property>
      <property genericParam="java.lang.String, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.String, java.lang.Object&gt;" name="metadata" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getMetadata" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onError" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="source" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getSource" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="javafx.scene.media.Track" genericType="javafx.collections.ObservableList&lt;javafx.scene.media.Track&gt;" name="tracks" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getTracks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.media.Track&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="width" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MediaErrorEvent" genericParam="" genericParamPrepend="" name="MediaErrorEvent" package="javafx.scene.media" super="">
      <field access="public" final="true" name="MEDIA_ERROR" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.scene.media.MediaErrorEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.media.MediaErrorEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getMediaError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.media.MediaErrorEvent" genericType="javafx.event.EventType&lt;javafx.scene.media.MediaErrorEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.scene.media.MediaErrorEvent&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.media.MediaException" name="mediaError" override="false" rawType="javafx.scene.media.MediaException" static="false">
        <getter abstract="false" access="public" final="false" name="getMediaError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MediaException" genericParam="" genericParamPrepend="" name="MediaException" package="javafx.scene.media" super="">
      <method abstract="false" access="public" final="false" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException.Type" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.media.MediaException.Type" name="type" override="false" rawType="javafx.scene.media.MediaException.Type" static="false">
        <getter abstract="false" access="public" final="false" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException.Type" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MediaMarkerEvent" genericParam="" genericParamPrepend="" name="MediaMarkerEvent" package="javafx.scene.media" super="">
      <method abstract="false" access="public" final="false" name="getMarker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Pair&lt;java.lang.String, javafx.util.Duration&gt;" static="false"/>
      <property genericParam="java.lang.String, javafx.util.Duration" genericType="javafx.util.Pair&lt;java.lang.String, javafx.util.Duration&gt;" name="marker" override="false" rawType="javafx.util.Pair" static="false">
        <getter abstract="false" access="public" final="false" name="getMarker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Pair&lt;java.lang.String, javafx.util.Duration&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MediaPlayer" genericParam="" genericParamPrepend="" name="MediaPlayer" package="javafx.scene.media" super="">
      <constructor access="public" name="javafx.scene.media.MediaPlayer" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.media.Media arg0" public="true" static="false">
        <parameter genericType="javafx.scene.media.Media" name="arg0" type="javafx.scene.media.Media"/>
      </constructor>
      <field access="public" final="true" name="INDEFINITE" public="true" static="true" type="int"/>
      <method abstract="false" access="public" final="false" name="audioSpectrumIntervalProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="audioSpectrumListenerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.media.AudioSpectrumListener&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="audioSpectrumNumBandsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="audioSpectrumThresholdProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="autoPlayProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="balanceProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="bufferProgressTimeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="currentCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="currentRateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="currentTimeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="cycleCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="cycleDurationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="dispose" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="errorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.media.MediaException&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAudioEqualizer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.AudioEqualizer" static="false"/>
      <method abstract="false" access="public" final="true" name="getAudioSpectrumInterval" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getAudioSpectrumListener" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.AudioSpectrumListener" static="false"/>
      <method abstract="false" access="public" final="true" name="getAudioSpectrumNumBands" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getAudioSpectrumThreshold" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getBalance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getBufferProgressTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getCurrentCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getCurrentRate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCurrentTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getCycleCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getCycleDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException" static="false"/>
      <method abstract="false" access="public" final="true" name="getMedia" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.Media" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnEndOfMedia" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHalted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnMarker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnPaused" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnPlaying" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnReady" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnRepeat" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnStalled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnStopped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
      <method abstract="false" access="public" final="true" name="getRate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getStatus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaPlayer.Status" static="false"/>
      <method abstract="false" access="public" final="true" name="getStopTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getTotalDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getVolume" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isAutoPlay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMute" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="muteProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="onEndOfMediaProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onErrorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onHaltedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onMarkerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onPausedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onPlayingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onReadyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onRepeatProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onStalledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onStoppedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Runnable&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="pause" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="play" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="rateProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="seek" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAudioSpectrumInterval" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAudioSpectrumListener" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.media.AudioSpectrumListener arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.media.AudioSpectrumListener" name="arg0" type="javafx.scene.media.AudioSpectrumListener"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAudioSpectrumNumBands" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAudioSpectrumThreshold" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAutoPlay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBalance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCycleCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMute" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnEndOfMedia" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHalted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnMarker" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnPaused" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnPlaying" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnReady" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnRepeat" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnStalled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnStopped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartTime" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStopTime" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVolume" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="startTimeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="statusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.media.MediaPlayer.Status&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="stop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="stopTimeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="totalDurationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="volumeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.media.AudioEqualizer" name="audioEqualizer" override="false" rawType="javafx.scene.media.AudioEqualizer" static="false">
        <getter abstract="false" access="public" final="true" name="getAudioEqualizer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.AudioEqualizer" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="audioSpectrumInterval" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAudioSpectrumInterval" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAudioSpectrumInterval" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.media.AudioSpectrumListener" name="audioSpectrumListener" override="false" rawType="javafx.scene.media.AudioSpectrumListener" static="false">
        <getter abstract="false" access="public" final="true" name="getAudioSpectrumListener" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.AudioSpectrumListener" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.media.AudioSpectrumListener" index="" name="setAudioSpectrumListener" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.media.AudioSpectrumListener arg0" public="true" rawType="javafx.scene.media.AudioSpectrumListener" returnType="void" static="false">
          <parameter genericType="javafx.scene.media.AudioSpectrumListener" name="arg0" type="javafx.scene.media.AudioSpectrumListener"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="audioSpectrumNumBands" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getAudioSpectrumNumBands" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setAudioSpectrumNumBands" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="audioSpectrumThreshold" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getAudioSpectrumThreshold" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setAudioSpectrumThreshold" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="autoPlay" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAutoPlay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAutoPlay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="balance" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBalance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBalance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="bufferProgressTime" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getBufferProgressTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="currentCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getCurrentCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="currentRate" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCurrentRate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="currentTime" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getCurrentTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="cycleCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getCycleCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setCycleCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="cycleDuration" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getCycleDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.media.MediaException" name="error" override="false" rawType="javafx.scene.media.MediaException" static="false">
        <getter abstract="false" access="public" final="true" name="getError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaException" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.media.Media" name="media" override="false" rawType="javafx.scene.media.Media" static="false">
        <getter abstract="false" access="public" final="true" name="getMedia" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.Media" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="mute" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMute" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setMute" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onEndOfMedia" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnEndOfMedia" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnEndOfMedia" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onError" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onHalted" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHalted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnHalted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.media.MediaMarkerEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;" name="onMarker" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnMarker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.media.MediaMarkerEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;" index="" name="setOnMarker" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaMarkerEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onPaused" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnPaused" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnPaused" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onPlaying" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnPlaying" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnPlaying" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onReady" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnReady" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnReady" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onRepeat" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnRepeat" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnRepeat" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onStalled" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnStalled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnStalled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Runnable" name="onStopped" override="false" rawType="java.lang.Runnable" static="false">
        <getter abstract="false" access="public" final="true" name="getOnStopped" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Runnable" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Runnable" index="" name="setOnStopped" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Runnable arg0" public="true" rawType="java.lang.Runnable" returnType="void" static="false">
          <parameter genericType="java.lang.Runnable" name="arg0" type="java.lang.Runnable"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="rate" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRate" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="startTime" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getStartTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.util.Duration" index="" name="setStartTime" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" rawType="javafx.util.Duration" returnType="void" static="false">
          <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.media.MediaPlayer.Status" name="status" override="false" rawType="javafx.scene.media.MediaPlayer.Status" static="false">
        <getter abstract="false" access="public" final="true" name="getStatus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaPlayer.Status" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="stopTime" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getStopTime" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.util.Duration" index="" name="setStopTime" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" rawType="javafx.util.Duration" returnType="void" static="false">
          <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="totalDuration" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getTotalDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="volume" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVolume" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVolume" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MediaView" genericParam="" genericParamPrepend="" name="MediaView" package="javafx.scene.media" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.media.MediaView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.media.MediaView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.media.MediaPlayer arg0" public="true" static="false">
        <parameter genericType="javafx.scene.media.MediaPlayer" name="arg0" type="javafx.scene.media.MediaPlayer"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="fitHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fitWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getFitHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFitWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMediaPlayer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaPlayer" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getViewport" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isPreserveRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="mediaPlayerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.media.MediaPlayer&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onErrorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="preserveRatioProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setFitHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFitWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMediaPlayer" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.media.MediaPlayer arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.media.MediaPlayer" name="arg0" type="javafx.scene.media.MediaPlayer"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPreserveRatio" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSmooth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setViewport" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="smoothProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="viewportProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Rectangle2D&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="fitHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFitHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFitHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="fitWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFitWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFitWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.media.MediaPlayer" name="mediaPlayer" override="false" rawType="javafx.scene.media.MediaPlayer" static="false">
        <getter abstract="false" access="public" final="true" name="getMediaPlayer" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.media.MediaPlayer" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.media.MediaPlayer" index="" name="setMediaPlayer" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.media.MediaPlayer arg0" public="true" rawType="javafx.scene.media.MediaPlayer" returnType="void" static="false">
          <parameter genericType="javafx.scene.media.MediaPlayer" name="arg0" type="javafx.scene.media.MediaPlayer"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.media.MediaErrorEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;" name="onError" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.media.MediaErrorEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;" index="" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.media.MediaErrorEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="preserveRatio" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPreserveRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setPreserveRatio" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="smooth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSmooth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Rectangle2D" name="viewport" override="false" rawType="javafx.geometry.Rectangle2D" static="false">
        <getter abstract="false" access="public" final="true" name="getViewport" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Rectangle2D" index="" name="setViewport" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" rawType="javafx.geometry.Rectangle2D" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SubtitleTrack" genericParam="" genericParamPrepend="" name="SubtitleTrack" package="javafx.scene.media" super="javafx.scene.media.Track" superParam="" superParamPrepend=""/>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Track" genericParam="" genericParamPrepend="" name="Track" package="javafx.scene.media" super="">
      <method abstract="false" access="public" final="true" name="getLocale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Locale" static="false"/>
      <method abstract="false" access="public" final="true" name="getMetadata" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Map&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTrackID" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="long" static="false"/>
      <method abstract="false" access="public" final="true" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.util.Locale" name="locale" override="false" rawType="java.util.Locale" static="false">
        <getter abstract="false" access="public" final="true" name="getLocale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Locale" static="false"/>
      </property>
      <property genericParam="java.lang.String, java.lang.Object" genericType="java.util.Map&lt;java.lang.String, java.lang.Object&gt;" name="metadata" override="false" rawType="java.util.Map" static="false">
        <getter abstract="false" access="public" final="true" name="getMetadata" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Map&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="long" name="trackID" override="false" rawType="long" static="false">
        <getter abstract="false" access="public" final="true" name="getTrackID" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="long" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="VideoTrack" genericParam="" genericParamPrepend="" name="VideoTrack" package="javafx.scene.media" super="javafx.scene.media.Track" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <property genericParam="" genericType="int" name="height" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="width" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Color" genericParam="" genericParamPrepend="" name="Color" package="javafx.scene.paint" super="javafx.scene.paint.Paint" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.paint.Color" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <field access="public" final="true" name="ALICEBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="ANTIQUEWHITE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="AQUA" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="AQUAMARINE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="AZURE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BEIGE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BISQUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BLACK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BLANCHEDALMOND" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BLUEVIOLET" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BROWN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="BURLYWOOD" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CADETBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CHARTREUSE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CHOCOLATE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CORAL" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CORNFLOWERBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CORNSILK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CRIMSON" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="CYAN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKCYAN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKGOLDENROD" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKGRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKGREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKKHAKI" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKMAGENTA" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKOLIVEGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKORANGE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKORCHID" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKRED" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKSALMON" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKSEAGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKSLATEBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKSLATEGRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKSLATEGREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKTURQUOISE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DARKVIOLET" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DEEPPINK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DEEPSKYBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DIMGRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DIMGREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="DODGERBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="FIREBRICK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="FLORALWHITE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="FORESTGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="FUCHSIA" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GAINSBORO" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GHOSTWHITE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GOLD" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GOLDENROD" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GREENYELLOW" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="GREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="HONEYDEW" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="HOTPINK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="INDIANRED" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="INDIGO" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="IVORY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="KHAKI" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LAVENDER" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LAVENDERBLUSH" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LAWNGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LEMONCHIFFON" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTCORAL" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTCYAN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTGOLDENRODYELLOW" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTGRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTGREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTPINK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTSALMON" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTSEAGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTSKYBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTSLATEGRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTSLATEGREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTSTEELBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIGHTYELLOW" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIME" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LIMEGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="LINEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MAGENTA" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MAROON" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMAQUAMARINE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMORCHID" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMPURPLE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMSEAGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMSLATEBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMSPRINGGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMTURQUOISE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MEDIUMVIOLETRED" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MIDNIGHTBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MINTCREAM" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MISTYROSE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="MOCCASIN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="NAVAJOWHITE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="NAVY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="OLDLACE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="OLIVE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="OLIVEDRAB" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="ORANGE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="ORANGERED" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="ORCHID" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PALEGOLDENROD" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PALEGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PALETURQUOISE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PALEVIOLETRED" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PAPAYAWHIP" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PEACHPUFF" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PERU" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PINK" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PLUM" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="POWDERBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="PURPLE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="RED" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="ROSYBROWN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="ROYALBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SADDLEBROWN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SALMON" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SANDYBROWN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SEAGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SEASHELL" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SIENNA" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SILVER" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SKYBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SLATEBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SLATEGRAY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SLATEGREY" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SNOW" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="SPRINGGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="STEELBLUE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="TAN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="TEAL" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="THISTLE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="TOMATO" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="TRANSPARENT" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="TURQUOISE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="VIOLET" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="WHEAT" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="WHITE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="WHITESMOKE" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="YELLOW" public="true" static="true" type="javafx.scene.paint.Color"/>
      <field access="public" final="true" name="YELLOWGREEN" public="true" static="true" type="javafx.scene.paint.Color"/>
      <method abstract="false" access="public" final="false" name="brighter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="false" name="color" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="color" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="darker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="false" name="deriveColor" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="javafx.scene.paint.Color" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="desaturate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBlue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getBrightness" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getGreen" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getHue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getSaturation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="gray" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="gray" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="grayRgb" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="grayRgb" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, double arg1" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="grayscale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="hsb" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="hsb" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="interpolate" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, double arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="interpolate" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.paint.Color arg0, double arg1" public="true" returnType="javafx.scene.paint.Color" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="invert" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="rgb" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, int arg2" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="rgb" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, int arg2, double arg3" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="saturate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="valueOf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="web" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="web" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, double arg1" public="true" returnType="javafx.scene.paint.Color" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="blue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBlue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="brightness" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getBrightness" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="green" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getGreen" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="hue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getHue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="opacity" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="opaque" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="red" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="saturation" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getSaturation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ImagePattern" genericParam="" genericParamPrepend="" name="ImagePattern" package="javafx.scene.paint" super="javafx.scene.paint.Paint" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.paint.ImagePattern" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </constructor>
      <constructor access="public" name="javafx.scene.paint.ImagePattern" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="javafx.scene.image.Image arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5" public="true" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isProportional" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="image" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getImage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="opaque" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="proportional" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isProportional" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="LinearGradient" genericParam="" genericParamPrepend="" name="LinearGradient" package="javafx.scene.paint" super="javafx.scene.paint.Paint" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.paint.LinearGradient" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, boolean arg4, javafx.scene.paint.CycleMethod arg5, java.util.List&lt;javafx.scene.paint.Stop&gt; arg6" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="javafx.scene.paint.CycleMethod" name="arg5" type="javafx.scene.paint.CycleMethod"/>
        <parameter genericType="java.util.List&lt;javafx.scene.paint.Stop&gt;" name="arg6" type="java.util.List"/>
      </constructor>
      <constructor access="public" name="javafx.scene.paint.LinearGradient" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, boolean arg4, javafx.scene.paint.CycleMethod arg5, javafx.scene.paint.Stop[] arg6" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="boolean" name="arg4" type="boolean"/>
        <parameter genericType="javafx.scene.paint.CycleMethod" name="arg5" type="javafx.scene.paint.CycleMethod"/>
        <parameter genericType="javafx.scene.paint.Stop[]" name="arg6" type="javafx.scene.paint.Stop[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCycleMethod" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.CycleMethod" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStops" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.paint.Stop&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isProportional" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="valueOf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.paint.LinearGradient" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="" genericType="javafx.scene.paint.CycleMethod" name="cycleMethod" override="false" rawType="javafx.scene.paint.CycleMethod" static="false">
        <getter abstract="false" access="public" final="true" name="getCycleMethod" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.CycleMethod" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="endX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="endY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="opaque" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="proportional" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isProportional" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="startX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="startY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.scene.paint.Stop" genericType="java.util.List&lt;javafx.scene.paint.Stop&gt;" name="stops" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getStops" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.paint.Stop&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Material" genericParam="" genericParamPrepend="" name="Material" package="javafx.scene.paint" super=""/>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Paint" genericParam="" genericParamPrepend="" name="Paint" package="javafx.scene.paint" super="">
      <method abstract="true" access="public" final="false" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="valueOf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.paint.Paint" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="" genericType="boolean" name="opaque" override="false" rawType="boolean" static="false">
        <getter abstract="true" access="public" final="false" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PhongMaterial" genericParam="" genericParamPrepend="" name="PhongMaterial" package="javafx.scene.paint" super="javafx.scene.paint.Material" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.paint.PhongMaterial" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.paint.PhongMaterial" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </constructor>
      <constructor access="public" name="javafx.scene.paint.PhongMaterial" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.paint.Color arg0, javafx.scene.image.Image arg1, javafx.scene.image.Image arg2, javafx.scene.image.Image arg3, javafx.scene.image.Image arg4" public="true" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        <parameter genericType="javafx.scene.image.Image" name="arg1" type="javafx.scene.image.Image"/>
        <parameter genericType="javafx.scene.image.Image" name="arg2" type="javafx.scene.image.Image"/>
        <parameter genericType="javafx.scene.image.Image" name="arg3" type="javafx.scene.image.Image"/>
        <parameter genericType="javafx.scene.image.Image" name="arg4" type="javafx.scene.image.Image"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="bumpMapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="diffuseColorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="diffuseMapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getBumpMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getDiffuseColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="getDiffuseMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelfIlluminationMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpecularColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpecularMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
      <method abstract="false" access="public" final="true" name="getSpecularPower" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="selfIlluminationMapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setBumpMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDiffuseColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDiffuseMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelfIlluminationMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpecularColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpecularMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSpecularPower" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="specularColorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Color&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="specularMapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="specularPowerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.image.Image" name="bumpMap" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getBumpMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.image.Image" index="" name="setBumpMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="diffuseColor" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getDiffuseColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setDiffuseColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="diffuseMap" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getDiffuseMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.image.Image" index="" name="setDiffuseMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="selfIlluminationMap" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getSelfIlluminationMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.image.Image" index="" name="setSelfIlluminationMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="specularColor" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getSpecularColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setSpecularColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.image.Image" name="specularMap" override="false" rawType="javafx.scene.image.Image" static="false">
        <getter abstract="false" access="public" final="true" name="getSpecularMap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.Image" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.image.Image" index="" name="setSpecularMap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.image.Image arg0" public="true" rawType="javafx.scene.image.Image" returnType="void" static="false">
          <parameter genericType="javafx.scene.image.Image" name="arg0" type="javafx.scene.image.Image"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="specularPower" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSpecularPower" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSpecularPower" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="RadialGradient" genericParam="" genericParamPrepend="" name="RadialGradient" package="javafx.scene.paint" super="javafx.scene.paint.Paint" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.paint.RadialGradient" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, javafx.scene.paint.CycleMethod arg6, java.util.List&lt;javafx.scene.paint.Stop&gt; arg7" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="javafx.scene.paint.CycleMethod" name="arg6" type="javafx.scene.paint.CycleMethod"/>
        <parameter genericType="java.util.List&lt;javafx.scene.paint.Stop&gt;" name="arg7" type="java.util.List"/>
      </constructor>
      <constructor access="public" name="javafx.scene.paint.RadialGradient" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, javafx.scene.paint.CycleMethod arg6, javafx.scene.paint.Stop[] arg7" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="javafx.scene.paint.CycleMethod" name="arg6" type="javafx.scene.paint.CycleMethod"/>
        <parameter genericType="javafx.scene.paint.Stop[]" name="arg7" type="javafx.scene.paint.Stop[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCycleMethod" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.CycleMethod" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFocusDistance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStops" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.paint.Stop&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isProportional" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="valueOf" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.paint.RadialGradient" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="" genericType="double" name="centerX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="centerY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.CycleMethod" name="cycleMethod" override="false" rawType="javafx.scene.paint.CycleMethod" static="false">
        <getter abstract="false" access="public" final="true" name="getCycleMethod" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.CycleMethod" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="focusAngle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="focusDistance" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusDistance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="opaque" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isOpaque" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="proportional" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isProportional" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="javafx.scene.paint.Stop" genericType="java.util.List&lt;javafx.scene.paint.Stop&gt;" name="stops" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="true" name="getStops" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.scene.paint.Stop&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Stop" genericParam="" genericParamPrepend="" name="Stop" package="javafx.scene.paint" super="">
      <constructor access="public" name="javafx.scene.paint.Stop" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.paint.Color arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.paint.Color" name="arg1" type="javafx.scene.paint.Color"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      <method abstract="false" access="public" final="true" name="getOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <getter abstract="false" access="public" final="true" name="getColor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Color" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="offset" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Arc" genericParam="" genericParamPrepend="" name="Arc" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Arc" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Arc" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="centerXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="centerYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadiusX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadiusY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.ArcType" static="false"/>
      <method abstract="false" access="public" final="true" name="lengthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setCenterX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCenterY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadiusX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadiusY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.ArcType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.ArcType" name="arg0" type="javafx.scene.shape.ArcType"/>
      </method>
      <method abstract="false" access="public" final="true" name="startAngleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="typeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.ArcType&gt;" static="false"/>
      <property genericParam="" genericType="double" name="centerX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="centerY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="length" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLength" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLength" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radiusX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadiusX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadiusX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radiusY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadiusY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadiusY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startAngle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.ArcType" name="type" override="false" rawType="javafx.scene.shape.ArcType" static="false">
        <getter abstract="false" access="public" final="true" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.ArcType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.ArcType" index="" name="setType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.ArcType arg0" public="true" rawType="javafx.scene.shape.ArcType" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.ArcType" name="arg0" type="javafx.scene.shape.ArcType"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ArcTo" genericParam="" genericParamPrepend="" name="ArcTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.ArcTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.ArcTo" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, boolean arg5, boolean arg6" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="boolean" name="arg5" type="boolean"/>
        <parameter genericType="boolean" name="arg6" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="XAxisRotationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadiusX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadiusY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getXAxisRotation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isLargeArcFlag" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSweepFlag" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="largeArcFlagProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setLargeArcFlag" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadiusX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadiusY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSweepFlag" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setXAxisRotation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="sweepFlagProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="largeArcFlag" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isLargeArcFlag" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setLargeArcFlag" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radiusX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadiusX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadiusX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radiusY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadiusY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadiusY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="sweepFlag" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSweepFlag" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSweepFlag" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="xAxisRotation" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getXAxisRotation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setXAxisRotation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Box" genericParam="" genericParamPrepend="" name="Box" package="javafx.scene.shape" super="javafx.scene.shape.Shape3D" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Box" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Box" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_SIZE" public="true" static="true" type="double"/>
      <method abstract="false" access="public" final="true" name="depthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getDepth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setDepth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="depth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getDepth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setDepth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Circle" genericParam="" genericParamPrepend="" name="Circle" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Circle" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Circle" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Circle" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.scene.paint.Paint arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg1" type="javafx.scene.paint.Paint"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Circle" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Circle" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, javafx.scene.paint.Paint arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg3" type="javafx.scene.paint.Paint"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="centerXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="centerYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setCenterX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCenterY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="centerX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="centerY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ClosePath" genericParam="" genericParamPrepend="" name="ClosePath" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.ClosePath" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CubicCurve" genericParam="" genericParamPrepend="" name="CubicCurve" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.CubicCurve" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.CubicCurve" parameterCount="8" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="controlX1Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlX2Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlY1Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlY2Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="endXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="endYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlX1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlX2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlY1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlY2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setControlX1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlX2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlY1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlY2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEndX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEndY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="startXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="startYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="controlX1" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlX1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlX1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlX2" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlX2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlX2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlY1" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlY1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlY1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlY2" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlY2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlY2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="endX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="endY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CubicCurveTo" genericParam="" genericParamPrepend="" name="CubicCurveTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.CubicCurveTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.CubicCurveTo" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="controlX1Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlX2Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlY1Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlY2Property" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlX1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlX2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlY1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlY2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setControlX1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlX2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlY1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlY2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="controlX1" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlX1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlX1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlX2" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlX2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlX2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlY1" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlY1" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlY1" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlY2" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlY2" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlY2" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Cylinder" genericParam="" genericParamPrepend="" name="Cylinder" package="javafx.scene.shape" super="javafx.scene.shape.Shape3D" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Cylinder" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Cylinder" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Cylinder" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, int arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getDivisions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="int" name="divisions" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getDivisions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Ellipse" genericParam="" genericParamPrepend="" name="Ellipse" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Ellipse" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Ellipse" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Ellipse" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="centerXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="centerYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadiusX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadiusY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setCenterX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCenterY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadiusX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRadiusY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="centerX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="centerY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCenterY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCenterY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radiusX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadiusX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadiusX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="radiusY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadiusY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadiusY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="HLineTo" genericParam="" genericParamPrepend="" name="HLineTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.HLineTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.HLineTo" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Line" genericParam="" genericParamPrepend="" name="Line" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Line" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Line" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="endXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="endYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setEndX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEndY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="startXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="startYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="endX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="endY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="LineTo" genericParam="" genericParamPrepend="" name="LineTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.LineTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.LineTo" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Mesh" genericParam="" genericParamPrepend="" name="Mesh" package="javafx.scene.shape" super=""/>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MeshView" genericParam="" genericParamPrepend="" name="MeshView" package="javafx.scene.shape" super="javafx.scene.shape.Shape3D" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.MeshView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.MeshView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.Mesh arg0" public="true" static="false">
        <parameter genericType="javafx.scene.shape.Mesh" name="arg0" type="javafx.scene.shape.Mesh"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getMesh" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.Mesh" static="false"/>
      <method abstract="false" access="public" final="true" name="meshProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.Mesh&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setMesh" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.Mesh arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.Mesh" name="arg0" type="javafx.scene.shape.Mesh"/>
      </method>
      <property genericParam="" genericType="javafx.scene.shape.Mesh" name="mesh" override="false" rawType="javafx.scene.shape.Mesh" static="false">
        <getter abstract="false" access="public" final="true" name="getMesh" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.Mesh" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.Mesh" index="" name="setMesh" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.Mesh arg0" public="true" rawType="javafx.scene.shape.Mesh" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.Mesh" name="arg0" type="javafx.scene.shape.Mesh"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MoveTo" genericParam="" genericParamPrepend="" name="MoveTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.MoveTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.MoveTo" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Path" genericParam="" genericParamPrepend="" name="Path" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Path" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Path" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends javafx.scene.shape.PathElement&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.Collection&lt;? extends javafx.scene.shape.PathElement&gt;" name="arg0" type="java.util.Collection"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Path" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.PathElement[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.shape.PathElement[]" name="arg0" type="javafx.scene.shape.PathElement[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="fillRuleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.FillRule&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getElements" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.shape.PathElement&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFillRule" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.FillRule" static="false"/>
      <method abstract="false" access="public" final="true" name="setFillRule" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.FillRule arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.FillRule" name="arg0" type="javafx.scene.shape.FillRule"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.scene.shape.PathElement" genericType="javafx.collections.ObservableList&lt;javafx.scene.shape.PathElement&gt;" name="elements" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getElements" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.shape.PathElement&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.FillRule" name="fillRule" override="false" rawType="javafx.scene.shape.FillRule" static="false">
        <getter abstract="false" access="public" final="true" name="getFillRule" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.FillRule" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.FillRule" index="" name="setFillRule" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.FillRule arg0" public="true" rawType="javafx.scene.shape.FillRule" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.FillRule" name="arg0" type="javafx.scene.shape.FillRule"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="PathElement" genericParam="" genericParamPrepend="" name="PathElement" package="javafx.scene.shape" super="">
      <constructor access="public" name="javafx.scene.shape.PathElement" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="absoluteProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isAbsolute" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setAbsolute" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="absolute" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAbsolute" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAbsolute" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Polygon" genericParam="" genericParamPrepend="" name="Polygon" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Polygon" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Polygon" parameterCount="1" parametersCall="arg0" parametersDeclaration="double[] arg0" public="true" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="java.lang.Double" genericType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" name="points" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Polyline" genericParam="" genericParamPrepend="" name="Polyline" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Polyline" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Polyline" parameterCount="1" parametersCall="arg0" parametersDeclaration="double[] arg0" public="true" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="java.lang.Double" genericType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" name="points" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="QuadCurve" genericParam="" genericParamPrepend="" name="QuadCurve" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.QuadCurve" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.QuadCurve" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="controlXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="endXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="endYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setControlX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEndX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEndY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStartY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="startXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="startYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="double" name="controlX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="endX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="endY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getEndY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setEndY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="startY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStartY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStartY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="QuadCurveTo" genericParam="" genericParamPrepend="" name="QuadCurveTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.QuadCurveTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.QuadCurveTo" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="controlXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="controlYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getControlY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setControlX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setControlY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="controlX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="controlY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getControlY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setControlY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Rectangle" genericParam="" genericParamPrepend="" name="Rectangle" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Rectangle" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Rectangle" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Rectangle" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.scene.paint.Paint arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.scene.paint.Paint" name="arg2" type="javafx.scene.paint.Paint"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Rectangle" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="arcHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="arcWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getArcHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getArcWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setArcHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setArcWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="arcHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getArcHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setArcHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="arcWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getArcWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setArcWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SVGPath" genericParam="" genericParamPrepend="" name="SVGPath" package="javafx.scene.shape" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.SVGPath" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fillRuleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.FillRule&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getFillRule" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.FillRule" static="false"/>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFillRule" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.FillRule arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.FillRule" name="arg0" type="javafx.scene.shape.FillRule"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="content" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.FillRule" name="fillRule" override="false" rawType="javafx.scene.shape.FillRule" static="false">
        <getter abstract="false" access="public" final="true" name="getFillRule" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.FillRule" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.FillRule" index="" name="setFillRule" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.FillRule arg0" public="true" rawType="javafx.scene.shape.FillRule" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.FillRule" name="arg0" type="javafx.scene.shape.FillRule"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Shape" genericParam="" genericParamPrepend="" name="Shape" package="javafx.scene.shape" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Shape" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="fillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeDashArray" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeDashOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeLineCap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineCap" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeLineJoin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineJoin" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeMiterLimit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeType" static="false"/>
      <method abstract="false" access="public" final="true" name="getStrokeWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="intersect" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.shape.Shape arg0, javafx.scene.shape.Shape arg1" public="true" returnType="javafx.scene.shape.Shape" static="true">
        <parameter genericType="javafx.scene.shape.Shape" name="arg0" type="javafx.scene.shape.Shape"/>
        <parameter genericType="javafx.scene.shape.Shape" name="arg1" type="javafx.scene.shape.Shape"/>
      </method>
      <method abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSmooth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStroke" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrokeDashOffset" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrokeLineCap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineCap arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.StrokeLineCap" name="arg0" type="javafx.scene.shape.StrokeLineCap"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrokeLineJoin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineJoin arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.StrokeLineJoin" name="arg0" type="javafx.scene.shape.StrokeLineJoin"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrokeMiterLimit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrokeType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.StrokeType" name="arg0" type="javafx.scene.shape.StrokeType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrokeWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="smoothProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeDashOffsetProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeLineCapProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.StrokeLineCap&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeLineJoinProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.StrokeLineJoin&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeMiterLimitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.StrokeType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="strokeWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="subtract" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.shape.Shape arg0, javafx.scene.shape.Shape arg1" public="true" returnType="javafx.scene.shape.Shape" static="true">
        <parameter genericType="javafx.scene.shape.Shape" name="arg0" type="javafx.scene.shape.Shape"/>
        <parameter genericType="javafx.scene.shape.Shape" name="arg1" type="javafx.scene.shape.Shape"/>
      </method>
      <method abstract="false" access="public" final="false" name="union" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.shape.Shape arg0, javafx.scene.shape.Shape arg1" public="true" returnType="javafx.scene.shape.Shape" static="true">
        <parameter genericType="javafx.scene.shape.Shape" name="arg0" type="javafx.scene.shape.Shape"/>
        <parameter genericType="javafx.scene.shape.Shape" name="arg1" type="javafx.scene.shape.Shape"/>
      </method>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="fill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="smooth" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSmooth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSmooth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="stroke" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getStroke" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setStroke" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="java.lang.Double" genericType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" name="strokeDashArray" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeDashArray" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Double&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="strokeDashOffset" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeDashOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStrokeDashOffset" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeLineCap" name="strokeLineCap" override="false" rawType="javafx.scene.shape.StrokeLineCap" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeLineCap" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineCap" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.StrokeLineCap" index="" name="setStrokeLineCap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineCap arg0" public="true" rawType="javafx.scene.shape.StrokeLineCap" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.StrokeLineCap" name="arg0" type="javafx.scene.shape.StrokeLineCap"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeLineJoin" name="strokeLineJoin" override="false" rawType="javafx.scene.shape.StrokeLineJoin" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeLineJoin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeLineJoin" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.StrokeLineJoin" index="" name="setStrokeLineJoin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeLineJoin arg0" public="true" rawType="javafx.scene.shape.StrokeLineJoin" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.StrokeLineJoin" name="arg0" type="javafx.scene.shape.StrokeLineJoin"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="strokeMiterLimit" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeMiterLimit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStrokeMiterLimit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.StrokeType" name="strokeType" override="false" rawType="javafx.scene.shape.StrokeType" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.StrokeType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.StrokeType" index="" name="setStrokeType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.StrokeType arg0" public="true" rawType="javafx.scene.shape.StrokeType" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.StrokeType" name="arg0" type="javafx.scene.shape.StrokeType"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="strokeWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getStrokeWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setStrokeWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Shape3D" genericParam="" genericParamPrepend="" name="Shape3D" package="javafx.scene.shape" super="javafx.scene.Node" superParam="" superParamPrepend="">
      <method abstract="false" access="public" final="true" name="cullFaceProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.CullFace&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="drawModeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.DrawMode&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCullFace" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.CullFace" static="false"/>
      <method abstract="false" access="public" final="true" name="getDrawMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.DrawMode" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaterial" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Material" static="false"/>
      <method abstract="false" access="public" final="true" name="materialProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Material&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCullFace" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.CullFace arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.CullFace" name="arg0" type="javafx.scene.shape.CullFace"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDrawMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.DrawMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.DrawMode" name="arg0" type="javafx.scene.shape.DrawMode"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaterial" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Material arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Material" name="arg0" type="javafx.scene.paint.Material"/>
      </method>
      <property genericParam="" genericType="javafx.scene.shape.CullFace" name="cullFace" override="false" rawType="javafx.scene.shape.CullFace" static="false">
        <getter abstract="false" access="public" final="true" name="getCullFace" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.CullFace" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.CullFace" index="" name="setCullFace" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.CullFace arg0" public="true" rawType="javafx.scene.shape.CullFace" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.CullFace" name="arg0" type="javafx.scene.shape.CullFace"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.DrawMode" name="drawMode" override="false" rawType="javafx.scene.shape.DrawMode" static="false">
        <getter abstract="false" access="public" final="true" name="getDrawMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.DrawMode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.DrawMode" index="" name="setDrawMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.DrawMode arg0" public="true" rawType="javafx.scene.shape.DrawMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.DrawMode" name="arg0" type="javafx.scene.shape.DrawMode"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Material" name="material" override="false" rawType="javafx.scene.paint.Material" static="false">
        <getter abstract="false" access="public" final="true" name="getMaterial" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Material" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Material" index="" name="setMaterial" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Material arg0" public="true" rawType="javafx.scene.paint.Material" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Material" name="arg0" type="javafx.scene.paint.Material"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Sphere" genericParam="" genericParamPrepend="" name="Sphere" package="javafx.scene.shape" super="javafx.scene.shape.Shape3D" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.Sphere" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.Sphere" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.shape.Sphere" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, int arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getDivisions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="radiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <property genericParam="" genericType="int" name="divisions" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getDivisions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="radius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TriangleMesh" genericParam="" genericParamPrepend="" name="TriangleMesh" package="javafx.scene.shape" super="javafx.scene.shape.Mesh" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.TriangleMesh" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.TriangleMesh" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.VertexFormat arg0" public="true" static="false">
        <parameter genericType="javafx.scene.shape.VertexFormat" name="arg0" type="javafx.scene.shape.VertexFormat"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getFaceElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getFaceSmoothingGroups" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableIntegerArray" static="false"/>
      <method abstract="false" access="public" final="true" name="getFaces" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.ObservableFaceArray" static="false"/>
      <method abstract="false" access="public" final="true" name="getNormalElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getNormals" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableFloatArray" static="false"/>
      <method abstract="false" access="public" final="true" name="getPointElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableFloatArray" static="false"/>
      <method abstract="false" access="public" final="true" name="getTexCoordElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getTexCoords" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableFloatArray" static="false"/>
      <method abstract="false" access="public" final="true" name="getVertexFormat" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.VertexFormat" static="false"/>
      <method abstract="false" access="public" final="true" name="setVertexFormat" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.VertexFormat arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.shape.VertexFormat" name="arg0" type="javafx.scene.shape.VertexFormat"/>
      </method>
      <method abstract="false" access="public" final="true" name="vertexFormatProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.shape.VertexFormat&gt;" static="false"/>
      <property genericParam="" genericType="int" name="faceElementSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getFaceElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.collections.ObservableIntegerArray" name="faceSmoothingGroups" override="false" rawType="javafx.collections.ObservableIntegerArray" static="false">
        <getter abstract="false" access="public" final="true" name="getFaceSmoothingGroups" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableIntegerArray" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.ObservableFaceArray" name="faces" override="false" rawType="javafx.scene.shape.ObservableFaceArray" static="false">
        <getter abstract="false" access="public" final="true" name="getFaces" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.ObservableFaceArray" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="normalElementSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getNormalElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.collections.ObservableFloatArray" name="normals" override="false" rawType="javafx.collections.ObservableFloatArray" static="false">
        <getter abstract="false" access="public" final="true" name="getNormals" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableFloatArray" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="pointElementSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getPointElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.collections.ObservableFloatArray" name="points" override="false" rawType="javafx.collections.ObservableFloatArray" static="false">
        <getter abstract="false" access="public" final="true" name="getPoints" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableFloatArray" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="texCoordElementSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getTexCoordElementSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.collections.ObservableFloatArray" name="texCoords" override="false" rawType="javafx.collections.ObservableFloatArray" static="false">
        <getter abstract="false" access="public" final="true" name="getTexCoords" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableFloatArray" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.shape.VertexFormat" name="vertexFormat" override="false" rawType="javafx.scene.shape.VertexFormat" static="false">
        <getter abstract="false" access="public" final="true" name="getVertexFormat" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.shape.VertexFormat" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.shape.VertexFormat" index="" name="setVertexFormat" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.shape.VertexFormat arg0" public="true" rawType="javafx.scene.shape.VertexFormat" returnType="void" static="false">
          <parameter genericType="javafx.scene.shape.VertexFormat" name="arg0" type="javafx.scene.shape.VertexFormat"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="VLineTo" genericParam="" genericParamPrepend="" name="VLineTo" package="javafx.scene.shape" super="javafx.scene.shape.PathElement" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.shape.VLineTo" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.shape.VLineTo" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="VertexFormat" genericParam="" genericParamPrepend="" name="VertexFormat" package="javafx.scene.shape" super="">
      <field access="public" final="true" name="POINT_NORMAL_TEXCOORD" public="true" static="true" type="javafx.scene.shape.VertexFormat"/>
      <field access="public" final="true" name="POINT_TEXCOORD" public="true" static="true" type="javafx.scene.shape.VertexFormat"/>
      <method abstract="false" access="public" final="false" name="getNormalIndexOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getPointIndexOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getTexCoordIndexOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getVertexIndexSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="int" name="normalIndexOffset" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getNormalIndexOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="pointIndexOffset" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getPointIndexOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="texCoordIndexOffset" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getTexCoordIndexOffset" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="vertexIndexSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getVertexIndexSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Font" genericParam="" genericParamPrepend="" name="Font" package="javafx.scene.text" super="">
      <constructor access="public" name="javafx.scene.text.Font" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.text.Font" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, double arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, double arg1" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.text.FontPosture arg1, double arg2" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.text.FontPosture" name="arg1" type="javafx.scene.text.FontPosture"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.text.FontWeight arg1, double arg2" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.text.FontWeight" name="arg1" type="javafx.scene.text.FontWeight"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, javafx.scene.text.FontWeight arg1, javafx.scene.text.FontPosture arg2, double arg3" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.text.FontWeight" name="arg1" type="javafx.scene.text.FontWeight"/>
        <parameter genericType="javafx.scene.text.FontPosture" name="arg2" type="javafx.scene.text.FontPosture"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getDefault" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="true"/>
      <method abstract="false" access="public" final="false" name="getFamilies" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.lang.String&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getFamily" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getFontNames" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.lang.String&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getFontNames" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.util.List&lt;java.lang.String&gt;" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="loadFont" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.io.InputStream arg0, double arg1" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.io.InputStream" name="arg0" type="java.io.InputStream"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="loadFont" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, double arg1" public="true" returnType="javafx.scene.text.Font" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="family" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getFamily" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="size" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Text" genericParam="" genericParamPrepend="" name="Text" package="javafx.scene.text" super="javafx.scene.shape.Shape" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.text.Text" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.text.Text" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="javafx.scene.text.Text" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, java.lang.String arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="baselineOffsetProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="boundsTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.TextBoundsType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fontProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.Font&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fontSmoothingTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.FontSmoothingType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getBoundsType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextBoundsType" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
      <method abstract="false" access="public" final="true" name="getFontSmoothingType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.FontSmoothingType" static="false"/>
      <method abstract="false" access="public" final="true" name="getLineSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextOrigin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
      <method abstract="false" access="public" final="true" name="getWrappingWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="isStrikethrough" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isUnderline" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="lineSpacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBoundsType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextBoundsType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.TextBoundsType" name="arg0" type="javafx.scene.text.TextBoundsType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFontSmoothingType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.FontSmoothingType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.FontSmoothingType" name="arg0" type="javafx.scene.text.FontSmoothingType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLineSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStrikethrough" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextOrigin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUnderline" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWrappingWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="strikethroughProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textAlignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.TextAlignment&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textOriginProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.VPos&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="underlineProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="usesMirroring" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="wrappingWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="baselineOffset" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.text.TextBoundsType" name="boundsType" override="false" rawType="javafx.scene.text.TextBoundsType" static="false">
        <getter abstract="false" access="public" final="true" name="getBoundsType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextBoundsType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.TextBoundsType" index="" name="setBoundsType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextBoundsType arg0" public="true" rawType="javafx.scene.text.TextBoundsType" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.TextBoundsType" name="arg0" type="javafx.scene.text.TextBoundsType"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.text.Font" name="font" override="false" rawType="javafx.scene.text.Font" static="false">
        <getter abstract="false" access="public" final="true" name="getFont" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.Font" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.Font" index="" name="setFont" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" rawType="javafx.scene.text.Font" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.FontSmoothingType" name="fontSmoothingType" override="false" rawType="javafx.scene.text.FontSmoothingType" static="false">
        <getter abstract="false" access="public" final="true" name="getFontSmoothingType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.FontSmoothingType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.FontSmoothingType" index="" name="setFontSmoothingType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.FontSmoothingType arg0" public="true" rawType="javafx.scene.text.FontSmoothingType" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.FontSmoothingType" name="arg0" type="javafx.scene.text.FontSmoothingType"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lineSpacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLineSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLineSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="strikethrough" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isStrikethrough" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setStrikethrough" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.TextAlignment" name="textAlignment" override="false" rawType="javafx.scene.text.TextAlignment" static="false">
        <getter abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.TextAlignment" index="" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" rawType="javafx.scene.text.TextAlignment" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.VPos" name="textOrigin" override="false" rawType="javafx.geometry.VPos" static="false">
        <getter abstract="false" access="public" final="true" name="getTextOrigin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.VPos" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.VPos" index="" name="setTextOrigin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.VPos arg0" public="true" rawType="javafx.geometry.VPos" returnType="void" static="false">
          <parameter genericType="javafx.geometry.VPos" name="arg0" type="javafx.geometry.VPos"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="underline" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isUnderline" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setUnderline" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="wrappingWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWrappingWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWrappingWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TextFlow" genericParam="" genericParamPrepend="" name="TextFlow" package="javafx.scene.text" super="javafx.scene.layout.Pane" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.text.TextFlow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.text.TextFlow" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node[]" name="arg0" type="javafx.scene.Node[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getLineSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
      <method abstract="false" access="public" final="true" name="lineSpacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="queryAccessibleAttribute" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.AccessibleAttribute arg0, java.lang.Object[] arg1" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="javafx.scene.AccessibleAttribute" name="arg0" type="javafx.scene.AccessibleAttribute"/>
        <parameter genericType="java.lang.Object[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="requestLayout" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setLineSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
      </method>
      <method abstract="false" access="public" final="true" name="textAlignmentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.TextAlignment&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="usesMirroring" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="double" name="baselineOffset" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBaselineOffset" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="contentBias" override="true" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="false" name="getContentBias" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="lineSpacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLineSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLineSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.TextAlignment" name="textAlignment" override="false" rawType="javafx.scene.text.TextAlignment" static="false">
        <getter abstract="false" access="public" final="true" name="getTextAlignment" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.TextAlignment" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.TextAlignment" index="" name="setTextAlignment" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.TextAlignment arg0" public="true" rawType="javafx.scene.text.TextAlignment" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.TextAlignment" name="arg0" type="javafx.scene.text.TextAlignment"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Affine" genericParam="" genericParamPrepend="" name="Affine" package="javafx.scene.transform" super="javafx.scene.transform.Transform" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.transform.Affine" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.transform.Affine" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Affine" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, javafx.scene.transform.MatrixType arg1, int arg2" public="true" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg1" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Affine" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Affine" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9, double arg10, double arg11" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="double" name="arg8" type="double"/>
        <parameter genericType="double" name="arg9" type="double"/>
        <parameter genericType="double" name="arg10" type="double"/>
        <parameter genericType="double" name="arg11" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="append" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="append" override="false" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9, double arg10, double arg11" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="double" name="arg8" type="double"/>
        <parameter genericType="double" name="arg9" type="double"/>
        <parameter genericType="double" name="arg10" type="double"/>
        <parameter genericType="double" name="arg11" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="append" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, javafx.scene.transform.MatrixType arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg1" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="append" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendRotation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendRotation" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendRotation" override="false" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendRotation" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, javafx.geometry.Point3D arg4" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg4" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendRotation" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.geometry.Point2D arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg1" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendRotation" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, javafx.geometry.Point3D arg1, javafx.geometry.Point3D arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg1" type="javafx.geometry.Point3D"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg2" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendScale" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendScale" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendScale" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendScale" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendScale" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, javafx.geometry.Point3D arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg3" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendScale" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.geometry.Point2D arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg2" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendShear" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendShear" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendShear" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.geometry.Point2D arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg2" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendTranslation" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="appendTranslation" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Affine" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="createConcatenation" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="javafx.scene.transform.Transform" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Affine" static="false"/>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="determinant" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMxx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMxy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMxz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMyx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMyy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMyz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMzx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMzy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMzz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="invert" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="mxxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="mxyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="mxzProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="myxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="myyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="myzProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="mzxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="mzyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="mzzProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="prepend" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prepend" override="false" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9, double arg10, double arg11" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="double" name="arg8" type="double"/>
        <parameter genericType="double" name="arg9" type="double"/>
        <parameter genericType="double" name="arg10" type="double"/>
        <parameter genericType="double" name="arg11" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prepend" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, javafx.scene.transform.MatrixType arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg1" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="prepend" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependRotation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependRotation" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependRotation" override="false" parameterCount="7" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependRotation" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, javafx.geometry.Point3D arg4" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg4" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependRotation" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.geometry.Point2D arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg1" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependRotation" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, javafx.geometry.Point3D arg1, javafx.geometry.Point3D arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg1" type="javafx.geometry.Point3D"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg2" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependScale" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependScale" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependScale" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependScale" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependScale" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, javafx.geometry.Point3D arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg3" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependScale" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.geometry.Point2D arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg2" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependShear" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependShear" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependShear" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, javafx.geometry.Point2D arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="javafx.geometry.Point2D" name="arg2" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependTranslation" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prependTranslation" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setElement" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.transform.MatrixType arg0, int arg1, int arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMxx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMxy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMxz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMyx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMyy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMyz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMzx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMzy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMzz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setToIdentity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="setToTransform" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setToTransform" override="false" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9, double arg10, double arg11" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="double" name="arg8" type="double"/>
        <parameter genericType="double" name="arg9" type="double"/>
        <parameter genericType="double" name="arg10" type="double"/>
        <parameter genericType="double" name="arg11" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setToTransform" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double[] arg0, javafx.scene.transform.MatrixType arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg1" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setToTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="txProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="tzProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="mxx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMxx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMxx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="mxy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMxy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMxy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="mxz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMxz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMxz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="myx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMyx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMyx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="myy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMyy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMyy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="myz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMyz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMyz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="mzx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMzx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMzx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="mzy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMzy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMzy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="mzz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMzz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMzz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.transform.Transform" name="toTransform" override="false" rawType="javafx.scene.transform.Transform" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.transform.Transform" index="" name="setToTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" rawType="javafx.scene.transform.Transform" returnType="void" static="false">
          <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTx" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="ty" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTy" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTz" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="NonInvertibleTransformException" genericParam="" genericParamPrepend="" name="NonInvertibleTransformException" package="javafx.scene.transform" super="">
      <constructor access="public" name="javafx.scene.transform.NonInvertibleTransformException" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Rotate" genericParam="" genericParamPrepend="" name="Rotate" package="javafx.scene.transform" super="javafx.scene.transform.Transform" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.transform.Rotate" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.transform.Rotate" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Rotate" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, javafx.geometry.Point3D arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg1" type="javafx.geometry.Point3D"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Rotate" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Rotate" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Rotate" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, javafx.geometry.Point3D arg4" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="javafx.geometry.Point3D" name="arg4" type="javafx.geometry.Point3D"/>
      </constructor>
      <field access="public" final="true" name="X_AXIS" public="true" static="true" type="javafx.geometry.Point3D"/>
      <field access="public" final="true" name="Y_AXIS" public="true" static="true" type="javafx.geometry.Point3D"/>
      <field access="public" final="true" name="Z_AXIS" public="true" static="true" type="javafx.geometry.Point3D"/>
      <method abstract="false" access="public" final="true" name="angleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="axisProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Point3D&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Rotate" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="createConcatenation" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="javafx.scene.transform.Transform" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="getAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
      <method abstract="false" access="public" final="false" name="getMxx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMxy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMxz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="pivotXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pivotYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pivotZProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPivotX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPivotY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPivotZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <property genericParam="" genericType="double" name="angle" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAngle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAngle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Point3D" name="axis" override="false" rawType="javafx.geometry.Point3D" static="false">
        <getter abstract="false" access="public" final="true" name="getAxis" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Point3D" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Point3D" index="" name="setAxis" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" rawType="javafx.geometry.Point3D" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="mxx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mxy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mxz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="pivotX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pivotY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pivotZ" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="ty" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="tz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Scale" genericParam="" genericParamPrepend="" name="Scale" package="javafx.scene.transform" super="javafx.scene.transform.Transform" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.transform.Scale" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.transform.Scale" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Scale" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Scale" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Scale" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Scale" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="createConcatenation" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="javafx.scene.transform.Transform" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Scale" static="false"/>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getMxx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="pivotXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pivotYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pivotZProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setPivotX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPivotY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPivotZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="zProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="mxx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="pivotX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pivotY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pivotZ" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="ty" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="tz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Shear" genericParam="" genericParamPrepend="" name="Shear" package="javafx.scene.transform" super="javafx.scene.transform.Transform" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.transform.Shear" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.transform.Shear" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Shear" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Shear" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="createConcatenation" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="javafx.scene.transform.Transform" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getMxy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPivotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="pivotXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="pivotYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setPivotX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPivotY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="mxy" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="pivotX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="pivotY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPivotY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPivotY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="ty" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Transform" genericParam="" genericParamPrepend="" name="Transform" package="javafx.scene.transform" super="">
      <constructor access="public" name="javafx.scene.transform.Transform" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="addEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="affine" override="false" parameterCount="6" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5" public="true" returnType="javafx.scene.transform.Affine" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="affine" override="false" parameterCount="12" parametersCall="arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11" parametersDeclaration="double arg0, double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9, double arg10, double arg11" public="true" returnType="javafx.scene.transform.Affine" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
        <parameter genericType="double" name="arg4" type="double"/>
        <parameter genericType="double" name="arg5" type="double"/>
        <parameter genericType="double" name="arg6" type="double"/>
        <parameter genericType="double" name="arg7" type="double"/>
        <parameter genericType="double" name="arg8" type="double"/>
        <parameter genericType="double" name="arg9" type="double"/>
        <parameter genericType="double" name="arg10" type="double"/>
        <parameter genericType="double" name="arg11" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="false" name="clone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="column" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.transform.MatrixType arg0, int arg1" public="true" returnType="double[]" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="column" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.transform.MatrixType arg0, int arg1, double[] arg2" public="true" returnType="double[]" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="double[]" name="arg2" type="double[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="createConcatenation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="javafx.scene.transform.Transform" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="createInverse" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="determinant" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getElement" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.transform.MatrixType arg0, int arg1, int arg2" public="true" returnType="double" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getMxx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMxy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMxz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMyz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getMzz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnTransformChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="identityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform2DPoints" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double[] arg0, int arg1, double[] arg2, int arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="double[]" name="arg2" type="double[]"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform3DPoints" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double[] arg0, int arg1, double[] arg2, int arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="double[]" name="arg2" type="double[]"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="isIdentity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isType2D" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onTransformChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="removeEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="rotate" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.scene.transform.Rotate" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="row" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.transform.MatrixType arg0, int arg1" public="true" returnType="double[]" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="row" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.transform.MatrixType arg0, int arg1, double[] arg2" public="true" returnType="double[]" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="double[]" name="arg2" type="double[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="scale" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.scene.transform.Scale" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="scale" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="javafx.scene.transform.Scale" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnTransformChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="shear" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.scene.transform.Shear" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="shear" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="javafx.scene.transform.Shear" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="similarTo" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.transform.Transform arg0, javafx.geometry.Bounds arg1, double arg2" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
        <parameter genericType="javafx.geometry.Bounds" name="arg1" type="javafx.geometry.Bounds"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toArray" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.MatrixType arg0" public="true" returnType="double[]" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
      </method>
      <method abstract="false" access="public" final="false" name="toArray" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.transform.MatrixType arg0, double[] arg1" public="true" returnType="double[]" static="false">
        <parameter genericType="javafx.scene.transform.MatrixType" name="arg0" type="javafx.scene.transform.MatrixType"/>
        <parameter genericType="double[]" name="arg1" type="double[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Bounds arg0" public="true" returnType="javafx.geometry.Bounds" static="false">
        <parameter genericType="javafx.geometry.Bounds" name="arg0" type="javafx.geometry.Bounds"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform2DPoints" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double[] arg0, int arg1, double[] arg2, int arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="double[]" name="arg2" type="double[]"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform3DPoints" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="double[] arg0, int arg1, double[] arg2, int arg3, int arg4" public="true" returnType="void" static="false">
        <parameter genericType="double[]" name="arg0" type="double[]"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="double[]" name="arg2" type="double[]"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="int" name="arg4" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="translate" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.scene.transform.Translate" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="type2DProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="identity" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isIdentity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mxx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mxy" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mxz" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMxz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myy" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="myz" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMyz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzy" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="mzz" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMzz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="? super javafx.scene.transform.TransformChangedEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;" name="onTransformChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnTransformChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="? super javafx.scene.transform.TransformChangedEvent" genericType="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;" index="" name="setOnTransformChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;? super javafx.scene.transform.TransformChangedEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="tx" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTx" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="ty" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="type2D" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isType2D" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="tz" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTz" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TransformChangedEvent" genericParam="" genericParamPrepend="" name="TransformChangedEvent" package="javafx.scene.transform" super="">
      <constructor access="public" name="javafx.scene.transform.TransformChangedEvent" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.transform.TransformChangedEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="TRANSFORM_CHANGED" public="true" static="true" type="javafx.event.EventType"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Translate" genericParam="" genericParamPrepend="" name="Translate" package="javafx.scene.transform" super="javafx.scene.transform.Transform" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.transform.Translate" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.transform.Translate" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <constructor access="public" name="javafx.scene.transform.Translate" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="clone" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Translate" static="false"/>
      <method abstract="false" access="public" final="false" name="createConcatenation" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.transform.Transform arg0" public="true" returnType="javafx.scene.transform.Transform" static="false">
        <parameter genericType="javafx.scene.transform.Transform" name="arg0" type="javafx.scene.transform.Transform"/>
      </method>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Transform" static="false"/>
      <method abstract="false" access="public" final="false" name="createInverse" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.transform.Translate" static="false"/>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="deltaTransform" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point2D arg0" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="javafx.geometry.Point2D" name="arg0" type="javafx.geometry.Point2D"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseDeltaTransform" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Point3D arg0" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="javafx.geometry.Point3D" name="arg0" type="javafx.geometry.Point3D"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="inverseTransform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="javafx.geometry.Point2D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="transform" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="javafx.geometry.Point3D" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="zProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="double" name="tx" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTx" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="ty" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTy" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="tz" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getTz" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="z" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZ" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setZ" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="HTMLEditor" genericParam="" genericParamPrepend="" name="HTMLEditor" package="javafx.scene.web" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.web.HTMLEditor" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="getHtmlText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="print" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.print.PrinterJob arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.print.PrinterJob" name="arg0" type="javafx.print.PrinterJob"/>
      </method>
      <method abstract="false" access="public" final="false" name="setHtmlText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="htmlText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getHtmlText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.String" index="" name="setHtmlText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PopupFeatures" genericParam="" genericParamPrepend="" name="PopupFeatures" package="javafx.scene.web" super="">
      <constructor access="public" name="javafx.scene.web.PopupFeatures" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="boolean arg0, boolean arg1, boolean arg2, boolean arg3" public="true" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="hasMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasStatus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasToolbar" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <property genericParam="" genericType="boolean" name="resizable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PromptData" genericParam="" genericParamPrepend="" name="PromptData" package="javafx.scene.web" super="">
      <constructor access="public" name="javafx.scene.web.PromptData" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.String arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getDefaultValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getMessage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="defaultValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getDefaultValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="message" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getMessage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WebEngine" genericParam="" genericParamPrepend="" name="WebEngine" package="javafx.scene.web" super="">
      <constructor access="public" name="javafx.scene.web.WebEngine" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.scene.web.WebEngine" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="confirmHandlerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="createPopupHandlerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="documentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;org.w3c.dom.Document&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="executeScript" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="getConfirmHandler" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCreatePopupHandler" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getDocument" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.w3c.dom.Document" static="false"/>
      <method abstract="false" access="public" final="false" name="getHistory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.web.WebHistory" static="false"/>
      <method abstract="false" access="public" final="true" name="getLoadWorker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.concurrent.Worker&lt;java.lang.Void&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAlert" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnResized" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnStatusChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnVisibilityChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getPromptHandler" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getUserAgent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getUserDataDirectory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.io.File" static="false"/>
      <method abstract="false" access="public" final="true" name="getUserStyleSheetLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isJavaScriptEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="javaScriptEnabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="load" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="loadContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="loadContent" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.String arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="locationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyStringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="onAlertProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onErrorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onResizedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onStatusChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onVisibilityChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="print" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.print.PrinterJob arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.print.PrinterJob" name="arg0" type="javafx.print.PrinterJob"/>
      </method>
      <method abstract="false" access="public" final="true" name="promptHandlerProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="reload" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="setConfirmHandler" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCreatePopupHandler" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setJavaScriptEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAlert" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnResized" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnStatusChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnVisibilityChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPromptHandler" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUserAgent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUserDataDirectory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.File arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.io.File" name="arg0" type="java.io.File"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUserStyleSheetLocation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyStringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="userAgentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="userDataDirectoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.io.File&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="userStyleSheetLocationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="java.lang.String, java.lang.Boolean" genericType="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;" name="confirmHandler" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getConfirmHandler" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.String, java.lang.Boolean" genericType="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;" index="" name="setConfirmHandler" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;java.lang.String, java.lang.Boolean&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine" genericType="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;" name="createPopupHandler" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCreatePopupHandler" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine" genericType="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;" index="" name="setCreatePopupHandler" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.web.PopupFeatures, javafx.scene.web.WebEngine&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="org.w3c.dom.Document" name="document" override="false" rawType="org.w3c.dom.Document" static="false">
        <getter abstract="false" access="public" final="true" name="getDocument" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.w3c.dom.Document" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.web.WebHistory" name="history" override="false" rawType="javafx.scene.web.WebHistory" static="false">
        <getter abstract="false" access="public" final="false" name="getHistory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.web.WebHistory" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="javaScriptEnabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isJavaScriptEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setJavaScriptEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="java.lang.Void" genericType="javafx.concurrent.Worker&lt;java.lang.Void&gt;" name="loadWorker" override="false" rawType="javafx.concurrent.Worker" static="false">
        <getter abstract="false" access="public" final="true" name="getLoadWorker" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.concurrent.Worker&lt;java.lang.Void&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="location" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="javafx.scene.web.WebEvent&lt;java.lang.String&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" name="onAlert" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAlert" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.WebEvent&lt;java.lang.String&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" index="" name="setOnAlert" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.web.WebErrorEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;" name="onError" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.WebErrorEvent" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;" index="" name="setOnError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebErrorEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;" name="onResized" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnResized" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;" index="" name="setOnResized" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;javafx.geometry.Rectangle2D&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.web.WebEvent&lt;java.lang.String&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" name="onStatusChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnStatusChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.WebEvent&lt;java.lang.String&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" index="" name="setOnStatusChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.String&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;" name="onVisibilityChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnVisibilityChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;" genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;" index="" name="setOnVisibilityChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.scene.web.WebEvent&lt;java.lang.Boolean&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.web.PromptData, java.lang.String" genericType="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;" name="promptHandler" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getPromptHandler" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.web.PromptData, java.lang.String" genericType="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;" index="" name="setPromptHandler" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.web.PromptData, java.lang.String&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgent" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getUserAgent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setUserAgent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.io.File" name="userDataDirectory" override="false" rawType="java.io.File" static="false">
        <getter abstract="false" access="public" final="true" name="getUserDataDirectory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.io.File" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.io.File" index="" name="setUserDataDirectory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.File arg0" public="true" rawType="java.io.File" returnType="void" static="false">
          <parameter genericType="java.io.File" name="arg0" type="java.io.File"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userStyleSheetLocation" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getUserStyleSheetLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setUserStyleSheetLocation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WebErrorEvent" genericParam="" genericParamPrepend="" name="WebErrorEvent" package="javafx.scene.web" super="">
      <constructor access="public" name="javafx.scene.web.WebErrorEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.Object arg0, javafx.event.EventType&lt;javafx.scene.web.WebErrorEvent&gt; arg1, java.lang.String arg2, java.lang.Throwable arg3" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.web.WebErrorEvent&gt;" name="arg1" type="javafx.event.EventType"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
        <parameter genericType="java.lang.Throwable" name="arg3" type="java.lang.Throwable"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="USER_DATA_DIRECTORY_ALREADY_IN_USE" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="USER_DATA_DIRECTORY_IO_ERROR" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="USER_DATA_DIRECTORY_SECURITY_ERROR" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getException" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Throwable" static="false"/>
      <method abstract="false" access="public" final="false" name="getMessage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.Throwable" name="exception" override="false" rawType="java.lang.Throwable" static="false">
        <getter abstract="false" access="public" final="false" name="getException" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Throwable" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="message" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getMessage" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="WebEvent&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="WebEvent" package="javafx.scene.web" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="javafx.scene.web.WebEvent" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventType&lt;javafx.scene.web.WebEvent&gt; arg1, T arg2" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.scene.web.WebEvent&gt;" name="arg1" type="javafx.event.EventType"/>
        <parameter genericType="T" name="arg2" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="ALERT" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="RESIZED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="STATUS_CHANGED" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="VISIBILITY_CHANGED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="T" name="data" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WebHistory" genericParam="" genericParamPrepend="" name="WebHistory" package="javafx.scene.web" super="">
      <method abstract="false" access="public" final="false" name="currentIndexProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyIntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getCurrentIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getEntries" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.web.WebHistory.Entry&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getMaxSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="go" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="maxSizeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="setMaxSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <property genericParam="" genericType="int" name="currentIndex" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getCurrentIndex" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="javafx.scene.web.WebHistory.Entry" genericType="javafx.collections.ObservableList&lt;javafx.scene.web.WebHistory.Entry&gt;" name="entries" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getEntries" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.web.WebHistory.Entry&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="maxSize" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getMaxSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="int" index="" name="setMaxSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WebView" genericParam="" genericParamPrepend="" name="WebView" package="javafx.scene.web" super="javafx.scene.Parent" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.scene.web.WebView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="contextMenuEnabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="fontScaleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="fontSmoothingTypeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.text.FontSmoothingType&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEngine" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.web.WebEngine" static="false"/>
      <method abstract="false" access="public" final="true" name="getFontScale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getFontSmoothingType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.FontSmoothingType" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getZoom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isContextMenuEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isResizable" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="maxHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="maxHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="maxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="minHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="minWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefHeight" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prefHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="prefWidth" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="double" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="prefWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="resize" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContextMenuEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFontScale" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFontSmoothingType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.FontSmoothingType arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.text.FontSmoothingType" name="arg0" type="javafx.scene.text.FontSmoothingType"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMaxSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setMinSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setPrefSize" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="double arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setZoom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="zoomProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="contextMenuEnabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isContextMenuEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setContextMenuEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="cssMetaData" override="true" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getCssMetaData" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.web.WebEngine" name="engine" override="false" rawType="javafx.scene.web.WebEngine" static="false">
        <getter abstract="false" access="public" final="true" name="getEngine" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.web.WebEngine" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fontScale" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFontScale" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFontScale" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.text.FontSmoothingType" name="fontSmoothingType" override="false" rawType="javafx.scene.text.FontSmoothingType" static="false">
        <getter abstract="false" access="public" final="true" name="getFontSmoothingType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.text.FontSmoothingType" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.text.FontSmoothingType" index="" name="setFontSmoothingType" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.FontSmoothingType arg0" public="true" rawType="javafx.scene.text.FontSmoothingType" returnType="void" static="false">
          <parameter genericType="javafx.scene.text.FontSmoothingType" name="arg0" type="javafx.scene.text.FontSmoothingType"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getPrefWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="true" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isResizable" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="zoom" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getZoom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setZoom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DirectoryChooser" genericParam="" genericParamPrepend="" name="DirectoryChooser" package="javafx.stage" super="">
      <constructor access="public" name="javafx.stage.DirectoryChooser" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getInitialDirectory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.io.File" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="initialDirectoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.io.File&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setInitialDirectory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.File arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.io.File" name="arg0" type="java.io.File"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="showDialog" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="java.io.File" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="java.io.File" name="initialDirectory" override="false" rawType="java.io.File" static="false">
        <getter abstract="false" access="public" final="true" name="getInitialDirectory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.io.File" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.io.File" index="" name="setInitialDirectory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.File arg0" public="true" rawType="java.io.File" returnType="void" static="false">
          <parameter genericType="java.io.File" name="arg0" type="java.io.File"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="FileChooser" genericParam="" genericParamPrepend="" name="FileChooser" package="javafx.stage" super="">
      <constructor access="public" name="javafx.stage.FileChooser" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="getExtensionFilters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.stage.FileChooser.ExtensionFilter&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getInitialDirectory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.io.File" static="false"/>
      <method abstract="false" access="public" final="true" name="getInitialFileName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedExtensionFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.FileChooser.ExtensionFilter" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="initialDirectoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.io.File&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="initialFileNameProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedExtensionFilterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.stage.FileChooser.ExtensionFilter&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setInitialDirectory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.File arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.io.File" name="arg0" type="java.io.File"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInitialFileName" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectedExtensionFilter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.FileChooser.ExtensionFilter arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.FileChooser.ExtensionFilter" name="arg0" type="javafx.stage.FileChooser.ExtensionFilter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="showOpenDialog" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="java.io.File" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="false" name="showOpenMultipleDialog" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="java.util.List&lt;java.io.File&gt;" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="false" name="showSaveDialog" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="java.io.File" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="javafx.stage.FileChooser.ExtensionFilter" genericType="javafx.collections.ObservableList&lt;javafx.stage.FileChooser.ExtensionFilter&gt;" name="extensionFilters" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getExtensionFilters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.stage.FileChooser.ExtensionFilter&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.io.File" name="initialDirectory" override="false" rawType="java.io.File" static="false">
        <getter abstract="false" access="public" final="true" name="getInitialDirectory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.io.File" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.io.File" index="" name="setInitialDirectory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.File arg0" public="true" rawType="java.io.File" returnType="void" static="false">
          <parameter genericType="java.io.File" name="arg0" type="java.io.File"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="initialFileName" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getInitialFileName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setInitialFileName" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.stage.FileChooser.ExtensionFilter" name="selectedExtensionFilter" override="false" rawType="javafx.stage.FileChooser.ExtensionFilter" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedExtensionFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.FileChooser.ExtensionFilter" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.stage.FileChooser.ExtensionFilter" index="" name="setSelectedExtensionFilter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.FileChooser.ExtensionFilter arg0" public="true" rawType="javafx.stage.FileChooser.ExtensionFilter" returnType="void" static="false">
          <parameter genericType="javafx.stage.FileChooser.ExtensionFilter" name="arg0" type="javafx.stage.FileChooser.ExtensionFilter"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="FileChooser.ExtensionFilter" genericParam="" genericParamPrepend="" name="FileChooser.ExtensionFilter" package="javafx.stage" super="">
      <constructor access="public" name="javafx.stage.FileChooser$ExtensionFilter" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.String[] arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String[]" name="arg1" type="java.lang.String[]"/>
      </constructor>
      <constructor access="public" name="javafx.stage.FileChooser$ExtensionFilter" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.util.List&lt;java.lang.String&gt; arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.util.List&lt;java.lang.String&gt;" name="arg1" type="java.util.List"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getDescription" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getExtensions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.lang.String&gt;" static="false"/>
      <property genericParam="" genericType="java.lang.String" name="description" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getDescription" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="java.lang.String" genericType="java.util.List&lt;java.lang.String&gt;" name="extensions" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getExtensions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;java.lang.String&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Popup" genericParam="" genericParamPrepend="" name="Popup" package="javafx.stage" super="javafx.stage.PopupWindow" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.stage.Popup" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="content" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="PopupWindow" genericParam="" genericParamPrepend="" name="PopupWindow" package="javafx.stage" super="javafx.stage.Window" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.stage.PopupWindow" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="anchorLocationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.stage.PopupWindow.AnchorLocation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="anchorXProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="anchorYProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="autoFixProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="autoHideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="consumeAutoHidingEventsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnchorLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.PopupWindow.AnchorLocation" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnchorX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnchorY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getConsumeAutoHidingEvents" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAutoHide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOwnerNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getOwnerWindow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="hideOnEscapeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isAutoFix" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isAutoHide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isHideOnEscape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onAutoHideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="ownerNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="ownerWindowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.stage.Window&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAnchorLocation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.PopupWindow.AnchorLocation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.PopupWindow.AnchorLocation" name="arg0" type="javafx.stage.PopupWindow.AnchorLocation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAnchorX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAnchorY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAutoFix" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAutoHide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConsumeAutoHidingEvents" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHideOnEscape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAutoHide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Node arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.stage.Window arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <property genericParam="" genericType="javafx.stage.PopupWindow.AnchorLocation" name="anchorLocation" override="false" rawType="javafx.stage.PopupWindow.AnchorLocation" static="false">
        <getter abstract="false" access="public" final="true" name="getAnchorLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.PopupWindow.AnchorLocation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.stage.PopupWindow.AnchorLocation" index="" name="setAnchorLocation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.PopupWindow.AnchorLocation arg0" public="true" rawType="javafx.stage.PopupWindow.AnchorLocation" returnType="void" static="false">
          <parameter genericType="javafx.stage.PopupWindow.AnchorLocation" name="arg0" type="javafx.stage.PopupWindow.AnchorLocation"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="anchorX" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAnchorX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAnchorX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="anchorY" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getAnchorY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setAnchorY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="autoFix" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAutoFix" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAutoFix" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="autoHide" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAutoHide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAutoHide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="consumeAutoHidingEvents" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getConsumeAutoHidingEvents" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setConsumeAutoHidingEvents" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="hideOnEscape" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHideOnEscape" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setHideOnEscape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onAutoHide" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAutoHide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnAutoHide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="ownerNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getOwnerNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.stage.Window" name="ownerWindow" override="false" rawType="javafx.stage.Window" static="false">
        <getter abstract="false" access="public" final="true" name="getOwnerWindow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Screen" genericParam="" genericParamPrepend="" name="Screen" package="javafx.stage" super="">
      <method abstract="false" access="public" final="false" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="getBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="true" name="getDpi" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getPrimary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Screen" static="true"/>
      <method abstract="false" access="public" final="false" name="getScreens" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.stage.Screen&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getScreensForRectangle" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="javafx.collections.ObservableList&lt;javafx.stage.Screen&gt;" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="getScreensForRectangle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" returnType="javafx.collections.ObservableList&lt;javafx.stage.Screen&gt;" static="true">
        <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="getVisualBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="false" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.geometry.Rectangle2D" name="bounds" override="false" rawType="javafx.geometry.Rectangle2D" static="false">
        <getter abstract="false" access="public" final="true" name="getBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="dpi" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getDpi" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.geometry.Rectangle2D" name="visualBounds" override="false" rawType="javafx.geometry.Rectangle2D" static="false">
        <getter abstract="false" access="public" final="true" name="getVisualBounds" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Stage" genericParam="" genericParamPrepend="" name="Stage" package="javafx.stage" super="javafx.stage.Window" superParam="" superParamPrepend="">
      <constructor access="public" name="javafx.stage.Stage" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="javafx.stage.Stage" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.StageStyle arg0" public="true" static="false">
        <parameter genericType="javafx.stage.StageStyle" name="arg0" type="javafx.stage.StageStyle"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="alwaysOnTopProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="close" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="fullScreenExitHintProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fullScreenExitKeyProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.input.KeyCombination&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fullScreenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getFullScreenExitHint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getFullScreenExitKeyCombination" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
      <method abstract="false" access="public" final="true" name="getIcons" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.image.Image&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getModality" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Modality" static="false"/>
      <method abstract="false" access="public" final="true" name="getOwner" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.StageStyle" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="iconifiedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="initModality" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Modality arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Modality" name="arg0" type="javafx.stage.Modality"/>
      </method>
      <method abstract="false" access="public" final="true" name="initOwner" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="true" name="initStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.StageStyle arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.StageStyle" name="arg0" type="javafx.stage.StageStyle"/>
      </method>
      <method abstract="false" access="public" final="true" name="isAlwaysOnTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isFullScreen" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isIconified" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isMaximized" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="maxHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maximizedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="resizableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAlwaysOnTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFullScreen" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFullScreenExitHint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFullScreenExitKeyCombination" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
      </method>
      <method abstract="false" access="public" final="true" name="setIconified" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMaximized" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setScene" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Scene arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Scene" name="arg0" type="javafx.scene.Scene"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="showAndWait" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toBack" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="toFront" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <property genericParam="" genericType="boolean" name="alwaysOnTop" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAlwaysOnTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAlwaysOnTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="fullScreen" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFullScreen" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setFullScreen" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="fullScreenExitHint" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getFullScreenExitHint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setFullScreenExitHint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination" name="fullScreenExitKeyCombination" override="false" rawType="javafx.scene.input.KeyCombination" static="false">
        <getter abstract="false" access="public" final="true" name="getFullScreenExitKeyCombination" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.input.KeyCombination" index="" name="setFullScreenExitKeyCombination" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" rawType="javafx.scene.input.KeyCombination" returnType="void" static="false">
          <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="iconified" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isIconified" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setIconified" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.image.Image" genericType="javafx.collections.ObservableList&lt;javafx.scene.image.Image&gt;" name="icons" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getIcons" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.image.Image&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="maxWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMaxWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMaxWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="maximized" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isMaximized" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setMaximized" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="minWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMinWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMinWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.stage.Modality" name="modality" override="false" rawType="javafx.stage.Modality" static="false">
        <getter abstract="false" access="public" final="true" name="getModality" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Modality" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.stage.Window" name="owner" override="false" rawType="javafx.stage.Window" static="false">
        <getter abstract="false" access="public" final="true" name="getOwner" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.Window" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isResizable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Scene" name="scene" override="false" rawType="javafx.scene.Scene" static="false">
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Scene" index="" name="setScene" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Scene arg0" public="true" rawType="javafx.scene.Scene" returnType="void" static="false">
          <parameter genericType="javafx.scene.Scene" name="arg0" type="javafx.scene.Scene"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.stage.StageStyle" name="style" override="false" rawType="javafx.stage.StageStyle" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.stage.StageStyle" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Window" genericParam="" genericParamPrepend="" name="Window" package="javafx.stage" super="">
      <method abstract="false" access="public" final="true" name="addEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="false" name="centerOnScreen" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="eventDispatcherProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventDispatcher&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="fireEvent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.Event arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.Event" name="arg0" type="javafx.event.Event"/>
      </method>
      <method abstract="false" access="public" final="true" name="focusedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getEventDispatcher" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventDispatcher" static="false"/>
      <method abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnCloseRequest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getScene" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Scene" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="heightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isFocused" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onCloseRequestProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHiddenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHidingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShowingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="opacityProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="removeEventFilter" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;T&gt; arg0, javafx.event.EventHandler&lt;? super T&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;T&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;? super T&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="requestFocus" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="sceneProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.Scene&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setEventDispatcher" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatcher arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventDispatcher" name="arg0" type="javafx.event.EventDispatcher"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnCloseRequest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="sizeToScene" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="widthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="xProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="yProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.event.EventDispatcher" name="eventDispatcher" override="false" rawType="javafx.event.EventDispatcher" static="false">
        <getter abstract="false" access="public" final="true" name="getEventDispatcher" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventDispatcher" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.event.EventDispatcher" index="" name="setEventDispatcher" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatcher arg0" public="true" rawType="javafx.event.EventDispatcher" returnType="void" static="false">
          <parameter genericType="javafx.event.EventDispatcher" name="arg0" type="javafx.event.EventDispatcher"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="focused" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isFocused" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="onCloseRequest" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnCloseRequest" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" index="" name="setOnCloseRequest" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="onHidden" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" index="" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="onHiding" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" index="" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="onShowing" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" index="" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="onShown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" index="" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.stage.WindowEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="opacity" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getOpacity" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setOpacity" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Scene" name="scene" override="false" rawType="javafx.scene.Scene" static="false">
        <getter abstract="false" access="public" final="true" name="getScene" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Scene" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="x" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getX" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setX" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="y" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getY" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setY" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WindowEvent" genericParam="" genericParamPrepend="" name="WindowEvent" package="javafx.stage" super="">
      <constructor access="public" name="javafx.stage.WindowEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.stage.Window arg0, javafx.event.EventType&lt;? extends javafx.event.Event&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.event.Event&gt;" name="arg1" type="javafx.event.EventType"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="WINDOW_CLOSE_REQUEST" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="WINDOW_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="WINDOW_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="WINDOW_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="WINDOW_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.event.Event" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1" public="true" returnType="javafx.stage.WindowEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyFor" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;javafx.stage.WindowEvent&gt; arg2" public="true" returnType="javafx.stage.WindowEvent" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;javafx.stage.WindowEvent&gt;" name="arg2" type="javafx.event.EventType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="javafx.stage.WindowEvent" genericType="javafx.event.EventType&lt;javafx.stage.WindowEvent&gt;" name="eventType" override="true" rawType="javafx.event.EventType" static="false">
        <getter abstract="false" access="public" final="false" name="getEventType" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventType&lt;javafx.stage.WindowEvent&gt;" static="false"/>
      </property>
    </class>
  </jar>
  <jar file="controlsfx-8.40.10.jar">
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="BreadCrumbBar&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="BreadCrumbBar" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.BreadCrumbBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.BreadCrumbBar" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="autoNavigationEnabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildTreeModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T[] arg0" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="true">
        <parameter genericType="T[]" name="arg0" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="crumbFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCrumbFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnCrumbAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedCrumb" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isAutoNavigationEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onCrumbActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedCrumbProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAutoNavigationEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCrumbFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnCrumbAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectedCrumb" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </method>
      <property genericParam="" genericType="boolean" name="autoNavigationEnabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAutoNavigationEnabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAutoNavigationEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;" name="crumbFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCrumbFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button" genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;" index="" name="setCrumbFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.TreeItem&lt;T&gt;, javafx.scene.control.Button&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;" name="onCrumbAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnCrumbAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;" index="" name="setOnCrumbAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;org.controlsfx.control.BreadCrumbBar.BreadCrumbActionEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="selectedCrumb" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedCrumb" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.scene.control.TreeItem&lt;T&gt;" index="" name="setSelectedCrumb" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;T&gt; arg0" public="true" rawType="javafx.scene.control.TreeItem" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.TreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="TE extends java.lang.Object" genericDeclarationPrepend="TE extends java.lang.Object, " genericName="BreadCrumbBar.BreadCrumbActionEvent&lt;TE&gt;" genericParam="TE" genericParamPrepend="TE, " name="BreadCrumbBar.BreadCrumbActionEvent" package="org.controlsfx.control" super="">
      <typeParameter name="TE"/>
      <constructor access="public" name="org.controlsfx.control.BreadCrumbBar$BreadCrumbActionEvent" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TreeItem&lt;TE&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TreeItem&lt;TE&gt;" name="arg0" type="javafx.scene.control.TreeItem"/>
      </constructor>
      <field access="public" final="true" name="CRUMB_ACTION" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getSelectedCrumb" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;TE&gt;" static="false"/>
      <property genericParam="TE" genericType="javafx.scene.control.TreeItem&lt;TE&gt;" name="selectedCrumb" override="false" rawType="javafx.scene.control.TreeItem" static="false">
        <getter abstract="false" access="public" final="false" name="getSelectedCrumb" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TreeItem&lt;TE&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckComboBox&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckComboBox" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.CheckComboBox" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.CheckComboBox" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="checkModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.control.IndexedCheckModel&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="converterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCheckModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItemBooleanProperty" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="javafx.beans.property.BooleanProperty" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getItemBooleanProperty" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.beans.property.BooleanProperty" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCheckModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.IndexedCheckModel&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" name="arg0" type="org.controlsfx.control.IndexedCheckModel"/>
      </method>
      <method abstract="false" access="public" final="true" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <property genericParam="T" genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" name="checkModel" override="false" rawType="org.controlsfx.control.IndexedCheckModel" static="false">
        <getter abstract="false" access="public" final="true" name="getCheckModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" index="" name="setCheckModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.IndexedCheckModel&lt;T&gt; arg0" public="true" rawType="org.controlsfx.control.IndexedCheckModel" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" name="arg0" type="org.controlsfx.control.IndexedCheckModel"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" name="converter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getConverter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.util.StringConverter&lt;T&gt;" index="" name="setConverter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckListView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckListView" package="org.controlsfx.control" super="javafx.scene.control.ListView" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.CheckListView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.CheckListView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="checkModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.control.IndexedCheckModel&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCheckModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItemBooleanProperty" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="javafx.beans.property.BooleanProperty" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getItemBooleanProperty" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.beans.property.BooleanProperty" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCheckModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.IndexedCheckModel&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" name="arg0" type="org.controlsfx.control.IndexedCheckModel"/>
      </method>
      <property genericParam="T" genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" name="checkModel" override="false" rawType="org.controlsfx.control.IndexedCheckModel" static="false">
        <getter abstract="false" access="public" final="true" name="getCheckModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" index="" name="setCheckModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.IndexedCheckModel&lt;T&gt; arg0" public="true" rawType="org.controlsfx.control.IndexedCheckModel" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.IndexedCheckModel&lt;T&gt;" name="arg0" type="org.controlsfx.control.IndexedCheckModel"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="CheckTreeView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="CheckTreeView" package="org.controlsfx.control" super="javafx.scene.control.TreeView" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.CheckTreeView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.CheckTreeView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.CheckBoxTreeItem&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.CheckBoxTreeItem&lt;T&gt;" name="arg0" type="javafx.scene.control.CheckBoxTreeItem"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="checkModelProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCheckModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getItemBooleanProperty" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="javafx.beans.property.BooleanProperty" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCheckModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="org.controlsfx.control.CheckModel"/>
      </method>
      <property genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="checkModel" override="false" rawType="org.controlsfx.control.CheckModel" static="false">
        <getter abstract="false" access="public" final="true" name="getCheckModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.TreeItem&lt;T&gt;" genericType="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" index="" name="setCheckModel" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt; arg0" public="true" rawType="org.controlsfx.control.CheckModel" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.CheckModel&lt;javafx.scene.control.TreeItem&lt;T&gt;&gt;" name="arg0" type="org.controlsfx.control.CheckModel"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="GridCell&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="GridCell" package="org.controlsfx.control" super="javafx.scene.control.IndexedCell" superParam="T" superParamPrepend="T, ">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.GridCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="getGridView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.GridView&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="gridViewProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.SimpleObjectProperty&lt;org.controlsfx.control.GridView&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="updateGridView" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.GridView&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.GridView&lt;T&gt;" name="arg0" type="org.controlsfx.control.GridView"/>
      </method>
      <property genericParam="T" genericType="org.controlsfx.control.GridView&lt;T&gt;" name="gridView" override="false" rawType="org.controlsfx.control.GridView" static="false">
        <getter abstract="false" access="public" final="false" name="getGridView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.GridView&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="GridView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="GridView" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.GridView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.GridView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cellHeightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="cellWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getHorizontalCellSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getVerticalCellSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="horizontalCellSpacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="itemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCellHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCellWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHorizontalCellSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVerticalCellSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="verticalCellSpacingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;" genericType="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;" genericType="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;org.controlsfx.control.GridView&lt;T&gt;, org.controlsfx.control.GridCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="cellHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCellHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCellHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="cellWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCellWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCellWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="horizontalCellSpacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHorizontalCellSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHorizontalCellSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="verticalCellSpacing" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getVerticalCellSpacing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setVerticalCellSpacing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="HiddenSidesPane" genericParam="" genericParamPrepend="" name="HiddenSidesPane" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.HiddenSidesPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.HiddenSidesPane" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="javafx.scene.Node arg0, javafx.scene.Node arg1, javafx.scene.Node arg2, javafx.scene.Node arg3, javafx.scene.Node arg4" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg2" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg3" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg4" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="animationDelayProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="animationDurationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Duration&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="bottomProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnimationDelay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getAnimationDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
      <method abstract="false" access="public" final="true" name="getBottom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getPinnedSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTriggerDistance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="leftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="pinnedSideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="rightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAnimationDelay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="setAnimationDuration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="setBottom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPinnedSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTriggerDistance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="topProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="triggerDistanceProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <property genericParam="" genericType="javafx.util.Duration" name="animationDelay" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getAnimationDelay" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.util.Duration" index="" name="setAnimationDelay" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" rawType="javafx.util.Duration" returnType="void" static="false">
          <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.util.Duration" name="animationDuration" override="false" rawType="javafx.util.Duration" static="false">
        <getter abstract="false" access="public" final="true" name="getAnimationDuration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Duration" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.util.Duration" index="" name="setAnimationDuration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" rawType="javafx.util.Duration" returnType="void" static="false">
          <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="bottom" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getBottom" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setBottom" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="left" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="pinnedSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getPinnedSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setPinnedSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="right" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="top" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="triggerDistance" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getTriggerDistance" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setTriggerDistance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="HyperlinkLabel" genericParam="" genericParamPrepend="" name="HyperlinkLabel" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.HyperlinkLabel" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.HyperlinkLabel" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="onActionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="onAction" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAction" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.ActionEvent" genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" index="" name="setOnAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="InfoOverlay" genericParam="" genericParamPrepend="" name="InfoOverlay" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.InfoOverlay" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.InfoOverlay" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.String arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.InfoOverlay" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, java.lang.String arg1" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowOnHover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowOnHover" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="showOnHoverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showOnHover" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowOnHover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowOnHover" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="ListSelectionView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="ListSelectionView" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.ListSelectionView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="cellFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getSourceFooter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getSourceHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getSourceItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTargetFooter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTargetHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getTargetItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSourceFooter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSourceHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSourceItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTargetFooter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTargetHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTargetItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </method>
      <method abstract="false" access="public" final="true" name="sourceFooterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="sourceHeaderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="sourceItemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="targetFooterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="targetHeaderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="targetItemsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.collections.ObservableList&lt;T&gt;&gt;" static="false"/>
      <property genericParam="javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="cellFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getCellFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;" genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" index="" name="setCellFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.ListView&lt;T&gt;, javafx.scene.control.ListCell&lt;T&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="sourceFooter" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getSourceFooter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setSourceFooter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="sourceHeader" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getSourceHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setSourceHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="sourceItems" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getSourceItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setSourceItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="targetFooter" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getTargetFooter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setTargetFooter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="targetHeader" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getTargetHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setTargetHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="targetItems" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getTargetItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" index="" name="setTargetItems" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;T&gt; arg0" public="true" rawType="javafx.collections.ObservableList" returnType="void" static="false">
          <parameter genericType="javafx.collections.ObservableList&lt;T&gt;" name="arg0" type="javafx.collections.ObservableList"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MaskerPane" genericParam="" genericParamPrepend="" name="MaskerPane" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.MaskerPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getProgressNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getProgressVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="progressNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="progressProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="progressVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setProgress" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setProgressNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setProgressVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="double" name="progress" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setProgress" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="progressNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getProgressNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setProgressNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="progressVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="getProgressVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setProgressVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MasterDetailPane" genericParam="" genericParamPrepend="" name="MasterDetailPane" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.MasterDetailPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.MasterDetailPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.MasterDetailPane" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.geometry.Side arg0, boolean arg1" public="true" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.MasterDetailPane" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.geometry.Side arg0, javafx.scene.Node arg1, javafx.scene.Node arg2, boolean arg3" public="true" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="javafx.scene.Node" name="arg2" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="animatedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="detailNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="detailSideProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Side&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="dividerPositionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getDetailNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getDetailSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
      <method abstract="false" access="public" final="true" name="getDividerPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMasterNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowDetailNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="masterNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDetailNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDetailSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDividerPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMasterNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowDetailNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="showDetailNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="boolean" name="animated" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isAnimated" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setAnimated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="detailNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getDetailNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setDetailNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Side" name="detailSide" override="false" rawType="javafx.geometry.Side" static="false">
        <getter abstract="false" access="public" final="true" name="getDetailSide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Side" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Side" index="" name="setDetailSide" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Side arg0" public="true" rawType="javafx.geometry.Side" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Side" name="arg0" type="javafx.geometry.Side"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="dividerPosition" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getDividerPosition" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setDividerPosition" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="masterNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getMasterNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setMasterNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showDetailNode" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowDetailNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowDetailNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="NotificationPane" genericParam="" genericParamPrepend="" name="NotificationPane" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.NotificationPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.NotificationPane" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <field access="public" final="true" name="ON_HIDDEN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_HIDING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWING" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="ON_SHOWN" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="STYLE_CLASS_DARK" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="true" name="closeButtonVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="contentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getActions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.action.Action&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="hide" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isCloseButtonVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowFromTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="onHiddenProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onHidingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShowingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="onShownProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;javafx.event.Event&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setCloseButtonVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowFromTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1, org.controlsfx.control.action.Action[] arg2" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="org.controlsfx.control.action.Action[]" name="arg2" type="org.controlsfx.control.action.Action[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="showFromTopProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="showingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="org.controlsfx.control.action.Action" genericType="javafx.collections.ObservableList&lt;org.controlsfx.control.action.Action&gt;" name="actions" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getActions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.action.Action&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="closeButtonVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isCloseButtonVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setCloseButtonVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="content" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHidden" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHidden" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHidden" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onHiding" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnHiding" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnHiding" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShowing" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShowing" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="onShown" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnShown" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="javafx.event.Event" genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" index="" name="setOnShown" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.Event&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showFromTop" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowFromTop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowFromTop" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showing" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowing" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Notifications" genericParam="" genericParamPrepend="" name="Notifications" package="org.controlsfx.control" super="">
      <method abstract="false" access="public" final="false" name="action" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action[] arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="org.controlsfx.control.action.Action[]" name="arg0" type="org.controlsfx.control.action.Action[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="create" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.Notifications" static="true"/>
      <method abstract="false" access="public" final="false" name="darkStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.Notifications" static="false"/>
      <method abstract="false" access="public" final="false" name="graphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="hideAfter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="false" name="hideCloseButton" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.Notifications" static="false"/>
      <method abstract="false" access="public" final="false" name="onAction" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt; arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.ActionEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="owner" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="position" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Pos arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="javafx.geometry.Pos" name="arg0" type="javafx.geometry.Pos"/>
      </method>
      <method abstract="false" access="public" final="false" name="show" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="showConfirm" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="showError" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="showInformation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="showWarning" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="text" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="title" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.control.Notifications" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PlusMinusSlider" genericParam="" genericParamPrepend="" name="PlusMinusSlider" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.PlusMinusSlider" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getOnValueChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="onValueChangedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setOnValueChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="valueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyDoubleProperty" static="false"/>
      <property genericParam="org.controlsfx.control.PlusMinusSlider.PlusMinusEvent" genericType="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;" name="onValueChanged" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnValueChanged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="org.controlsfx.control.PlusMinusSlider.PlusMinusEvent" genericType="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;" index="" name="setOnValueChanged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;org.controlsfx.control.PlusMinusSlider.PlusMinusEvent&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="value" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PlusMinusSlider.PlusMinusEvent" genericParam="" genericParamPrepend="" name="PlusMinusSlider.PlusMinusEvent" package="org.controlsfx.control" super="javafx.scene.input.InputEvent" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.PlusMinusSlider$PlusMinusEvent" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.Object arg0, javafx.event.EventTarget arg1, javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt; arg2, double arg3" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="javafx.event.EventTarget" name="arg1" type="javafx.event.EventTarget"/>
        <parameter genericType="javafx.event.EventType&lt;? extends javafx.scene.input.InputEvent&gt;" name="arg2" type="javafx.event.EventType"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <field access="public" final="true" name="ANY" public="true" static="true" type="javafx.event.EventType"/>
      <field access="public" final="true" name="VALUE_CHANGED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <property genericParam="" genericType="double" name="value" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PopOver" genericParam="" genericParamPrepend="" name="PopOver" package="org.controlsfx.control" super="javafx.scene.control.PopupControl" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.PopOver" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.PopOver" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="arrowIndentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="arrowLocationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.control.PopOver.ArrowLocation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="arrowSizeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="contentNodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="cornerRadiusProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="detach" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="detachableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="detachedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getArrowIndent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getArrowLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.PopOver.ArrowLocation" static="false"/>
      <method abstract="false" access="public" final="true" name="getArrowSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getContentNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getCornerRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.StackPane" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="headerAlwaysVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="hide" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="hide" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Duration arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Duration" name="arg0" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="isDetachable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isDetached" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isHeaderAlwaysVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="setArrowIndent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setArrowLocation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PopOver.ArrowLocation arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.PopOver.ArrowLocation" name="arg0" type="org.controlsfx.control.PopOver.ArrowLocation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setArrowSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setContentNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setCornerRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDetachable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDetached" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHeaderAlwaysVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, double arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.Node arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="true" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.Node arg0, double arg1, double arg2, javafx.util.Duration arg3" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="javafx.util.Duration" name="arg3" type="javafx.util.Duration"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.stage.Window arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
      </method>
      <method abstract="false" access="public" final="true" name="show" override="true" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.stage.Window arg0, double arg1, double arg2" public="true" returnType="void" static="false">
        <parameter genericType="javafx.stage.Window" name="arg0" type="javafx.stage.Window"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="double" name="arrowIndent" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getArrowIndent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setArrowIndent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.PopOver.ArrowLocation" name="arrowLocation" override="false" rawType="org.controlsfx.control.PopOver.ArrowLocation" static="false">
        <getter abstract="false" access="public" final="true" name="getArrowLocation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.PopOver.ArrowLocation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="org.controlsfx.control.PopOver.ArrowLocation" index="" name="setArrowLocation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PopOver.ArrowLocation arg0" public="true" rawType="org.controlsfx.control.PopOver.ArrowLocation" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.PopOver.ArrowLocation" name="arg0" type="org.controlsfx.control.PopOver.ArrowLocation"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="arrowSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getArrowSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setArrowSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="contentNode" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getContentNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setContentNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="cornerRadius" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getCornerRadius" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setCornerRadius" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="detachable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDetachable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDetachable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="detached" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDetached" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDetached" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="headerAlwaysVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHeaderAlwaysVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setHeaderAlwaysVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.layout.StackPane" name="root" override="false" rawType="javafx.scene.layout.StackPane" static="false">
        <getter abstract="false" access="public" final="true" name="getRoot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.layout.StackPane" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="PropertySheet" genericParam="" genericParamPrepend="" name="PropertySheet" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.PropertySheet" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.PropertySheet" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.PropertySheet.Mode" static="false"/>
      <method abstract="false" access="public" final="true" name="getPropertyEditorFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitleFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isModeSwitcherVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSearchBoxVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="modeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.SimpleObjectProperty&lt;org.controlsfx.control.PropertySheet.Mode&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="modeSwitcherVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.SimpleBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="propertyEditorFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.SimpleObjectProperty&lt;javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="searchBoxVisibleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.SimpleBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Mode arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.PropertySheet.Mode" name="arg0" type="org.controlsfx.control.PropertySheet.Mode"/>
      </method>
      <method abstract="false" access="public" final="true" name="setModeSwitcherVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPropertyEditorFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSearchBoxVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitleFilter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="titleFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.SimpleStringProperty" static="false"/>
      <property genericParam="org.controlsfx.control.PropertySheet.Item" genericType="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt;" name="items" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.PropertySheet.Mode" name="mode" override="false" rawType="org.controlsfx.control.PropertySheet.Mode" static="false">
        <getter abstract="false" access="public" final="true" name="getMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.PropertySheet.Mode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="org.controlsfx.control.PropertySheet.Mode" index="" name="setMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Mode arg0" public="true" rawType="org.controlsfx.control.PropertySheet.Mode" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.PropertySheet.Mode" name="arg0" type="org.controlsfx.control.PropertySheet.Mode"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="modeSwitcherVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isModeSwitcherVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setModeSwitcherVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" genericType="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" name="propertyEditorFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getPropertyEditorFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" genericType="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" index="" name="setPropertyEditorFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;org.controlsfx.control.PropertySheet.Item, org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="searchBoxVisible" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSearchBoxVisible" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSearchBoxVisible" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="titleFilter" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitleFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitleFilter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="RangeSlider" genericParam="" genericParamPrepend="" name="RangeSlider" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.RangeSlider" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.RangeSlider" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="adjustHighValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="adjustLowValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="blockIncrementProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="decrementHighValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="decrementLowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="getBlockIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="true" name="getHighValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getLabelFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;java.lang.Number&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getLowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMajorTickUnit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getMinorTickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="highValueChangingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="highValueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="incrementHighValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="incrementLowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="isHighValueChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isLowValueChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowTickLabels" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowTickMarks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSnapToTicks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="labelFormatterProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.StringConverter&lt;java.lang.Number&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="lowValueChangingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="lowValueProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="majorTickUnitProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="maxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="minorTickCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setBlockIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHighValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setHighValueChanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLabelFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.lang.Number&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;java.lang.Number&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLowValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLowValueChanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMajorTickUnit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setMinorTickCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowTickLabels" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowTickMarks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSnapToTicks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="showTickLabelsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="showTickMarksProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="snapToTicksProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="double" name="blockIncrement" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getBlockIncrement" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setBlockIncrement" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="highValue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getHighValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setHighValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="highValueChanging" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isHighValueChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setHighValueChanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="java.lang.Number" genericType="javafx.util.StringConverter&lt;java.lang.Number&gt;" name="labelFormatter" override="false" rawType="javafx.util.StringConverter" static="false">
        <getter abstract="false" access="public" final="true" name="getLabelFormatter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.StringConverter&lt;java.lang.Number&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="java.lang.Number" genericType="javafx.util.StringConverter&lt;java.lang.Number&gt;" index="" name="setLabelFormatter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.lang.Number&gt; arg0" public="true" rawType="javafx.util.StringConverter" returnType="void" static="false">
          <parameter genericType="javafx.util.StringConverter&lt;java.lang.Number&gt;" name="arg0" type="javafx.util.StringConverter"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="lowValue" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getLowValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setLowValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="lowValueChanging" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isLowValueChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setLowValueChanging" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="majorTickUnit" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMajorTickUnit" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMajorTickUnit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="max" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="min" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getMin" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setMin" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="minorTickCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMinorTickCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMinorTickCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showTickLabels" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowTickLabels" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowTickLabels" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showTickMarks" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowTickMarks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowTickMarks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="snapToTicks" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSnapToTicks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSnapToTicks" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Rating" genericParam="" genericParamPrepend="" name="Rating" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.Rating" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.Rating" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.Rating" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
      <method abstract="false" access="public" final="true" name="getRating" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isPartialRating" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isUpdateOnHover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="maxProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="orientationProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Orientation&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="partialRatingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="ratingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
      </method>
      <method abstract="false" access="public" final="true" name="setPartialRating" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRating" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUpdateOnHover" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="updateOnHoverProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="" genericType="int" name="max" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getMax" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setMax" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Orientation" name="orientation" override="false" rawType="javafx.geometry.Orientation" static="false">
        <getter abstract="false" access="public" final="true" name="getOrientation" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Orientation" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Orientation" index="" name="setOrientation" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Orientation arg0" public="true" rawType="javafx.geometry.Orientation" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Orientation" name="arg0" type="javafx.geometry.Orientation"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="partialRating" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isPartialRating" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setPartialRating" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="rating" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRating" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRating" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="updateOnHover" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isUpdateOnHover" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setUpdateOnHover" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SegmentedButton" genericParam="" genericParamPrepend="" name="SegmentedButton" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.SegmentedButton" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.SegmentedButton" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.collections.ObservableList&lt;javafx.scene.control.ToggleButton&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.collections.ObservableList&lt;javafx.scene.control.ToggleButton&gt;" name="arg0" type="javafx.collections.ObservableList"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.SegmentedButton" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleButton[] arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.ToggleButton[]" name="arg0" type="javafx.scene.control.ToggleButton[]"/>
      </constructor>
      <field access="public" final="true" name="STYLE_CLASS_DARK" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="true" name="getButtons" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.ToggleButton&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getToggleGroup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ToggleGroup" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="setToggleGroup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleGroup arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.ToggleGroup" name="arg0" type="javafx.scene.control.ToggleGroup"/>
      </method>
      <method abstract="false" access="public" final="false" name="toggleGroupProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ToggleGroup&gt;" static="false"/>
      <property genericParam="javafx.scene.control.ToggleButton" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.ToggleButton&gt;" name="buttons" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getButtons" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.ToggleButton&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ToggleGroup" name="toggleGroup" override="false" rawType="javafx.scene.control.ToggleGroup" static="false">
        <getter abstract="false" access="public" final="false" name="getToggleGroup" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ToggleGroup" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.control.ToggleGroup" index="" name="setToggleGroup" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.ToggleGroup arg0" public="true" rawType="javafx.scene.control.ToggleGroup" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.ToggleGroup" name="arg0" type="javafx.scene.control.ToggleGroup"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SnapshotView" genericParam="" genericParamPrepend="" name="SnapshotView" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.SnapshotView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.SnapshotView" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <field access="public" final="true" name="MAX_SELECTION_RATIO_DIVERGENCE" public="true" static="true" type="double"/>
      <field access="public" final="true" name="SELECTION_CHANGING_PROPERTY_KEY" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="false" name="createSnapshot" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.image.WritableImage" static="false"/>
      <method abstract="false" access="public" final="false" name="createSnapshot" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.SnapshotParameters arg0" public="true" returnType="javafx.scene.image.WritableImage" static="false">
        <parameter genericType="javafx.scene.SnapshotParameters" name="arg0" type="javafx.scene.SnapshotParameters"/>
      </method>
      <method abstract="false" access="public" final="true" name="fixedSelectionRatioProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getClassCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="true"/>
      <method abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFixedSelectionRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionAreaBoundary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.SnapshotView.Boundary" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionAreaFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionBorderPaint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectionBorderWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getUnselectedAreaBoundary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.SnapshotView.Boundary" static="false"/>
      <method abstract="false" access="public" final="true" name="getUnselectedAreaFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="hasSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="hasSelectionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelectionActive" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelectionActivityManaged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelectionChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelectionMouseTransparent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelectionRatioFixed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="nodeProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionActiveProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionActivityManagedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionAreaBoundaryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.control.SnapshotView.Boundary&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionAreaFillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionBorderPaintProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionBorderWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionChangingProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionMouseTransparentProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.geometry.Rectangle2D&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="selectionRatioFixedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setFixedSelectionRatio" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelection" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="double arg0, double arg1, double arg2, double arg3" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionActive" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionActivityManaged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionAreaBoundary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.SnapshotView.Boundary arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.SnapshotView.Boundary" name="arg0" type="org.controlsfx.control.SnapshotView.Boundary"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionAreaFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionBorderPaint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionBorderWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionMouseTransparent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionRatioFixed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUnselectedAreaBoundary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.SnapshotView.Boundary arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.SnapshotView.Boundary" name="arg0" type="org.controlsfx.control.SnapshotView.Boundary"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUnselectedAreaFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
      </method>
      <method abstract="false" access="public" final="false" name="transformSelectionToNodeCoordinates" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
      <method abstract="false" access="public" final="false" name="transformToNodeCoordinates" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" returnType="javafx.geometry.Rectangle2D" static="false">
        <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
      </method>
      <method abstract="false" access="public" final="true" name="unselectedAreaBoundaryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.control.SnapshotView.Boundary&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="unselectedAreaFillProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.paint.Paint&gt;" static="false"/>
      <property genericParam="javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;" genericType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" name="controlCssMetaData" override="false" rawType="java.util.List" static="false">
        <getter abstract="false" access="public" final="false" name="getControlCssMetaData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.List&lt;javafx.css.CssMetaData&lt;? extends javafx.css.Styleable, ?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="fixedSelectionRatio" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getFixedSelectionRatio" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setFixedSelectionRatio" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="node" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getNode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setNode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.geometry.Rectangle2D" name="selection" override="false" rawType="javafx.geometry.Rectangle2D" static="false">
        <getter abstract="false" access="public" final="true" name="getSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.geometry.Rectangle2D" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.geometry.Rectangle2D" index="" name="setSelection" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.geometry.Rectangle2D arg0" public="true" rawType="javafx.geometry.Rectangle2D" returnType="void" static="false">
          <parameter genericType="javafx.geometry.Rectangle2D" name="arg0" type="javafx.geometry.Rectangle2D"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selectionActive" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelectionActive" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelectionActive" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selectionActivityManaged" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelectionActivityManaged" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelectionActivityManaged" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.SnapshotView.Boundary" name="selectionAreaBoundary" override="false" rawType="org.controlsfx.control.SnapshotView.Boundary" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionAreaBoundary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.SnapshotView.Boundary" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="org.controlsfx.control.SnapshotView.Boundary" index="" name="setSelectionAreaBoundary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.SnapshotView.Boundary arg0" public="true" rawType="org.controlsfx.control.SnapshotView.Boundary" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.SnapshotView.Boundary" name="arg0" type="org.controlsfx.control.SnapshotView.Boundary"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="selectionAreaFill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionAreaFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setSelectionAreaFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="selectionBorderPaint" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionBorderPaint" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setSelectionBorderPaint" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="selectionBorderWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectionBorderWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setSelectionBorderWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selectionChanging" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelectionChanging" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="selectionMouseTransparent" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelectionMouseTransparent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelectionMouseTransparent" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="selectionRatioFixed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelectionRatioFixed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelectionRatioFixed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.SnapshotView.Boundary" name="unselectedAreaBoundary" override="false" rawType="org.controlsfx.control.SnapshotView.Boundary" static="false">
        <getter abstract="false" access="public" final="true" name="getUnselectedAreaBoundary" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.SnapshotView.Boundary" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="org.controlsfx.control.SnapshotView.Boundary" index="" name="setUnselectedAreaBoundary" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.SnapshotView.Boundary arg0" public="true" rawType="org.controlsfx.control.SnapshotView.Boundary" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.SnapshotView.Boundary" name="arg0" type="org.controlsfx.control.SnapshotView.Boundary"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.paint.Paint" name="unselectedAreaFill" override="false" rawType="javafx.scene.paint.Paint" static="false">
        <getter abstract="false" access="public" final="true" name="getUnselectedAreaFill" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.paint.Paint" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.paint.Paint" index="" name="setUnselectedAreaFill" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Paint arg0" public="true" rawType="javafx.scene.paint.Paint" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Paint" name="arg0" type="javafx.scene.paint.Paint"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="StatusBar" genericParam="" genericParamPrepend="" name="StatusBar" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.StatusBar" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeftItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="true" name="getRightItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="progressProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setProgress" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="leftItems" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getLeftItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="progress" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getProgress" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setProgress" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="javafx.scene.Node" genericType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" name="rightItems" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getRightItems" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.Node&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="T extends javafx.concurrent.Task&lt;?&gt;" genericDeclarationPrepend="T extends javafx.concurrent.Task&lt;?&gt;, " genericName="TaskProgressView&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TaskProgressView" package="org.controlsfx.control" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.TaskProgressView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphicFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;T, javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTasks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicFactoryProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.util.Callback&lt;T, javafx.scene.Node&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setGraphicFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;T, javafx.scene.Node&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;T, javafx.scene.Node&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <property genericParam="T, javafx.scene.Node" genericType="javafx.util.Callback&lt;T, javafx.scene.Node&gt;" name="graphicFactory" override="false" rawType="javafx.util.Callback" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphicFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.util.Callback&lt;T, javafx.scene.Node&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="T, javafx.scene.Node" genericType="javafx.util.Callback&lt;T, javafx.scene.Node&gt;" index="" name="setGraphicFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;T, javafx.scene.Node&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;T, javafx.scene.Node&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="tasks" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getTasks" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ToggleSwitch" genericParam="" genericParamPrepend="" name="ToggleSwitch" package="org.controlsfx.control" super="javafx.scene.control.Labeled" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.ToggleSwitch" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.ToggleSwitch" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="fire" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Action" genericParam="" genericParamPrepend="" name="Action" package="org.controlsfx.control.action" super="">
      <constructor access="public" name="org.controlsfx.control.action.Action" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.action.Action" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.function.Consumer&lt;javafx.event.ActionEvent&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.function.Consumer&lt;javafx.event.ActionEvent&gt;" name="arg0" type="java.util.function.Consumer"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.action.Action" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.util.function.Consumer&lt;javafx.event.ActionEvent&gt; arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.util.function.Consumer&lt;javafx.event.ActionEvent&gt;" name="arg1" type="java.util.function.Consumer"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="acceleratorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.input.KeyCombination&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="disabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getAccelerator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
      <method abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getLongText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="handle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.ActionEvent arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.ActionEvent" name="arg0" type="javafx.event.ActionEvent"/>
      </method>
      <method abstract="false" access="public" final="false" name="handle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.Event arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.Event" name="arg0" type="javafx.event.Event"/>
      </method>
      <method abstract="false" access="public" final="true" name="isDisabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="longTextProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="selectedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="setAccelerator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
      </method>
      <method abstract="false" access="public" final="true" name="setDisabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setLongText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.input.KeyCombination" name="accelerator" override="false" rawType="javafx.scene.input.KeyCombination" static="false">
        <getter abstract="false" access="public" final="true" name="getAccelerator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.input.KeyCombination" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.input.KeyCombination" index="" name="setAccelerator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.input.KeyCombination arg0" public="true" rawType="javafx.scene.input.KeyCombination" returnType="void" static="false">
          <parameter genericType="javafx.scene.input.KeyCombination" name="arg0" type="javafx.scene.input.KeyCombination"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="disabled" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isDisabled" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setDisabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="longText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getLongText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setLongText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="selected" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isSelected" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setSelected" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ActionGroup" genericParam="" genericParamPrepend="" name="ActionGroup" package="org.controlsfx.control.action" super="org.controlsfx.control.action.Action" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.action.ActionGroup" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.util.Collection&lt;org.controlsfx.control.action.Action&gt; arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.util.Collection&lt;org.controlsfx.control.action.Action&gt;" name="arg1" type="java.util.Collection"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.action.ActionGroup" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, org.controlsfx.control.action.Action[] arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="org.controlsfx.control.action.Action[]" name="arg1" type="org.controlsfx.control.action.Action[]"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.action.ActionGroup" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1, java.util.Collection&lt;org.controlsfx.control.action.Action&gt; arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="java.util.Collection&lt;org.controlsfx.control.action.Action&gt;" name="arg2" type="java.util.Collection"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.action.ActionGroup" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, javafx.scene.Node arg1, org.controlsfx.control.action.Action[] arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="org.controlsfx.control.action.Action[]" name="arg2" type="org.controlsfx.control.action.Action[]"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getActions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.action.Action&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="org.controlsfx.control.action.Action" genericType="javafx.collections.ObservableList&lt;org.controlsfx.control.action.Action&gt;" name="actions" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getActions" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.action.Action&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ActionMap" genericParam="" genericParamPrepend="" name="ActionMap" package="org.controlsfx.control.action" super="">
      <method abstract="false" access="public" final="false" name="action" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.control.action.Action" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="actions" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String[] arg0" public="true" returnType="java.util.Collection&lt;org.controlsfx.control.action.Action&gt;" static="true">
        <parameter genericType="java.lang.String[]" name="arg0" type="java.lang.String[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="getActionFactory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.action.AnnotatedActionFactory" static="true"/>
      <method abstract="false" access="public" final="false" name="register" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="true">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="setActionFactory" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.AnnotatedActionFactory arg0" public="true" returnType="void" static="true">
        <parameter genericType="org.controlsfx.control.action.AnnotatedActionFactory" name="arg0" type="org.controlsfx.control.action.AnnotatedActionFactory"/>
      </method>
      <method abstract="false" access="public" final="false" name="unregister" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="true">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ActionUtils" genericParam="" genericParamPrepend="" name="ActionUtils" package="org.controlsfx.control.action" super="">
      <field access="public" final="false" name="ACTION_SEPARATOR" public="true" static="true" type="org.controlsfx.control.action.Action"/>
      <method abstract="false" access="public" final="false" name="configureButton" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.Action arg0, javafx.scene.control.ButtonBase arg1" public="true" returnType="javafx.scene.control.ButtonBase" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
        <parameter genericType="javafx.scene.control.ButtonBase" name="arg1" type="javafx.scene.control.ButtonBase"/>
      </method>
      <method abstract="false" access="public" final="false" name="configureMenuItem" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.Action arg0, javafx.scene.control.MenuItem arg1" public="true" returnType="javafx.scene.control.MenuItem" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
        <parameter genericType="javafx.scene.control.MenuItem" name="arg1" type="javafx.scene.control.MenuItem"/>
      </method>
      <method abstract="false" access="public" final="false" name="createButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.Button" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createButton" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.Action arg0, org.controlsfx.control.action.ActionUtils.ActionTextBehavior arg1" public="true" returnType="javafx.scene.control.Button" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
        <parameter genericType="org.controlsfx.control.action.ActionUtils.ActionTextBehavior" name="arg1" type="org.controlsfx.control.action.ActionUtils.ActionTextBehavior"/>
      </method>
      <method abstract="false" access="public" final="false" name="createButtonBar" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt; arg0" public="true" returnType="javafx.scene.control.ButtonBar" static="true">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCheckBox" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.CheckBox" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCheckMenuItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.CheckMenuItem" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createContextMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt; arg0" public="true" returnType="javafx.scene.control.ContextMenu" static="true">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="createHyperlink" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.Hyperlink" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createMenu" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.Menu" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createMenuBar" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt; arg0" public="true" returnType="javafx.scene.control.MenuBar" static="true">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="createMenuButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.MenuButton" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createMenuButton" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.Action arg0, org.controlsfx.control.action.ActionUtils.ActionTextBehavior arg1" public="true" returnType="javafx.scene.control.MenuButton" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
        <parameter genericType="org.controlsfx.control.action.ActionUtils.ActionTextBehavior" name="arg1" type="org.controlsfx.control.action.ActionUtils.ActionTextBehavior"/>
      </method>
      <method abstract="false" access="public" final="false" name="createMenuItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.MenuItem" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createRadioButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.RadioButton" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createRadioMenuItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.RadioMenuItem" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createSegmentedButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt; arg0" public="true" returnType="org.controlsfx.control.SegmentedButton" static="true">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="createSegmentedButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action[] arg0" public="true" returnType="org.controlsfx.control.SegmentedButton" static="true">
        <parameter genericType="org.controlsfx.control.action.Action[]" name="arg0" type="org.controlsfx.control.action.Action[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="createSegmentedButton" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.ActionUtils.ActionTextBehavior arg0, java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt; arg1" public="true" returnType="org.controlsfx.control.SegmentedButton" static="true">
        <parameter genericType="org.controlsfx.control.action.ActionUtils.ActionTextBehavior" name="arg0" type="org.controlsfx.control.action.ActionUtils.ActionTextBehavior"/>
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt;" name="arg1" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="createSegmentedButton" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.ActionUtils.ActionTextBehavior arg0, org.controlsfx.control.action.Action[] arg1" public="true" returnType="org.controlsfx.control.SegmentedButton" static="true">
        <parameter genericType="org.controlsfx.control.action.ActionUtils.ActionTextBehavior" name="arg0" type="org.controlsfx.control.action.ActionUtils.ActionTextBehavior"/>
        <parameter genericType="org.controlsfx.control.action.Action[]" name="arg1" type="org.controlsfx.control.action.Action[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="createToggleButton" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.action.Action arg0" public="true" returnType="javafx.scene.control.ToggleButton" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
      </method>
      <method abstract="false" access="public" final="false" name="createToggleButton" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.action.Action arg0, org.controlsfx.control.action.ActionUtils.ActionTextBehavior arg1" public="true" returnType="javafx.scene.control.ToggleButton" static="true">
        <parameter genericType="org.controlsfx.control.action.Action" name="arg0" type="org.controlsfx.control.action.Action"/>
        <parameter genericType="org.controlsfx.control.action.ActionUtils.ActionTextBehavior" name="arg1" type="org.controlsfx.control.action.ActionUtils.ActionTextBehavior"/>
      </method>
      <method abstract="false" access="public" final="false" name="createToolBar" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt; arg0, org.controlsfx.control.action.ActionUtils.ActionTextBehavior arg1" public="true" returnType="javafx.scene.control.ToolBar" static="true">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.control.action.Action&gt;" name="arg0" type="java.util.Collection"/>
        <parameter genericType="org.controlsfx.control.action.ActionUtils.ActionTextBehavior" name="arg1" type="org.controlsfx.control.action.ActionUtils.ActionTextBehavior"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="AnnotatedAction" genericParam="" genericParamPrepend="" name="AnnotatedAction" package="org.controlsfx.control.action" super="org.controlsfx.control.action.Action" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.action.AnnotatedAction" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, java.lang.reflect.Method arg1, java.lang.Object arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.reflect.Method" name="arg1" type="java.lang.reflect.Method"/>
        <parameter genericType="java.lang.Object" name="arg2" type="java.lang.Object"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="java.lang.Object" name="target" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DefaultActionFactory" genericParam="" genericParamPrepend="" name="DefaultActionFactory" package="org.controlsfx.control.action" super="">
      <constructor access="public" name="org.controlsfx.control.action.DefaultActionFactory" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="createAction" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="org.controlsfx.control.action.ActionProxy arg0, java.lang.reflect.Method arg1, java.lang.Object arg2" public="true" returnType="org.controlsfx.control.action.AnnotatedAction" static="false">
        <parameter genericType="org.controlsfx.control.action.ActionProxy" name="arg0" type="org.controlsfx.control.action.ActionProxy"/>
        <parameter genericType="java.lang.reflect.Method" name="arg1" type="java.lang.reflect.Method"/>
        <parameter genericType="java.lang.Object" name="arg2" type="java.lang.Object"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ColorGridCell" genericParam="" genericParamPrepend="" name="ColorGridCell" package="org.controlsfx.control.cell" super="org.controlsfx.control.GridCell" superParam="javafx.scene.paint.Color" superParamPrepend="javafx.scene.paint.Color, ">
      <constructor access="public" name="org.controlsfx.control.cell.ColorGridCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ImageGridCell" genericParam="" genericParamPrepend="" name="ImageGridCell" package="org.controlsfx.control.cell" super="org.controlsfx.control.GridCell" superParam="javafx.scene.image.Image" superParamPrepend="javafx.scene.image.Image, ">
      <constructor access="public" name="org.controlsfx.control.cell.ImageGridCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.cell.ImageGridCell" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="MediaImageCell" genericParam="" genericParamPrepend="" name="MediaImageCell" package="org.controlsfx.control.cell" super="org.controlsfx.control.GridCell" superParam="javafx.scene.media.Media" superParamPrepend="javafx.scene.media.Media, ">
      <constructor access="public" name="org.controlsfx.control.cell.MediaImageCell" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="pause" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="play" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="stop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="Decoration" genericParam="" genericParamPrepend="" name="Decoration" package="org.controlsfx.control.decoration" super="">
      <method abstract="true" access="public" final="false" name="applyDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Map&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      <method abstract="true" access="public" final="false" name="removeDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <property genericParam="java.lang.String, java.lang.Object" genericType="java.util.Map&lt;java.lang.String, java.lang.Object&gt;" name="properties" override="false" rawType="java.util.Map" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Map&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Decorator" genericParam="" genericParamPrepend="" name="Decorator" package="org.controlsfx.control.decoration" super="">
      <method abstract="false" access="public" final="true" name="addDecoration" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, org.controlsfx.control.decoration.Decoration arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="org.controlsfx.control.decoration.Decoration" name="arg1" type="org.controlsfx.control.decoration.Decoration"/>
      </method>
      <method abstract="false" access="public" final="true" name="getDecorations" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.decoration.Decoration&gt;" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeAllDecorations" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="removeDecoration" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, org.controlsfx.control.decoration.Decoration arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="org.controlsfx.control.decoration.Decoration" name="arg1" type="org.controlsfx.control.decoration.Decoration"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GraphicDecoration" genericParam="" genericParamPrepend="" name="GraphicDecoration" package="org.controlsfx.control.decoration" super="org.controlsfx.control.decoration.Decoration" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.decoration.GraphicDecoration" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.decoration.GraphicDecoration" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.decoration.GraphicDecoration" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.Node arg0, javafx.geometry.Pos arg1, double arg2, double arg3" public="true" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        <parameter genericType="javafx.geometry.Pos" name="arg1" type="javafx.geometry.Pos"/>
        <parameter genericType="double" name="arg2" type="double"/>
        <parameter genericType="double" name="arg3" type="double"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="applyDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="removeDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="StyleClassDecoration" genericParam="" genericParamPrepend="" name="StyleClassDecoration" package="org.controlsfx.control.decoration" super="org.controlsfx.control.decoration.Decoration" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.decoration.StyleClassDecoration" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String[] arg0" public="true" static="false">
        <parameter genericType="java.lang.String[]" name="arg0" type="java.lang.String[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="applyDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="javafx.scene.Node" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="false" name="removeDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GridBase" genericParam="" genericParamPrepend="" name="GridBase" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.GridBase" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="false" name="getColumnCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getColumnHeaders" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowHeaders" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="double" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getRows" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getSpanType" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0, int arg1, int arg2" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetView.SpanType" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="isLocked" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isRowResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="lockedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setCellValue" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, java.lang.Object arg2" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.lang.Object" name="arg2" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="setLocked" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Boolean" name="arg0" type="java.lang.Boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setResizableRows" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.BitSet arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.BitSet" name="arg0" type="java.util.BitSet"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRowHeightCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, java.lang.Double&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, java.lang.Double&gt;" name="arg0" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRows" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.Collection&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="spanColumn" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="spanRow" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="int arg0, int arg1, int arg2" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <property genericParam="" genericType="int" name="columnCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getColumnCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="columnHeaders" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getColumnHeaders" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="locked" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isLocked" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Boolean" index="" name="setLocked" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Boolean arg0" public="true" rawType="java.lang.Boolean" returnType="void" static="false">
          <parameter genericType="java.lang.Boolean" name="arg0" type="java.lang.Boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.util.BitSet" name="resizableRows" override="false" rawType="java.util.BitSet" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.util.BitSet" index="" name="setResizableRows" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.BitSet arg0" public="true" rawType="java.util.BitSet" returnType="void" static="false">
          <parameter genericType="java.util.BitSet" name="arg0" type="java.util.BitSet"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="rowCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="rowHeaders" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getRowHeaders" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="java.lang.Integer, java.lang.Double" genericType="javafx.util.Callback&lt;java.lang.Integer, java.lang.Double&gt;" name="rowHeightCallback" override="false" rawType="javafx.util.Callback" static="false">
        <setter abstract="false" access="public" final="false" genericParam="java.lang.Integer, java.lang.Double" genericType="javafx.util.Callback&lt;java.lang.Integer, java.lang.Double&gt;" index="" name="setRowHeightCallback" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Callback&lt;java.lang.Integer, java.lang.Double&gt; arg0" public="true" rawType="javafx.util.Callback" returnType="void" static="false">
          <parameter genericType="javafx.util.Callback&lt;java.lang.Integer, java.lang.Double&gt;" name="arg0" type="javafx.util.Callback"/>
        </setter>
      </property>
      <property genericParam="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;" genericType="javafx.collections.ObservableList&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt;" name="rows" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getRows" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;" genericType="java.util.Collection&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt;" index="" name="setRows" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt; arg0" public="true" rawType="java.util.Collection" returnType="void" static="false">
          <parameter genericType="java.util.Collection&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;&gt;" name="arg0" type="java.util.Collection"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GridBase.MapBasedRowHeightFactory" genericParam="" genericParamPrepend="" name="GridBase.MapBasedRowHeightFactory" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.GridBase$MapBasedRowHeightFactory" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Map&lt;java.lang.Integer, java.lang.Double&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.Map&lt;java.lang.Integer, java.lang.Double&gt;" name="arg0" type="java.util.Map"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Integer arg0" public="true" returnType="java.lang.Double" static="false">
        <parameter genericType="java.lang.Integer" name="arg0" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GridChange" genericParam="" genericParamPrepend="" name="GridChange" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.GridChange" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, java.lang.Object arg2, java.lang.Object arg3" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.lang.Object" name="arg2" type="java.lang.Object"/>
        <parameter genericType="java.lang.Object" name="arg3" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="GRID_CHANGE_EVENT" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <property genericParam="" genericType="int" name="column" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="newValue" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getNewValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="oldValue" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getOldValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="row" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Picker" genericParam="" genericParamPrepend="" name="Picker" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.Picker" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.Picker" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String[] arg0" public="true" static="false">
        <parameter genericType="java.lang.String[]" name="arg0" type="java.lang.String[]"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.Picker" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;java.lang.String&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.Collection&lt;java.lang.String&gt;" name="arg0" type="java.util.Collection"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="onClick" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableList&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.String&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellBase" genericParam="" genericParamPrepend="" name="SpreadsheetCellBase" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellBase" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, int arg1, int arg2, int arg3" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellBase" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, org.controlsfx.control.spreadsheet.SpreadsheetCellType&lt;?&gt; arg4" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetCellType&lt;?&gt;" name="arg4" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="activateCorner" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition"/>
      </method>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;javafx.event.Event&gt; arg0, javafx.event.EventHandler&lt;javafx.event.Event&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="false" access="public" final="false" name="deactivateCorner" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition"/>
      </method>
      <method abstract="false" access="public" final="true" name="equals" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="formatProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="getCellType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellType" static="false"/>
      <method abstract="false" access="public" final="true" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getColumnSpan" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getFormat" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="true" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="getRowSpan" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getTooltip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="graphicProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="hashCode" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="isCornerActivated" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetCell.CornerPosition"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="itemProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetCell arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetCell" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetCell"/>
      </method>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;javafx.event.Event&gt; arg0, javafx.event.EventHandler&lt;javafx.event.Event&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;javafx.event.Event&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;javafx.event.Event&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setColumnSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setFormat" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRowSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setTooltip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="styleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="textProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyStringProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="org.controlsfx.control.spreadsheet.SpreadsheetCellType" name="cellType" override="false" rawType="org.controlsfx.control.spreadsheet.SpreadsheetCellType" static="false">
        <getter abstract="false" access="public" final="true" name="getCellType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellType" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="column" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="columnSpan" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getColumnSpan" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setColumnSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="format" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getFormat" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setFormat" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="false" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.Node" index="" name="setGraphic" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="item" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="true" name="getItem" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.Object" index="" name="setItem" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="row" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="rowSpan" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getRowSpan" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setRowSpan" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="style" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getStyle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.String" index="" name="setStyle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.collections.ObservableSet&lt;java.lang.String&gt;" name="styleClass" override="false" rawType="javafx.collections.ObservableSet" static="false">
        <getter abstract="false" access="public" final="true" name="getStyleClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableSet&lt;java.lang.String&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="text" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="java.lang.String" genericType="java.util.Optional&lt;java.lang.String&gt;" name="tooltip" override="false" rawType="java.util.Optional" static="false">
        <getter abstract="false" access="public" final="false" name="getTooltip" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;java.lang.String&gt;" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.String" index="" name="setTooltip" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="wrapText" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isWrapText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setWrapText" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </constructor>
      <method abstract="true" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="endEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="true" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="true" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="true" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="true" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="true" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMaxHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor.DateEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor.DateEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$DateEditor" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0, javafx.util.StringConverter&lt;java.time.LocalDate&gt; arg1" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
        <parameter genericType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" name="arg1" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.DatePicker" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor.DoubleEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor.DoubleEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$DoubleEditor" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor.IntegerEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor.IntegerEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$IntegerEditor" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="R extends java.lang.Object" genericDeclarationPrepend="R extends java.lang.Object, " genericName="SpreadsheetCellEditor.ListEditor&lt;R&gt;" genericParam="R" genericParamPrepend="R, " name="SpreadsheetCellEditor.ListEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <typeParameter name="R"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$ListEditor" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0, java.util.List&lt;java.lang.String&gt; arg1" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
        <parameter genericType="java.util.List&lt;java.lang.String&gt;" name="arg1" type="java.util.List"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ComboBox&lt;java.lang.String&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="java.lang.String" genericType="javafx.scene.control.ComboBox&lt;java.lang.String&gt;" name="editor" override="false" rawType="javafx.scene.control.ComboBox" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ComboBox&lt;java.lang.String&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor.ObjectEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor.ObjectEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$ObjectEditor" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor.StringEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor.StringEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$StringEditor" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellEditor.TextAreaEditor" genericParam="" genericParamPrepend="" name="SpreadsheetCellEditor.TextAreaEditor" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor$TextAreaEditor" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="end" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextArea" static="false"/>
      <method abstract="false" access="public" final="false" name="getMaxHeight" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="startEdit" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.String" name="controlValue" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getControlValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.Control" name="editor" override="false" rawType="javafx.scene.control.Control" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.Control" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="maxHeight" override="true" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getMaxHeight" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="SpreadsheetCellType&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="SpreadsheetCellType" package="org.controlsfx.control.spreadsheet" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <field access="public" final="true" name="DATE" public="true" static="true" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType.DateType"/>
      <field access="public" final="true" name="DOUBLE" public="true" static="true" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType.DoubleType"/>
      <field access="public" final="true" name="INTEGER" public="true" static="true" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType.IntegerType"/>
      <field access="public" final="true" name="OBJECT" public="true" static="true" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType"/>
      <field access="public" final="true" name="STRING" public="true" static="true" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType.StringType"/>
      <method abstract="false" access="public" final="true" name="LIST" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;java.lang.String&gt; arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellType.ListType" static="true">
        <parameter genericType="java.util.List&lt;java.lang.String&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="false" name="acceptDrop" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="true" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="T" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="isError" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="true" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="T arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, java.lang.String arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellType.DateType" genericParam="" genericParamPrepend="" name="SpreadsheetCellType.DateType" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellType" superParam="java.time.LocalDate" superParamPrepend="java.time.LocalDate, ">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$DateType" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$DateType" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.time.LocalDate&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;java.time.LocalDate&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.time.LocalDate" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCell" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, java.time.LocalDate arg4" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCell" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="java.time.LocalDate" name="arg4" type="java.time.LocalDate"/>
      </method>
      <method abstract="false" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, java.lang.String arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.time.LocalDate arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.time.LocalDate" name="arg0" type="java.time.LocalDate"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.time.LocalDate arg0, java.lang.String arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.time.LocalDate" name="arg0" type="java.time.LocalDate"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellType.DoubleType" genericParam="" genericParamPrepend="" name="SpreadsheetCellType.DoubleType" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellType" superParam="java.lang.Double" superParamPrepend="java.lang.Double, ">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$DoubleType" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$DoubleType" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.lang.Double&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;java.lang.Double&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Double" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCell" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, java.lang.Double arg4" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCell" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="java.lang.Double" name="arg4" type="java.lang.Double"/>
      </method>
      <method abstract="false" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Double arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Double" name="arg0" type="java.lang.Double"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Double arg0, java.lang.String arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Double" name="arg0" type="java.lang.Double"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, java.lang.String arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellType.IntegerType" genericParam="" genericParamPrepend="" name="SpreadsheetCellType.IntegerType" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellType" superParam="java.lang.Integer" superParamPrepend="java.lang.Integer, ">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$IntegerType" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$IntegerType" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.converter.IntegerStringConverter arg0" public="true" static="false">
        <parameter genericType="javafx.util.converter.IntegerStringConverter" name="arg0" type="javafx.util.converter.IntegerStringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Integer" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCell" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, java.lang.Integer arg4" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCell" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="java.lang.Integer" name="arg4" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Integer arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Integer" name="arg0" type="java.lang.Integer"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellType.ListType" genericParam="" genericParamPrepend="" name="SpreadsheetCellType.ListType" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellType" superParam="java.lang.String" superParamPrepend="java.lang.String, ">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$ListType" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;java.lang.String&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.List&lt;java.lang.String&gt;" name="arg0" type="java.util.List"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCell" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, java.lang.String arg4" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCell" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="java.lang.String" name="arg4" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellType.ObjectType" genericParam="" genericParamPrepend="" name="SpreadsheetCellType.ObjectType" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellType" superParam="java.lang.Object" superParamPrepend="java.lang.Object, ">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$ObjectType" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$ObjectType" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.StringConverterWithFormat&lt;java.lang.Object&gt; arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.StringConverterWithFormat&lt;java.lang.Object&gt;" name="arg0" type="org.controlsfx.control.spreadsheet.StringConverterWithFormat"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCell" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, java.lang.Object arg4" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCell" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="java.lang.Object" name="arg4" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetCellType.StringType" genericParam="" genericParamPrepend="" name="SpreadsheetCellType.StringType" package="org.controlsfx.control.spreadsheet" super="org.controlsfx.control.spreadsheet.SpreadsheetCellType" superParam="java.lang.String" superParamPrepend="java.lang.String, ">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$StringType" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetCellType$StringType" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;java.lang.String&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;java.lang.String&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="convertValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="createCell" override="false" parameterCount="5" parametersCall="arg0, arg1, arg2, arg3, arg4" parametersDeclaration="int arg0, int arg1, int arg2, int arg3, java.lang.String arg4" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCell" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="int" name="arg3" type="int"/>
        <parameter genericType="java.lang.String" name="arg4" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="createEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetView arg0" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetCellEditor" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetView" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetView"/>
      </method>
      <method abstract="false" access="public" final="false" name="match" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="toString" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetColumn" genericParam="" genericParamPrepend="" name="SpreadsheetColumn" package="org.controlsfx.control.spreadsheet" super="">
      <method abstract="false" access="public" final="false" name="fitColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="isColumnFixable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isFixed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="setFixed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <property genericParam="" genericType="boolean" name="columnFixable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isColumnFixable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="fixed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isFixed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setFixed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="prefWidth" override="false" rawType="double" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setPrefWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="resizable" override="false" rawType="boolean" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setResizable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetView" genericParam="" genericParamPrepend="" name="SpreadsheetView" package="org.controlsfx.control.spreadsheet" super="javafx.scene.control.Control" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetView" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetView" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.Grid arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.Grid" name="arg0" type="org.controlsfx.control.spreadsheet.Grid"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="areColumnsFixable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;? extends java.lang.Integer&gt; arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.util.List&lt;? extends java.lang.Integer&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="false" name="areRowsFixable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;? extends java.lang.Integer&gt; arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.util.List&lt;? extends java.lang.Integer&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="false" name="areSpreadsheetColumnsFixable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;? extends org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt; arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="java.util.List&lt;? extends org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="false" name="copyClipboard" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="deleteSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="editableProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="editingCellProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;javafx.scene.control.TablePosition&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;, ?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="fixingColumnsAllowedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="fixingRowsAllowedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getColumnPickers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Integer, org.controlsfx.control.spreadsheet.Picker&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getEditingCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;, ?&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetCellType&lt;?&gt; arg0" public="true" returnType="java.util.Optional&lt;org.controlsfx.control.spreadsheet.SpreadsheetCellEditor&gt;" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetCellType&lt;?&gt;" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetCellType"/>
      </method>
      <method abstract="false" access="public" final="false" name="getFixedColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getFixedRows" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Integer&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getGrid" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.spreadsheet.Grid" static="false"/>
      <method abstract="false" access="public" final="true" name="getRowHeaderWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getRowHeight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="double" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getRowPickers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Integer, org.controlsfx.control.spreadsheet.Picker&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetViewSelectionModel" static="false"/>
      <method abstract="false" access="public" final="false" name="getSpanType" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, int arg1" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetView.SpanType" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="int" name="arg1" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getSpreadsheetViewContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      <method abstract="false" access="public" final="true" name="gridProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;org.controlsfx.control.spreadsheet.Grid&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="isColumnFixable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isFixingColumnsAllowed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isFixingRowsAllowed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isRowFixable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="isShowColumnHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isShowRowHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="pasteClipboard" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="resizeRowsToDefault" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="resizeRowsToFitContent" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="resizeRowsToMaximum" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="rowHeaderWidthProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.DoubleProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="scrollToColumn" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.SpreadsheetColumn arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetColumn" name="arg0" type="org.controlsfx.control.spreadsheet.SpreadsheetColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollToColumnIndex" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="scrollToRow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFixingColumnsAllowed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFixingRowsAllowed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setGrid" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.Grid arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.control.spreadsheet.Grid" name="arg0" type="org.controlsfx.control.spreadsheet.Grid"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRowHeaderWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowColumnHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setShowRowHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="showColumnHeaderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="showRowHeaderProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <property genericParam="java.lang.Integer, org.controlsfx.control.spreadsheet.Picker" genericType="javafx.collections.ObservableMap&lt;java.lang.Integer, org.controlsfx.control.spreadsheet.Picker&gt;" name="columnPickers" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="false" name="getColumnPickers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Integer, org.controlsfx.control.spreadsheet.Picker&gt;" static="false"/>
      </property>
      <property genericParam="org.controlsfx.control.spreadsheet.SpreadsheetColumn" genericType="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" name="columns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;, ?" genericType="javafx.scene.control.TablePosition&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;, ?&gt;" name="editingCell" override="false" rawType="javafx.scene.control.TablePosition" static="false">
        <getter abstract="false" access="public" final="false" name="getEditingCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition&lt;javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetCell&gt;, ?&gt;" static="false"/>
      </property>
      <property genericParam="org.controlsfx.control.spreadsheet.SpreadsheetColumn" genericType="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" name="fixedColumns" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getFixedColumns" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.spreadsheet.SpreadsheetColumn&gt;" static="false"/>
      </property>
      <property genericParam="java.lang.Integer" genericType="javafx.collections.ObservableList&lt;java.lang.Integer&gt;" name="fixedRows" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getFixedRows" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;java.lang.Integer&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="fixingColumnsAllowed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isFixingColumnsAllowed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setFixingColumnsAllowed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="fixingRowsAllowed" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isFixingRowsAllowed" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setFixingRowsAllowed" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.spreadsheet.Grid" name="grid" override="false" rawType="org.controlsfx.control.spreadsheet.Grid" static="false">
        <getter abstract="false" access="public" final="true" name="getGrid" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.spreadsheet.Grid" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="org.controlsfx.control.spreadsheet.Grid" index="" name="setGrid" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.spreadsheet.Grid arg0" public="true" rawType="org.controlsfx.control.spreadsheet.Grid" returnType="void" static="false">
          <parameter genericType="org.controlsfx.control.spreadsheet.Grid" name="arg0" type="org.controlsfx.control.spreadsheet.Grid"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="rowHeaderWidth" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="true" name="getRowHeaderWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="double" index="" name="setRowHeaderWidth" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="java.lang.Integer, org.controlsfx.control.spreadsheet.Picker" genericType="javafx.collections.ObservableMap&lt;java.lang.Integer, org.controlsfx.control.spreadsheet.Picker&gt;" name="rowPickers" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="false" name="getRowPickers" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Integer, org.controlsfx.control.spreadsheet.Picker&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.spreadsheet.SpreadsheetViewSelectionModel" name="selectionModel" override="false" rawType="org.controlsfx.control.spreadsheet.SpreadsheetViewSelectionModel" static="false">
        <getter abstract="false" access="public" final="false" name="getSelectionModel" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.spreadsheet.SpreadsheetViewSelectionModel" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="showColumnHeader" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowColumnHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowColumnHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="showRowHeader" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isShowRowHeader" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setShowRowHeader" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.control.ContextMenu" name="spreadsheetViewContextMenu" override="false" rawType="javafx.scene.control.ContextMenu" static="false">
        <getter abstract="false" access="public" final="false" name="getSpreadsheetViewContextMenu" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ContextMenu" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetView.ColumnWidthEvent" genericParam="" genericParamPrepend="" name="SpreadsheetView.ColumnWidthEvent" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetView$ColumnWidthEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, double arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <field access="public" final="true" name="COLUMN_WIDTH_CHANGE" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="false" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <property genericParam="" genericType="int" name="column" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getColumn" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
      <property genericParam="" genericType="double" name="width" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getWidth" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetView.RowHeightEvent" genericParam="" genericParamPrepend="" name="SpreadsheetView.RowHeightEvent" package="org.controlsfx.control.spreadsheet" super="">
      <constructor access="public" name="org.controlsfx.control.spreadsheet.SpreadsheetView$RowHeightEvent" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, double arg1" public="true" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="double" name="arg1" type="double"/>
      </constructor>
      <field access="public" final="true" name="ROW_HEIGHT_CHANGE" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <property genericParam="" genericType="double" name="height" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getHeight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="int" name="row" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="false" name="getRow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="SpreadsheetViewSelectionModel" genericParam="" genericParamPrepend="" name="SpreadsheetViewSelectionModel" package="org.controlsfx.control.spreadsheet" super="">
      <method abstract="false" access="public" final="true" name="clearAndSelect" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, org.controlsfx.control.spreadsheet.SpreadsheetColumn arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetColumn" name="arg1" type="org.controlsfx.control.spreadsheet.SpreadsheetColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="clearAndSelectLeftCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="clearAndSelectNextCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="clearAndSelectPreviousCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="clearAndSelectRightCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="clearSelection" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="true" name="focus" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, org.controlsfx.control.spreadsheet.SpreadsheetColumn arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetColumn" name="arg1" type="org.controlsfx.control.spreadsheet.SpreadsheetColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="getFocusedCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition" static="false"/>
      <method abstract="false" access="public" final="true" name="getSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TablePosition&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getSelectionMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SelectionMode" static="false"/>
      <method abstract="false" access="public" final="true" name="select" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="int arg0, org.controlsfx.control.spreadsheet.SpreadsheetColumn arg1" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetColumn" name="arg1" type="org.controlsfx.control.spreadsheet.SpreadsheetColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="selectAll" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="selectCells" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;javafx.util.Pair&lt;java.lang.Integer, java.lang.Integer&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.util.List&lt;javafx.util.Pair&lt;java.lang.Integer, java.lang.Integer&gt;&gt;" name="arg0" type="java.util.List"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectCells" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.Pair&lt;java.lang.Integer, java.lang.Integer&gt;[] arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.util.Pair&lt;java.lang.Integer, java.lang.Integer&gt;[]" name="arg0" type="javafx.util.Pair[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="selectRange" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="int arg0, org.controlsfx.control.spreadsheet.SpreadsheetColumn arg1, int arg2, org.controlsfx.control.spreadsheet.SpreadsheetColumn arg3" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetColumn" name="arg1" type="org.controlsfx.control.spreadsheet.SpreadsheetColumn"/>
        <parameter genericType="int" name="arg2" type="int"/>
        <parameter genericType="org.controlsfx.control.spreadsheet.SpreadsheetColumn" name="arg3" type="org.controlsfx.control.spreadsheet.SpreadsheetColumn"/>
      </method>
      <method abstract="false" access="public" final="true" name="setSelectionMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SelectionMode arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.SelectionMode" name="arg0" type="javafx.scene.control.SelectionMode"/>
      </method>
      <property genericParam="" genericType="javafx.scene.control.TablePosition" name="focusedCell" override="false" rawType="javafx.scene.control.TablePosition" static="false">
        <getter abstract="false" access="public" final="true" name="getFocusedCell" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TablePosition" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.TablePosition" genericType="javafx.collections.ObservableList&lt;javafx.scene.control.TablePosition&gt;" name="selectedCells" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="true" name="getSelectedCells" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;javafx.scene.control.TablePosition&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.control.SelectionMode" name="selectionMode" override="false" rawType="javafx.scene.control.SelectionMode" static="false">
        <getter abstract="false" access="public" final="false" name="getSelectionMode" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.SelectionMode" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.control.SelectionMode" index="" name="setSelectionMode" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.SelectionMode arg0" public="true" rawType="javafx.scene.control.SelectionMode" returnType="void" static="false">
          <parameter genericType="javafx.scene.control.SelectionMode" name="arg0" type="javafx.scene.control.SelectionMode"/>
        </setter>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="StringConverterWithFormat&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="StringConverterWithFormat" package="org.controlsfx.control.spreadsheet" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.StringConverterWithFormat" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.control.spreadsheet.StringConverterWithFormat" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.util.StringConverter&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg0" type="javafx.util.StringConverter"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="toStringFormat" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="T arg0, java.lang.String arg1" public="true" returnType="java.lang.String" static="false">
        <parameter genericType="T" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="TableFilter&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="TableFilter" package="org.controlsfx.control.table" super="">
      <typeParameter name="T"/>
      <constructor access="public" name="org.controlsfx.control.table.TableFilter" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableView&lt;T&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.scene.control.TableView&lt;T&gt;" name="arg0" type="javafx.scene.control.TableView"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="executeFilter" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getBackingList" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getColumnFilter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.TableColumn&lt;T, ?&gt; arg0" public="true" returnType="java.util.Optional&lt;impl.org.controlsfx.table.ColumnFilter&lt;T&gt;&gt;" static="false">
        <parameter genericType="javafx.scene.control.TableColumn&lt;T, ?&gt;" name="arg0" type="javafx.scene.control.TableColumn"/>
      </method>
      <method abstract="false" access="public" final="false" name="getColumnFilters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;impl.org.controlsfx.table.ColumnFilter&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getFilteredList" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.transformation.FilteredList&lt;T&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;T&gt;" static="false"/>
      <property genericParam="T" genericType="javafx.collections.ObservableList&lt;T&gt;" name="backingList" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getBackingList" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="impl.org.controlsfx.table.ColumnFilter&lt;T&gt;" genericType="javafx.collections.ObservableList&lt;impl.org.controlsfx.table.ColumnFilter&lt;T&gt;&gt;" name="columnFilters" override="false" rawType="javafx.collections.ObservableList" static="false">
        <getter abstract="false" access="public" final="false" name="getColumnFilters" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableList&lt;impl.org.controlsfx.table.ColumnFilter&lt;T&gt;&gt;" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.collections.transformation.FilteredList&lt;T&gt;" name="filteredList" override="false" rawType="javafx.collections.transformation.FilteredList" static="false">
        <getter abstract="false" access="public" final="false" name="getFilteredList" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.transformation.FilteredList&lt;T&gt;" static="false"/>
      </property>
      <property genericParam="T" genericType="javafx.scene.control.TableView&lt;T&gt;" name="tableView" override="false" rawType="javafx.scene.control.TableView" static="false">
        <getter abstract="false" access="public" final="false" name="getTableView" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TableView&lt;T&gt;" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object" genericDeclarationPrepend="T extends java.lang.Object, " genericName="AutoCompletionBinding&lt;T&gt;" genericParam="T" genericParamPrepend="T, " name="AutoCompletionBinding" package="org.controlsfx.control.textfield" super="">
      <typeParameter name="T"/>
      <method abstract="false" access="public" final="false" name="addEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="buildEventDispatchChain" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventDispatchChain arg0" public="true" returnType="javafx.event.EventDispatchChain" static="false">
        <parameter genericType="javafx.event.EventDispatchChain" name="arg0" type="javafx.event.EventDispatchChain"/>
      </method>
      <method abstract="true" access="public" final="false" name="dispose" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="getCompletionTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getOnAutoCompleted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getVisibleRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
      <method abstract="false" access="public" final="true" name="onAutoCompletedProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="removeEventHandler" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.event.EventType&lt;E&gt; arg0, javafx.event.EventHandler&lt;E&gt; arg1" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventType&lt;E&gt;" name="arg0" type="javafx.event.EventType"/>
        <parameter genericType="javafx.event.EventHandler&lt;E&gt;" name="arg1" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="false" name="setHideOnEscape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setOnAutoCompleted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
      </method>
      <method abstract="false" access="public" final="true" name="setUserInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="setVisibleRowCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="void" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="true" name="visibleRowCountProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.IntegerProperty" static="false"/>
      <property genericParam="" genericType="javafx.scene.Node" name="completionTarget" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="false" name="getCompletionTarget" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="hideOnEscape" override="false" rawType="boolean" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setHideOnEscape" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;" name="onAutoCompleted" override="false" rawType="javafx.event.EventHandler" static="false">
        <getter abstract="false" access="public" final="true" name="getOnAutoCompleted" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;" genericType="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;" index="" name="setOnAutoCompleted" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt; arg0" public="true" rawType="javafx.event.EventHandler" returnType="void" static="false">
          <parameter genericType="javafx.event.EventHandler&lt;org.controlsfx.control.textfield.AutoCompletionBinding.AutoCompletionEvent&lt;T&gt;&gt;" name="arg0" type="javafx.event.EventHandler"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userInput" override="false" rawType="java.lang.String" static="false">
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setUserInput" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="int" name="visibleRowCount" override="false" rawType="int" static="false">
        <getter abstract="false" access="public" final="true" name="getVisibleRowCount" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="int" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="int" index="" name="setVisibleRowCount" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" rawType="int" returnType="void" static="false">
          <parameter genericType="int" name="arg0" type="int"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="TE extends java.lang.Object" genericDeclarationPrepend="TE extends java.lang.Object, " genericName="AutoCompletionBinding.AutoCompletionEvent&lt;TE&gt;" genericParam="TE" genericParamPrepend="TE, " name="AutoCompletionBinding.AutoCompletionEvent" package="org.controlsfx.control.textfield" super="">
      <typeParameter name="TE"/>
      <constructor access="public" name="org.controlsfx.control.textfield.AutoCompletionBinding$AutoCompletionEvent" parameterCount="1" parametersCall="arg0" parametersDeclaration="TE arg0" public="true" static="false">
        <parameter genericType="TE" name="arg0" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="AUTO_COMPLETED" public="true" static="true" type="javafx.event.EventType"/>
      <method abstract="false" access="public" final="false" name="getCompletion" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="TE" static="false"/>
      <property genericParam="" genericType="TE" name="completion" override="false" rawType="TE" static="false">
        <getter abstract="false" access="public" final="false" name="getCompletion" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="TE" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CustomPasswordField" genericParam="" genericParamPrepend="" name="CustomPasswordField" package="org.controlsfx.control.textfield" super="javafx.scene.control.PasswordField" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.textfield.CustomPasswordField" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="leftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="rightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Node" name="left" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="right" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CustomTextField" genericParam="" genericParamPrepend="" name="CustomTextField" package="org.controlsfx.control.textfield" super="javafx.scene.control.TextField" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.control.textfield.CustomTextField" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="true" name="leftProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="rightProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.Node&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <method abstract="false" access="public" final="true" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
      <property genericParam="" genericType="javafx.scene.Node" name="left" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getLeft" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setLeft" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="right" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="true" name="getRight" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="javafx.scene.Node" index="" name="setRight" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" rawType="javafx.scene.Node" returnType="void" static="false">
          <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="userAgentStylesheet" override="true" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getUserAgentStylesheet" override="true" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="TextFields" genericParam="" genericParamPrepend="" name="TextFields" package="org.controlsfx.control.textfield" super="">
      <method abstract="false" access="public" final="false" name="bindAutoCompletion" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.TextField arg0, T[] arg1" public="true" returnType="org.controlsfx.control.textfield.AutoCompletionBinding&lt;T&gt;" static="true">
        <parameter genericType="javafx.scene.control.TextField" name="arg0" type="javafx.scene.control.TextField"/>
        <parameter genericType="T[]" name="arg1" type="java.lang.Object[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="bindAutoCompletion" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.TextField arg0, java.util.Collection&lt;T&gt; arg1" public="true" returnType="org.controlsfx.control.textfield.AutoCompletionBinding&lt;T&gt;" static="true">
        <parameter genericType="javafx.scene.control.TextField" name="arg0" type="javafx.scene.control.TextField"/>
        <parameter genericType="java.util.Collection&lt;T&gt;" name="arg1" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="bindAutoCompletion" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.TextField arg0, javafx.util.Callback&lt;org.controlsfx.control.textfield.AutoCompletionBinding.ISuggestionRequest, java.util.Collection&lt;T&gt;&gt; arg1" public="true" returnType="org.controlsfx.control.textfield.AutoCompletionBinding&lt;T&gt;" static="true">
        <parameter genericType="javafx.scene.control.TextField" name="arg0" type="javafx.scene.control.TextField"/>
        <parameter genericType="javafx.util.Callback&lt;org.controlsfx.control.textfield.AutoCompletionBinding.ISuggestionRequest, java.util.Collection&lt;T&gt;&gt;" name="arg1" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="bindAutoCompletion" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.TextField arg0, javafx.util.Callback&lt;org.controlsfx.control.textfield.AutoCompletionBinding.ISuggestionRequest, java.util.Collection&lt;T&gt;&gt; arg1, javafx.util.StringConverter&lt;T&gt; arg2" public="true" returnType="org.controlsfx.control.textfield.AutoCompletionBinding&lt;T&gt;" static="true">
        <parameter genericType="javafx.scene.control.TextField" name="arg0" type="javafx.scene.control.TextField"/>
        <parameter genericType="javafx.util.Callback&lt;org.controlsfx.control.textfield.AutoCompletionBinding.ISuggestionRequest, java.util.Collection&lt;T&gt;&gt;" name="arg1" type="javafx.util.Callback"/>
        <parameter genericType="javafx.util.StringConverter&lt;T&gt;" name="arg2" type="javafx.util.StringConverter"/>
      </method>
      <method abstract="false" access="public" final="false" name="createClearablePasswordField" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.PasswordField" static="true"/>
      <method abstract="false" access="public" final="false" name="createClearableTextField" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.TextField" static="true"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CommandLinksDialog" genericParam="" genericParamPrepend="" name="CommandLinksDialog" package="org.controlsfx.dialog" super="javafx.scene.control.Dialog" superParam="javafx.scene.control.ButtonType" superParamPrepend="javafx.scene.control.ButtonType, ">
      <constructor access="public" name="org.controlsfx.dialog.CommandLinksDialog" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.List&lt;org.controlsfx.dialog.CommandLinksDialog.CommandLinksButtonType&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.List&lt;org.controlsfx.dialog.CommandLinksDialog.CommandLinksButtonType&gt;" name="arg0" type="java.util.List"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.dialog.CommandLinksDialog" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.CommandLinksDialog.CommandLinksButtonType[] arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.dialog.CommandLinksDialog.CommandLinksButtonType[]" name="arg0" type="org.controlsfx.dialog.CommandLinksDialog.CommandLinksButtonType[]"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CommandLinksDialog.CommandLinksButtonType" genericParam="" genericParamPrepend="" name="CommandLinksDialog.CommandLinksButtonType" package="org.controlsfx.dialog" super="">
      <constructor access="public" name="org.controlsfx.dialog.CommandLinksDialog$CommandLinksButtonType" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, boolean arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.dialog.CommandLinksDialog$CommandLinksButtonType" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, java.lang.String arg1, boolean arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.dialog.CommandLinksDialog$CommandLinksButtonType" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, java.lang.String arg1, javafx.scene.Node arg2, boolean arg3" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="javafx.scene.Node" name="arg2" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getButtonType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ButtonType" static="false"/>
      <method abstract="false" access="public" final="false" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="getLongText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <property genericParam="" genericType="javafx.scene.control.ButtonType" name="buttonType" override="false" rawType="javafx.scene.control.ButtonType" static="false">
        <getter abstract="false" access="public" final="false" name="getButtonType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.control.ButtonType" static="false"/>
      </property>
      <property genericParam="" genericType="javafx.scene.Node" name="graphic" override="false" rawType="javafx.scene.Node" static="false">
        <getter abstract="false" access="public" final="false" name="getGraphic" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="longText" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getLongText" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ExceptionDialog" genericParam="" genericParamPrepend="" name="ExceptionDialog" package="org.controlsfx.dialog" super="javafx.scene.control.Dialog" superParam="javafx.scene.control.ButtonType" superParamPrepend="javafx.scene.control.ButtonType, ">
      <constructor access="public" name="org.controlsfx.dialog.ExceptionDialog" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Throwable arg0" public="true" static="false">
        <parameter genericType="java.lang.Throwable" name="arg0" type="java.lang.Throwable"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="FontSelectorDialog" genericParam="" genericParamPrepend="" name="FontSelectorDialog" package="org.controlsfx.dialog" super="javafx.scene.control.Dialog" superParam="javafx.scene.text.Font" superParamPrepend="javafx.scene.text.Font, ">
      <constructor access="public" name="org.controlsfx.dialog.FontSelectorDialog" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.text.Font arg0" public="true" static="false">
        <parameter genericType="javafx.scene.text.Font" name="arg0" type="javafx.scene.text.Font"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="LoginDialog" genericParam="" genericParamPrepend="" name="LoginDialog" package="org.controlsfx.dialog" super="javafx.scene.control.Dialog" superParam="javafx.util.Pair&lt;java.lang.String, java.lang.String&gt;" superParamPrepend="javafx.util.Pair&lt;java.lang.String, java.lang.String&gt;, ">
      <constructor access="public" name="org.controlsfx.dialog.LoginDialog" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.util.Pair&lt;java.lang.String, java.lang.String&gt; arg0, javafx.util.Callback&lt;javafx.util.Pair&lt;java.lang.String, java.lang.String&gt;, java.lang.Void&gt; arg1" public="true" static="false">
        <parameter genericType="javafx.util.Pair&lt;java.lang.String, java.lang.String&gt;" name="arg0" type="javafx.util.Pair"/>
        <parameter genericType="javafx.util.Callback&lt;javafx.util.Pair&lt;java.lang.String, java.lang.String&gt;, java.lang.Void&gt;" name="arg1" type="javafx.util.Callback"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ProgressDialog" genericParam="" genericParamPrepend="" name="ProgressDialog" package="org.controlsfx.dialog" super="javafx.scene.control.Dialog" superParam="java.lang.Void" superParamPrepend="java.lang.Void, ">
      <constructor access="public" name="org.controlsfx.dialog.ProgressDialog" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.concurrent.Worker&lt;?&gt; arg0" public="true" static="false">
        <parameter genericType="javafx.concurrent.Worker&lt;?&gt;" name="arg0" type="javafx.concurrent.Worker"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Wizard" genericParam="" genericParamPrepend="" name="Wizard" package="org.controlsfx.dialog" super="">
      <constructor access="public" name="org.controlsfx.dialog.Wizard" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.dialog.Wizard" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.dialog.Wizard" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, java.lang.String arg1" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </constructor>
      <method abstract="false" access="public" final="true" name="flowProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.dialog.Wizard.Flow&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getFlow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.dialog.Wizard.Flow" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getSettings" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="hasProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="invalidProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="isInvalid" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="isReadSettings" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="true" name="readSettingsProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="true" name="resultProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;javafx.scene.control.ButtonType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="setFlow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.Wizard.Flow arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.dialog.Wizard.Flow" name="arg0" type="org.controlsfx.dialog.Wizard.Flow"/>
      </method>
      <method abstract="false" access="public" final="true" name="setInvalid" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setReadSettings" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="true" name="showAndWait" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;javafx.scene.control.ButtonType&gt;" static="false"/>
      <method abstract="false" access="public" final="true" name="titleProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.StringProperty" static="false"/>
      <property genericParam="" genericType="org.controlsfx.dialog.Wizard.Flow" name="flow" override="false" rawType="org.controlsfx.dialog.Wizard.Flow" static="false">
        <getter abstract="false" access="public" final="true" name="getFlow" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.dialog.Wizard.Flow" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="org.controlsfx.dialog.Wizard.Flow" index="" name="setFlow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.Wizard.Flow arg0" public="true" rawType="org.controlsfx.dialog.Wizard.Flow" returnType="void" static="false">
          <parameter genericType="org.controlsfx.dialog.Wizard.Flow" name="arg0" type="org.controlsfx.dialog.Wizard.Flow"/>
        </setter>
      </property>
      <property genericParam="" genericType="boolean" name="invalid" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isInvalid" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setInvalid" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="java.lang.Object, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" name="properties" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getProperties" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.Object, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="readSettings" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="true" name="isReadSettings" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="boolean" index="" name="setReadSettings" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="java.lang.String, java.lang.Object" genericType="javafx.collections.ObservableMap&lt;java.lang.String, java.lang.Object&gt;" name="settings" override="false" rawType="javafx.collections.ObservableMap" static="false">
        <getter abstract="false" access="public" final="true" name="getSettings" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.collections.ObservableMap&lt;java.lang.String, java.lang.Object&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="title" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="true" name="getTitle" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="true" genericParam="" genericType="java.lang.String" index="" name="setTitle" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="userData" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getUserData" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setUserData" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Wizard.LinearFlow" genericParam="" genericParamPrepend="" name="Wizard.LinearFlow" package="org.controlsfx.dialog" super="">
      <constructor access="public" name="org.controlsfx.dialog.Wizard$LinearFlow" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;org.controlsfx.dialog.WizardPane&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.Collection&lt;org.controlsfx.dialog.WizardPane&gt;" name="arg0" type="java.util.Collection"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.dialog.Wizard$LinearFlow" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.WizardPane[] arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.dialog.WizardPane[]" name="arg0" type="org.controlsfx.dialog.WizardPane[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="advance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.WizardPane arg0" public="true" returnType="java.util.Optional&lt;org.controlsfx.dialog.WizardPane&gt;" static="false">
        <parameter genericType="org.controlsfx.dialog.WizardPane" name="arg0" type="org.controlsfx.dialog.WizardPane"/>
      </method>
      <method abstract="false" access="public" final="false" name="canAdvance" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.WizardPane arg0" public="true" returnType="boolean" static="false">
        <parameter genericType="org.controlsfx.dialog.WizardPane" name="arg0" type="org.controlsfx.dialog.WizardPane"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="WizardPane" genericParam="" genericParamPrepend="" name="WizardPane" package="org.controlsfx.dialog" super="javafx.scene.control.DialogPane" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.dialog.WizardPane" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="onEnteringPage" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.Wizard arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.dialog.Wizard" name="arg0" type="org.controlsfx.dialog.Wizard"/>
      </method>
      <method abstract="false" access="public" final="false" name="onExitingPage" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.dialog.Wizard arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.dialog.Wizard" name="arg0" type="org.controlsfx.dialog.Wizard"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="FontAwesome" genericParam="" genericParamPrepend="" name="FontAwesome" package="org.controlsfx.glyphfont" super="org.controlsfx.glyphfont.GlyphFont" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.glyphfont.FontAwesome" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.glyphfont.FontAwesome" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.io.InputStream arg0" public="true" static="false">
        <parameter genericType="java.io.InputStream" name="arg0" type="java.io.InputStream"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.glyphfont.FontAwesome" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </constructor>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Glyph" genericParam="" genericParamPrepend="" name="Glyph" package="org.controlsfx.glyphfont" super="javafx.scene.control.Label" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.glyphfont.Glyph" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.glyphfont.Glyph" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, char arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="char" name="arg1" type="char"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.glyphfont.Glyph" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.Object arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.Object" name="arg1" type="java.lang.Object"/>
      </constructor>
      <field access="public" final="true" name="DEFAULT_CSS_CLASS" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_GRADIENT" public="true" static="true" type="java.lang.String"/>
      <field access="public" final="true" name="STYLE_HOVER_EFFECT" public="true" static="true" type="java.lang.String"/>
      <method abstract="false" access="public" final="false" name="color" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="false" name="create" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="duplicate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="duplicate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false"/>
      <method abstract="false" access="public" final="false" name="fontFamily" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="getFontFamily" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getFontSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getIcon" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="iconProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;java.lang.Object&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFontFamily" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="setFontSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="void" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="setIcon" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="size" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="double" name="arg0" type="double"/>
      </method>
      <method abstract="false" access="public" final="false" name="sizeFactor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="useGradientEffect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false"/>
      <method abstract="false" access="public" final="false" name="useHoverEffect" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false"/>
      <property genericParam="" genericType="javafx.scene.paint.Color" name="color" override="false" rawType="javafx.scene.paint.Color" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="javafx.scene.paint.Color" index="" name="setColor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.paint.Color arg0" public="true" rawType="javafx.scene.paint.Color" returnType="void" static="false">
          <parameter genericType="javafx.scene.paint.Color" name="arg0" type="javafx.scene.paint.Color"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="fontFamily" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getFontFamily" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.String" index="" name="setFontFamily" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" rawType="java.lang.String" returnType="void" static="false">
          <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        </setter>
      </property>
      <property genericParam="" genericType="double" name="fontSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getFontSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="double" index="" name="setFontSize" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="double arg0" public="true" rawType="double" returnType="void" static="false">
          <parameter genericType="double" name="arg0" type="double"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="icon" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getIcon" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setIcon" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GlyphFont" genericParam="" genericParamPrepend="" name="GlyphFont" package="org.controlsfx.glyphfont" super="">
      <constructor access="public" name="org.controlsfx.glyphfont.GlyphFont" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, int arg1, java.io.InputStream arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.io.InputStream" name="arg2" type="java.io.InputStream"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.glyphfont.GlyphFont" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, int arg1, java.lang.String arg2" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.glyphfont.GlyphFont" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, int arg1, java.io.InputStream arg2, boolean arg3" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.io.InputStream" name="arg2" type="java.io.InputStream"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.glyphfont.GlyphFont" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="java.lang.String arg0, int arg1, java.lang.String arg2, boolean arg3" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="int" name="arg1" type="int"/>
        <parameter genericType="java.lang.String" name="arg2" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="create" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="char arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="char" name="arg0" type="char"/>
      </method>
      <method abstract="false" access="public" final="false" name="create" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Enum&lt;?&gt; arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="java.lang.Enum&lt;?&gt;" name="arg0" type="java.lang.Enum"/>
      </method>
      <method abstract="false" access="public" final="false" name="create" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.glyphfont.Glyph" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="getCharacter" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="java.lang.Character" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="getDefaultSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      <method abstract="false" access="public" final="false" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="register" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.Character arg1" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.Character" name="arg1" type="java.lang.Character"/>
      </method>
      <method abstract="false" access="public" final="false" name="registerAll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Iterable&lt;? extends org.controlsfx.glyphfont.INamedCharacter&gt; arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Iterable&lt;? extends org.controlsfx.glyphfont.INamedCharacter&gt;" name="arg0" type="java.lang.Iterable"/>
      </method>
      <property genericParam="" genericType="double" name="defaultSize" override="false" rawType="double" static="false">
        <getter abstract="false" access="public" final="false" name="getDefaultSize" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="double" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GlyphFontRegistry" genericParam="" genericParamPrepend="" name="GlyphFontRegistry" package="org.controlsfx.glyphfont" super="">
      <method abstract="false" access="public" final="false" name="font" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.String arg0" public="true" returnType="org.controlsfx.glyphfont.GlyphFont" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="false" name="register" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, java.io.InputStream arg1, int arg2" public="true" returnType="void" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.io.InputStream" name="arg1" type="java.io.InputStream"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="register" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="java.lang.String arg0, java.lang.String arg1, int arg2" public="true" returnType="void" static="true">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="int" name="arg2" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="register" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.glyphfont.GlyphFont arg0" public="true" returnType="void" static="true">
        <parameter genericType="org.controlsfx.glyphfont.GlyphFont" name="arg0" type="org.controlsfx.glyphfont.GlyphFont"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BeanProperty" genericParam="" genericParamPrepend="" name="BeanProperty" package="org.controlsfx.property" super="">
      <constructor access="public" name="org.controlsfx.property.BeanProperty" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, java.beans.PropertyDescriptor arg1" public="true" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.beans.PropertyDescriptor" name="arg1" type="java.beans.PropertyDescriptor"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getBean" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="getCategory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getDescription" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      <method abstract="false" access="public" final="false" name="getObservableValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;javafx.beans.value.ObservableValue&lt;?&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getPropertyDescriptor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.beans.PropertyDescriptor" static="false"/>
      <method abstract="false" access="public" final="false" name="getPropertyEditorClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;java.lang.Class&lt;? extends org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Class&lt;?&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      <method abstract="false" access="public" final="false" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="void" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <property genericParam="" genericType="java.lang.Object" name="bean" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getBean" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="category" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getCategory" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.String" name="description" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getDescription" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="" genericType="boolean" name="editable" override="false" rawType="boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isEditable" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="boolean" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setEditable" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.String" name="name" override="false" rawType="java.lang.String" static="false">
        <getter abstract="false" access="public" final="false" name="getName" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.String" static="false"/>
      </property>
      <property genericParam="javafx.beans.value.ObservableValue&lt;?&gt;" genericType="java.util.Optional&lt;javafx.beans.value.ObservableValue&lt;?&gt;&gt;" name="observableValue" override="false" rawType="java.util.Optional" static="false">
        <getter abstract="false" access="public" final="false" name="getObservableValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;javafx.beans.value.ObservableValue&lt;?&gt;&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.beans.PropertyDescriptor" name="propertyDescriptor" override="false" rawType="java.beans.PropertyDescriptor" static="false">
        <getter abstract="false" access="public" final="false" name="getPropertyDescriptor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.beans.PropertyDescriptor" static="false"/>
      </property>
      <property genericParam="java.lang.Class&lt;? extends org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" genericType="java.util.Optional&lt;java.lang.Class&lt;? extends org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;&gt;" name="propertyEditorClass" override="false" rawType="java.util.Optional" static="false">
        <getter abstract="false" access="public" final="false" name="getPropertyEditorClass" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Optional&lt;java.lang.Class&lt;? extends org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;&gt;" static="false"/>
      </property>
      <property genericParam="?" genericType="java.lang.Class&lt;?&gt;" name="type" override="false" rawType="java.lang.Class" static="false">
        <getter abstract="false" access="public" final="false" name="getType" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Class&lt;?&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="java.lang.Object" name="value" override="false" rawType="java.lang.Object" static="false">
        <getter abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Object" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="java.lang.Object" index="" name="setValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" rawType="java.lang.Object" returnType="void" static="false">
          <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        </setter>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="BeanPropertyUtils" genericParam="" genericParamPrepend="" name="BeanPropertyUtils" package="org.controlsfx.property" super="">
      <method abstract="false" access="public" final="false" name="getProperties" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt;" static="true">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="getProperties" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.Object arg0, java.util.function.Predicate&lt;java.beans.PropertyDescriptor&gt; arg1" public="true" returnType="javafx.collections.ObservableList&lt;org.controlsfx.control.PropertySheet.Item&gt;" static="true">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
        <parameter genericType="java.util.function.Predicate&lt;java.beans.PropertyDescriptor&gt;" name="arg1" type="java.util.function.Predicate"/>
      </method>
    </class>
    <class abstract="true" genericDeclaration="T extends java.lang.Object, C extends javafx.scene.Node" genericDeclarationPrepend="T extends java.lang.Object, C extends javafx.scene.Node, " genericName="AbstractPropertyEditor&lt;T, C&gt;" genericParam="T, C" genericParamPrepend="T, C, " name="AbstractPropertyEditor" package="org.controlsfx.property.editor" super="">
      <typeParameter name="T"/>
      <typeParameter name="C"/>
      <constructor access="public" name="org.controlsfx.property.editor.AbstractPropertyEditor" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0, C arg1" public="true" static="false">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
        <parameter genericType="C" name="arg1" type="javafx.scene.Node"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.property.editor.AbstractPropertyEditor" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0, C arg1, boolean arg2" public="true" static="false">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
        <parameter genericType="C" name="arg1" type="javafx.scene.Node"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="C" static="false"/>
      <method abstract="false" access="public" final="true" name="getProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.PropertySheet.Item" static="false"/>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      <property genericParam="" genericType="C" name="editor" override="false" rawType="C" static="false">
        <getter abstract="false" access="public" final="false" name="getEditor" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="C" static="false"/>
      </property>
      <property genericParam="" genericType="org.controlsfx.control.PropertySheet.Item" name="property" override="false" rawType="org.controlsfx.control.PropertySheet.Item" static="false">
        <getter abstract="false" access="public" final="true" name="getProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.control.PropertySheet.Item" static="false"/>
      </property>
      <property genericParam="" genericType="T" name="value" override="false" rawType="T" static="false">
        <getter abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="T" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="DefaultPropertyEditorFactory" genericParam="" genericParamPrepend="" name="DefaultPropertyEditorFactory" package="org.controlsfx.property.editor" super="">
      <constructor access="public" name="org.controlsfx.property.editor.DefaultPropertyEditorFactory" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="java.lang.Object" static="false">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="call" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="false">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Editors" genericParam="" genericParamPrepend="" name="Editors" package="org.controlsfx.property.editor" super="">
      <method abstract="false" access="public" final="true" name="createCheckEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
      <method abstract="false" access="public" final="true" name="createChoiceEditor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0, java.util.Collection&lt;T&gt; arg1" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
        <parameter genericType="java.util.Collection&lt;T&gt;" name="arg1" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="true" name="createColorEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
      <method abstract="false" access="public" final="true" name="createCustomEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="java.util.Optional&lt;org.controlsfx.property.editor.PropertyEditor&lt;?&gt;&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
      <method abstract="false" access="public" final="true" name="createDateEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
      <method abstract="false" access="public" final="true" name="createFontEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
      <method abstract="false" access="public" final="true" name="createNumericEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
      <method abstract="false" access="public" final="true" name="createTextEditor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.control.PropertySheet.Item arg0" public="true" returnType="org.controlsfx.property.editor.PropertyEditor&lt;?&gt;" static="true">
        <parameter genericType="org.controlsfx.control.PropertySheet.Item" name="arg0" type="org.controlsfx.control.PropertySheet.Item"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Borders" genericParam="" genericParamPrepend="" name="Borders" package="org.controlsfx.tools" super="">
      <method abstract="false" access="public" final="false" name="addBorder" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.tools.Borders.Border arg0" public="true" returnType="org.controlsfx.tools.Borders" static="false">
        <parameter genericType="org.controlsfx.tools.Borders.Border" name="arg0" type="org.controlsfx.tools.Borders.Border"/>
      </method>
      <method abstract="false" access="public" final="false" name="build" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.scene.Node" static="false"/>
      <method abstract="false" access="public" final="false" name="emptyBorder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.tools.Borders.EmptyBorders" static="false"/>
      <method abstract="false" access="public" final="false" name="etchedBorder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.tools.Borders.EtchedBorders" static="false"/>
      <method abstract="false" access="public" final="false" name="lineBorder" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.tools.Borders.LineBorders" static="false"/>
      <method abstract="false" access="public" final="false" name="wrap" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="org.controlsfx.tools.Borders" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="Utils" genericParam="" genericParamPrepend="" name="Utils" package="org.controlsfx.tools" super="">
      <constructor access="public" name="org.controlsfx.tools.Utils" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="clamp" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="double" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
      <method abstract="false" access="public" final="true" name="getExcelLetterFromNumber" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="int arg0" public="true" returnType="java.lang.String" static="true">
        <parameter genericType="int" name="arg0" type="int"/>
      </method>
      <method abstract="false" access="public" final="false" name="getWindow" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.lang.Object arg0" public="true" returnType="javafx.stage.Window" static="true">
        <parameter genericType="java.lang.Object" name="arg0" type="java.lang.Object"/>
      </method>
      <method abstract="false" access="public" final="false" name="nearest" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="double arg0, double arg1, double arg2" public="true" returnType="double" static="true">
        <parameter genericType="double" name="arg0" type="double"/>
        <parameter genericType="double" name="arg1" type="double"/>
        <parameter genericType="double" name="arg2" type="double"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ValueExtractor" genericParam="" genericParamPrepend="" name="ValueExtractor" package="org.controlsfx.tools" super="">
      <method abstract="false" access="public" final="false" name="addObservableValueExtractor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.util.function.Predicate&lt;javafx.scene.control.Control&gt; arg0, javafx.util.Callback&lt;javafx.scene.control.Control, javafx.beans.value.ObservableValue&lt;?&gt;&gt; arg1" public="true" returnType="void" static="true">
        <parameter genericType="java.util.function.Predicate&lt;javafx.scene.control.Control&gt;" name="arg0" type="java.util.function.Predicate"/>
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.control.Control, javafx.beans.value.ObservableValue&lt;?&gt;&gt;" name="arg1" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="false" name="addValueExtractor" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.util.function.Predicate&lt;javafx.scene.Node&gt; arg0, javafx.util.Callback&lt;javafx.scene.Node, java.lang.Object&gt; arg1" public="true" returnType="void" static="true">
        <parameter genericType="java.util.function.Predicate&lt;javafx.scene.Node&gt;" name="arg0" type="java.util.function.Predicate"/>
        <parameter genericType="javafx.util.Callback&lt;javafx.scene.Node, java.lang.Object&gt;" name="arg1" type="javafx.util.Callback"/>
      </method>
      <method abstract="false" access="public" final="true" name="getObservableValueExtractor" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Control arg0" public="true" returnType="java.util.Optional&lt;javafx.util.Callback&lt;javafx.scene.control.Control, javafx.beans.value.ObservableValue&lt;?&gt;&gt;&gt;" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
      </method>
      <method abstract="false" access="public" final="false" name="getValue" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.Node arg0" public="true" returnType="java.lang.Object" static="true">
        <parameter genericType="javafx.scene.Node" name="arg0" type="javafx.scene.Node"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ValidationResult" genericParam="" genericParamPrepend="" name="ValidationResult" package="org.controlsfx.validation" super="">
      <constructor access="public" name="org.controlsfx.validation.ValidationResult" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="add" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationMessage arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="org.controlsfx.validation.ValidationMessage" name="arg0" type="org.controlsfx.validation.ValidationMessage"/>
      </method>
      <method abstract="false" access="public" final="false" name="addAll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.validation.ValidationMessage&gt; arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.validation.ValidationMessage&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="addAll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationMessage[] arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="org.controlsfx.validation.ValidationMessage[]" name="arg0" type="org.controlsfx.validation.ValidationMessage[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="addErrorIf" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1, boolean arg2" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="addMessageIf" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1, org.controlsfx.validation.Severity arg2, boolean arg3" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="org.controlsfx.validation.Severity" name="arg2" type="org.controlsfx.validation.Severity"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="addWarningIf" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1, boolean arg2" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="combine" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationResult arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="org.controlsfx.validation.ValidationResult" name="arg0" type="org.controlsfx.validation.ValidationResult"/>
      </method>
      <method abstract="false" access="public" final="false" name="combineAll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;org.controlsfx.validation.ValidationResult&gt; arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="java.util.Collection&lt;org.controlsfx.validation.ValidationResult&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="false" name="combineAll" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationResult[] arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false">
        <parameter genericType="org.controlsfx.validation.ValidationResult[]" name="arg0" type="org.controlsfx.validation.ValidationResult[]"/>
      </method>
      <method abstract="false" access="public" final="false" name="copy" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false"/>
      <method abstract="false" access="public" final="true" name="fromError" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromErrorIf" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1, boolean arg2" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromMessageIf" override="false" parameterCount="4" parametersCall="arg0, arg1, arg2, arg3" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1, org.controlsfx.validation.Severity arg2, boolean arg3" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="org.controlsfx.validation.Severity" name="arg2" type="org.controlsfx.validation.Severity"/>
        <parameter genericType="boolean" name="arg3" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromMessages" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;? extends org.controlsfx.validation.ValidationMessage&gt; arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="java.util.Collection&lt;? extends org.controlsfx.validation.ValidationMessage&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromMessages" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationMessage[] arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="org.controlsfx.validation.ValidationMessage[]" name="arg0" type="org.controlsfx.validation.ValidationMessage[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromResults" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;org.controlsfx.validation.ValidationResult&gt; arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="java.util.Collection&lt;org.controlsfx.validation.ValidationResult&gt;" name="arg0" type="java.util.Collection"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromResults" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationResult[] arg0" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="org.controlsfx.validation.ValidationResult[]" name="arg0" type="org.controlsfx.validation.ValidationResult[]"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromWarning" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </method>
      <method abstract="false" access="public" final="true" name="fromWarningIf" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.Control arg0, java.lang.String arg1, boolean arg2" public="true" returnType="org.controlsfx.validation.ValidationResult" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
        <parameter genericType="boolean" name="arg2" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="getErrors" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getMessages" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getWarnings" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false"/>
      <property genericParam="org.controlsfx.validation.ValidationMessage" genericType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" name="errors" override="false" rawType="java.util.Collection" static="false">
        <getter abstract="false" access="public" final="false" name="getErrors" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false"/>
      </property>
      <property genericParam="org.controlsfx.validation.ValidationMessage" genericType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" name="messages" override="false" rawType="java.util.Collection" static="false">
        <getter abstract="false" access="public" final="false" name="getMessages" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false"/>
      </property>
      <property genericParam="org.controlsfx.validation.ValidationMessage" genericType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" name="warnings" override="false" rawType="java.util.Collection" static="false">
        <getter abstract="false" access="public" final="false" name="getWarnings" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Collection&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false"/>
      </property>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="ValidationSupport" genericParam="" genericParamPrepend="" name="ValidationSupport" package="org.controlsfx.validation" super="">
      <constructor access="public" name="org.controlsfx.validation.ValidationSupport" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="errorDecorationEnabledProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.BooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="getHighestMessage" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Control arg0" public="true" returnType="java.util.Optional&lt;org.controlsfx.validation.ValidationMessage&gt;" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
      </method>
      <method abstract="false" access="public" final="false" name="getRegisteredControls" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;javafx.scene.control.Control&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="getValidationDecorator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.validation.decoration.ValidationDecoration" static="false"/>
      <method abstract="false" access="public" final="false" name="getValidationResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false"/>
      <method abstract="false" access="public" final="false" name="initInitialDecoration" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="invalidProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyBooleanProperty" static="false"/>
      <method abstract="false" access="public" final="false" name="isInvalid" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Boolean" static="false"/>
      <method abstract="false" access="public" final="false" name="isRequired" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Control arg0" public="true" returnType="boolean" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
      </method>
      <method abstract="false" access="public" final="false" name="redecorate" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="void" static="false"/>
      <method abstract="false" access="public" final="false" name="registerValidator" override="false" parameterCount="3" parametersCall="arg0, arg1, arg2" parametersDeclaration="javafx.scene.control.Control arg0, boolean arg1, org.controlsfx.validation.Validator&lt;T&gt; arg2" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
        <parameter genericType="org.controlsfx.validation.Validator&lt;T&gt;" name="arg2" type="org.controlsfx.validation.Validator"/>
      </method>
      <method abstract="false" access="public" final="false" name="registerValidator" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.Control arg0, org.controlsfx.validation.Validator&lt;T&gt; arg1" public="true" returnType="boolean" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="org.controlsfx.validation.Validator&lt;T&gt;" name="arg1" type="org.controlsfx.validation.Validator"/>
      </method>
      <method abstract="false" access="public" final="false" name="setErrorDecorationEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" returnType="void" static="false">
        <parameter genericType="boolean" name="arg0" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setRequired" override="false" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="javafx.scene.control.Control arg0, boolean arg1" public="true" returnType="void" static="true">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
        <parameter genericType="boolean" name="arg1" type="boolean"/>
      </method>
      <method abstract="false" access="public" final="false" name="setValidationDecorator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.decoration.ValidationDecoration arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.validation.decoration.ValidationDecoration" name="arg0" type="org.controlsfx.validation.decoration.ValidationDecoration"/>
      </method>
      <method abstract="false" access="public" final="false" name="validationDecoratorProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ObjectProperty&lt;org.controlsfx.validation.decoration.ValidationDecoration&gt;" static="false"/>
      <method abstract="false" access="public" final="false" name="validationResultProperty" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="javafx.beans.property.ReadOnlyObjectProperty&lt;org.controlsfx.validation.ValidationResult&gt;" static="false"/>
      <property genericParam="" genericType="boolean" name="errorDecorationEnabled" override="false" rawType="boolean" static="false">
        <setter abstract="false" access="public" final="false" genericParam="" genericType="boolean" index="" name="setErrorDecorationEnabled" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="boolean arg0" public="true" rawType="boolean" returnType="void" static="false">
          <parameter genericType="boolean" name="arg0" type="boolean"/>
        </setter>
      </property>
      <property genericParam="" genericType="java.lang.Boolean" name="invalid" override="false" rawType="java.lang.Boolean" static="false">
        <getter abstract="false" access="public" final="false" name="isInvalid" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.lang.Boolean" static="false"/>
      </property>
      <property genericParam="javafx.scene.control.Control" genericType="java.util.Set&lt;javafx.scene.control.Control&gt;" name="registeredControls" override="false" rawType="java.util.Set" static="false">
        <getter abstract="false" access="public" final="false" name="getRegisteredControls" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="java.util.Set&lt;javafx.scene.control.Control&gt;" static="false"/>
      </property>
      <property genericParam="" genericType="org.controlsfx.validation.decoration.ValidationDecoration" name="validationDecorator" override="false" rawType="org.controlsfx.validation.decoration.ValidationDecoration" static="false">
        <getter abstract="false" access="public" final="false" name="getValidationDecorator" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.validation.decoration.ValidationDecoration" static="false"/>
        <setter abstract="false" access="public" final="false" genericParam="" genericType="org.controlsfx.validation.decoration.ValidationDecoration" index="" name="setValidationDecorator" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.decoration.ValidationDecoration arg0" public="true" rawType="org.controlsfx.validation.decoration.ValidationDecoration" returnType="void" static="false">
          <parameter genericType="org.controlsfx.validation.decoration.ValidationDecoration" name="arg0" type="org.controlsfx.validation.decoration.ValidationDecoration"/>
        </setter>
      </property>
      <property genericParam="" genericType="org.controlsfx.validation.ValidationResult" name="validationResult" override="false" rawType="org.controlsfx.validation.ValidationResult" static="false">
        <getter abstract="false" access="public" final="false" name="getValidationResult" override="false" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" returnType="org.controlsfx.validation.ValidationResult" static="false"/>
      </property>
    </class>
    <class abstract="true" genericDeclaration="" genericDeclarationPrepend="" genericName="AbstractValidationDecoration" genericParam="" genericParamPrepend="" name="AbstractValidationDecoration" package="org.controlsfx.validation.decoration" super="">
      <constructor access="public" name="org.controlsfx.validation.decoration.AbstractValidationDecoration" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <method abstract="false" access="public" final="false" name="applyRequiredDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Control arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
      </method>
      <method abstract="false" access="public" final="false" name="applyValidationDecoration" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationMessage arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.validation.ValidationMessage" name="arg0" type="org.controlsfx.validation.ValidationMessage"/>
      </method>
      <method abstract="false" access="public" final="false" name="removeDecorations" override="false" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Control arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="CompoundValidationDecoration" genericParam="" genericParamPrepend="" name="CompoundValidationDecoration" package="org.controlsfx.validation.decoration" super="org.controlsfx.validation.decoration.AbstractValidationDecoration" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.validation.decoration.CompoundValidationDecoration" parameterCount="1" parametersCall="arg0" parametersDeclaration="java.util.Collection&lt;org.controlsfx.validation.decoration.ValidationDecoration&gt; arg0" public="true" static="false">
        <parameter genericType="java.util.Collection&lt;org.controlsfx.validation.decoration.ValidationDecoration&gt;" name="arg0" type="java.util.Collection"/>
      </constructor>
      <constructor access="public" name="org.controlsfx.validation.decoration.CompoundValidationDecoration" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.decoration.ValidationDecoration[] arg0" public="true" static="false">
        <parameter genericType="org.controlsfx.validation.decoration.ValidationDecoration[]" name="arg0" type="org.controlsfx.validation.decoration.ValidationDecoration[]"/>
      </constructor>
      <method abstract="false" access="public" final="false" name="applyRequiredDecoration" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="javafx.scene.control.Control arg0" public="true" returnType="void" static="false">
        <parameter genericType="javafx.scene.control.Control" name="arg0" type="javafx.scene.control.Control"/>
      </method>
      <method abstract="false" access="public" final="false" name="applyValidationDecoration" override="true" parameterCount="1" parametersCall="arg0" parametersDeclaration="org.controlsfx.validation.ValidationMessage arg0" public="true" returnType="void" static="false">
        <parameter genericType="org.controlsfx.validation.ValidationMessage" name="arg0" type="org.controlsfx.validation.ValidationMessage"/>
      </method>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="GraphicValidationDecoration" genericParam="" genericParamPrepend="" name="GraphicValidationDecoration" package="org.controlsfx.validation.decoration" super="org.controlsfx.validation.decoration.AbstractValidationDecoration" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.validation.decoration.GraphicValidationDecoration" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
    </class>
    <class abstract="false" genericDeclaration="" genericDeclarationPrepend="" genericName="StyleClassValidationDecoration" genericParam="" genericParamPrepend="" name="StyleClassValidationDecoration" package="org.controlsfx.validation.decoration" super="org.controlsfx.validation.decoration.AbstractValidationDecoration" superParam="" superParamPrepend="">
      <constructor access="public" name="org.controlsfx.validation.decoration.StyleClassValidationDecoration" parameterCount="0" parametersCall="" parametersDeclaration="" public="true" static="false"/>
      <constructor access="public" name="org.controlsfx.validation.decoration.StyleClassValidationDecoration" parameterCount="2" parametersCall="arg0, arg1" parametersDeclaration="java.lang.String arg0, java.lang.String arg1" public="true" static="false">
        <parameter genericType="java.lang.String" name="arg0" type="java.lang.String"/>
        <parameter genericType="java.lang.String" name="arg1" type="java.lang.String"/>
      </constructor>
    </class>
  </jar>
</reflection>

